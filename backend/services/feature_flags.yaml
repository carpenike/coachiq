# Feature flag definitions for rvc2api backend
#
# This YAML file defines all available features, their enabled state, and dependencies.
#
# Naming convention: use descriptive, positive, boolean-style names (e.g., enable_x, show_y)
#
# Example:
# enable_bulk_actions:
#   enabled: true
#   depends_on:
#     - enable_admin_panel

# Core infrastructure features
entity_manager:
  enabled: true
  core: true
  depends_on: []
  description: "Entity state management and configuration service"

app_state:
  enabled: true
  core: true
  depends_on: [entity_manager]
  description: "Application state management service (legacy compatibility)"

websocket:
  enabled: true
  core: true
  depends_on: [app_state]
  description: "WebSocket connection management for real-time updates"

# CAN bus and protocol features
can_interface:
  enabled: true
  core: true
  depends_on: [app_state]
  description: "CAN bus interface capability"

can_interface_mapping:
  enabled: true
  core: false
  depends_on: [can_interface]
  description: "Logical CAN interface mapping service for portable coach configurations"

can_feature:
  enabled: true
  core: true
  depends_on: [can_interface]
  description: "CANBus feature for device communication"

rvc:
  enabled: true
  core: true
  depends_on: [can_interface]
  description: "RV-C protocol integration for recreational vehicle systems"

# API Documentation
api_docs:
  enabled: true
  core: true
  depends_on: [websocket]
  description: "API documentation endpoints including Swagger UI and search functionality"

# Optional features
pushover:
  enabled: false
  core: false
  depends_on: []
  description: "Pushover notification service integration"

uptimerobot:
  enabled: false
  core: false
  depends_on: []
  description: "UptimeRobot monitoring service integration"

github_update_checker:
  enabled: false
  core: false
  depends_on: []
  description: "GitHub update checker service for application updates"

log_history:
  enabled: true
  core: false
  depends_on: []
  description: "REST API and WebSocket endpoints for log history and log streaming (journald, JSON logs)"

log_streaming:
  enabled: true
  core: false
  depends_on: [websocket]
  description: "WebSocket log streaming endpoints and handlers (buffering, filtering, rate limiting)"

# Enhanced dashboard and analytics features
dashboard_aggregation:
  enabled: true
  core: false
  depends_on: [entity_manager, websocket]
  description: "Aggregated dashboard endpoints for optimized data loading and real-time updates"

bulk_operations:
  enabled: true
  core: false
  depends_on: [entity_manager, can_interface]
  description: "Bulk control operations for entities and advanced filtering capabilities"

system_analytics:
  enabled: true
  core: false
  depends_on: [entity_manager, can_interface]
  description: "System analytics, performance monitoring, and alerting features"

activity_tracking:
  enabled: true
  core: false
  depends_on: [entity_manager, websocket]
  description: "Activity feed tracking and recent events monitoring"
