"""add_analytics_tables

Revision ID: 68ed601820ee
Revises: 0078a61315c9
Create Date: 2025-06-12 21:52:31.706037

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "68ed601820ee"
down_revision: str | None = "0078a61315c9"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create analytics metrics table
    op.create_table(
        "analytics_metrics",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("metric_name", sa.String(length=255), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("baseline_deviation", sa.Float(), nullable=False, default=0.0),
        sa.Column("anomaly_score", sa.Float(), nullable=False, default=0.0),
        sa.Column("metric_metadata", sa.JSON(), nullable=True),
        sa.Column("timestamp", sa.Float(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Analytics metrics for trend analysis and historical tracking",
    )

    # Create indexes for analytics metrics
    op.create_index(
        "idx_analytics_metrics_name_timestamp", "analytics_metrics", ["metric_name", "timestamp"]
    )
    op.create_index("idx_analytics_metrics_timestamp", "analytics_metrics", ["timestamp"])
    op.create_index(op.f("ix_analytics_metrics_metric_name"), "analytics_metrics", ["metric_name"])

    # Create analytics insights table
    op.create_table(
        "analytics_insights",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("insight_id", sa.String(length=255), nullable=False, unique=True),
        sa.Column("category", sa.String(length=100), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("severity", sa.String(length=20), nullable=False),
        sa.Column("confidence", sa.Float(), nullable=False),
        sa.Column("impact_score", sa.Float(), nullable=False),
        sa.Column("recommendations", sa.JSON(), nullable=False),
        sa.Column("supporting_data", sa.JSON(), nullable=False),
        sa.Column("insight_created_at", sa.Float(), nullable=False),
        sa.Column("expires_at", sa.Float(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="System insights generated by analytics engine",
    )

    # Create indexes for analytics insights
    op.create_index(
        "idx_analytics_insights_created_at", "analytics_insights", ["insight_created_at"]
    )
    op.create_index(
        "idx_analytics_insights_severity_created",
        "analytics_insights",
        ["severity", "insight_created_at"],
    )
    op.create_index("idx_analytics_insights_category", "analytics_insights", ["category"])
    op.create_index(op.f("ix_analytics_insights_category"), "analytics_insights", ["category"])
    op.create_index(op.f("ix_analytics_insights_severity"), "analytics_insights", ["severity"])

    # Create analytics patterns table
    op.create_table(
        "analytics_patterns",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("pattern_id", sa.String(length=255), nullable=False, unique=True),
        sa.Column("pattern_type", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("confidence", sa.Float(), nullable=False),
        sa.Column("frequency", sa.String(length=50), nullable=True),
        sa.Column("correlation_factors", sa.JSON(), nullable=False),
        sa.Column("prediction_window", sa.Integer(), nullable=True),
        sa.Column("pattern_created_at", sa.Float(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Pattern analysis for predictive analytics",
    )

    # Create indexes for analytics patterns
    op.create_index(
        "idx_analytics_patterns_created_at", "analytics_patterns", ["pattern_created_at"]
    )
    op.create_index("idx_analytics_patterns_type", "analytics_patterns", ["pattern_type"])
    op.create_index("idx_analytics_patterns_confidence", "analytics_patterns", ["confidence"])
    op.create_index(
        op.f("ix_analytics_patterns_pattern_type"), "analytics_patterns", ["pattern_type"]
    )


def downgrade() -> None:
    """Downgrade schema."""
    # Drop analytics patterns table and indexes
    op.drop_index(op.f("ix_analytics_patterns_pattern_type"), table_name="analytics_patterns")
    op.drop_index("idx_analytics_patterns_confidence", table_name="analytics_patterns")
    op.drop_index("idx_analytics_patterns_type", table_name="analytics_patterns")
    op.drop_index("idx_analytics_patterns_created_at", table_name="analytics_patterns")
    op.drop_table("analytics_patterns")

    # Drop analytics insights table and indexes
    op.drop_index(op.f("ix_analytics_insights_severity"), table_name="analytics_insights")
    op.drop_index(op.f("ix_analytics_insights_category"), table_name="analytics_insights")
    op.drop_index("idx_analytics_insights_category", table_name="analytics_insights")
    op.drop_index("idx_analytics_insights_severity_created", table_name="analytics_insights")
    op.drop_index("idx_analytics_insights_created_at", table_name="analytics_insights")
    op.drop_table("analytics_insights")

    # Drop analytics metrics table and indexes
    op.drop_index(op.f("ix_analytics_metrics_metric_name"), table_name="analytics_metrics")
    op.drop_index("idx_analytics_metrics_timestamp", table_name="analytics_metrics")
    op.drop_index("idx_analytics_metrics_name_timestamp", table_name="analytics_metrics")
    op.drop_table("analytics_metrics")
