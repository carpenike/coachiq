"""Add authentication tables

Revision ID: 0078a61315c9
Revises: 5537d057c7dd
Create Date: 2025-06-11 08:41:17.087121

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0078a61315c9"
down_revision: str | None = "5537d057c7dd"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("admin_settings",
    sa.Column("id", sa.String(length=36), nullable=False),
    sa.Column("setting_key", sa.String(length=100), nullable=False),
    sa.Column("setting_value", sa.Text(), nullable=True),
    sa.Column("setting_type", sa.String(length=20), nullable=False),
    sa.Column("description", sa.Text(), nullable=True),
    sa.Column("is_secret", sa.Boolean(), nullable=False),
    sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_admin_settings_setting_key"), "admin_settings", ["setting_key"], unique=True)
    op.create_table("magic_link_tokens",
    sa.Column("id", sa.String(length=36), nullable=False),
    sa.Column("email", sa.String(length=255), nullable=False),
    sa.Column("token_hash", sa.String(length=255), nullable=False),
    sa.Column("redirect_url", sa.Text(), nullable=True),
    sa.Column("used", sa.Boolean(), nullable=False),
    sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("ip_address", sa.String(length=45), nullable=True),
    sa.Column("user_agent", sa.Text(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("used_at", sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_magic_link_tokens_email"), "magic_link_tokens", ["email"], unique=False)
    op.create_index(op.f("ix_magic_link_tokens_token_hash"), "magic_link_tokens", ["token_hash"], unique=True)
    op.create_table("users",
    sa.Column("id", sa.String(length=36), nullable=False),
    sa.Column("email", sa.String(length=255), nullable=False),
    sa.Column("username", sa.String(length=100), nullable=True),
    sa.Column("display_name", sa.String(length=255), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=False),
    sa.Column("is_admin", sa.Boolean(), nullable=False),
    sa.Column("role", sa.String(length=20), nullable=False),
    sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("last_login_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("preferences", sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table("api_keys",
    sa.Column("id", sa.String(length=36), nullable=False),
    sa.Column("user_id", sa.String(length=36), nullable=False),
    sa.Column("key_hash", sa.String(length=255), nullable=False),
    sa.Column("key_prefix", sa.String(length=20), nullable=False),
    sa.Column("name", sa.String(length=100), nullable=False),
    sa.Column("description", sa.Text(), nullable=True),
    sa.Column("scopes", sa.JSON(), nullable=False),
    sa.Column("is_active", sa.Boolean(), nullable=False),
    sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("last_used_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("usage_count", sa.Integer(), nullable=False),
    sa.Column("rate_limit", sa.Integer(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_api_keys_key_hash"), "api_keys", ["key_hash"], unique=True)
    op.create_index(op.f("ix_api_keys_user_id"), "api_keys", ["user_id"], unique=False)
    op.create_table("auth_events",
    sa.Column("id", sa.String(length=36), nullable=False),
    sa.Column("user_id", sa.String(length=36), nullable=True),
    sa.Column("event_type", sa.String(length=50), nullable=False),
    sa.Column("provider", sa.String(length=50), nullable=True),
    sa.Column("success", sa.Boolean(), nullable=False),
    sa.Column("ip_address", sa.String(length=45), nullable=True),
    sa.Column("user_agent", sa.Text(), nullable=True),
    sa.Column("email", sa.String(length=255), nullable=True),
    sa.Column("details", sa.JSON(), nullable=True),
    sa.Column("error_message", sa.Text(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_auth_events_email"), "auth_events", ["email"], unique=False)
    op.create_index(op.f("ix_auth_events_event_type"), "auth_events", ["event_type"], unique=False)
    op.create_index(op.f("ix_auth_events_user_id"), "auth_events", ["user_id"], unique=False)
    op.create_table("user_auth_providers",
    sa.Column("id", sa.String(length=36), nullable=False),
    sa.Column("user_id", sa.String(length=36), nullable=False),
    sa.Column("provider", sa.String(length=50), nullable=False),
    sa.Column("provider_user_id", sa.String(length=255), nullable=False),
    sa.Column("provider_username", sa.String(length=255), nullable=True),
    sa.Column("provider_email", sa.String(length=255), nullable=True),
    sa.Column("provider_data", sa.JSON(), nullable=True),
    sa.Column("is_verified", sa.Boolean(), nullable=False),
    sa.Column("is_primary", sa.Boolean(), nullable=False),
    sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("last_used_at", sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_user_auth_providers_user_id"), "user_auth_providers", ["user_id"], unique=False)
    op.create_table("user_sessions",
    sa.Column("id", sa.String(length=36), nullable=False),
    sa.Column("user_id", sa.String(length=36), nullable=False),
    sa.Column("session_token", sa.String(length=255), nullable=False),
    sa.Column("ip_address", sa.String(length=45), nullable=True),
    sa.Column("user_agent", sa.Text(), nullable=True),
    sa.Column("device_info", sa.JSON(), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=False),
    sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("last_accessed_at", sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_user_sessions_session_token"), "user_sessions", ["session_token"], unique=True)
    op.create_index(op.f("ix_user_sessions_user_id"), "user_sessions", ["user_id"], unique=False)
    # SQLite does not support ALTER COLUMN operations
    # The existing tables already have proper String UUID columns from previous migrations
    # We only need to create the new auth tables
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Only drop the new auth tables, leave existing tables unchanged
    op.drop_index(op.f("ix_user_sessions_user_id"), table_name="user_sessions")
    op.drop_index(op.f("ix_user_sessions_session_token"), table_name="user_sessions")
    op.drop_table("user_sessions")
    op.drop_index(op.f("ix_user_auth_providers_user_id"), table_name="user_auth_providers")
    op.drop_table("user_auth_providers")
    op.drop_index(op.f("ix_auth_events_user_id"), table_name="auth_events")
    op.drop_index(op.f("ix_auth_events_event_type"), table_name="auth_events")
    op.drop_index(op.f("ix_auth_events_email"), table_name="auth_events")
    op.drop_table("auth_events")
    op.drop_index(op.f("ix_api_keys_user_id"), table_name="api_keys")
    op.drop_index(op.f("ix_api_keys_key_hash"), table_name="api_keys")
    op.drop_table("api_keys")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_magic_link_tokens_token_hash"), table_name="magic_link_tokens")
    op.drop_index(op.f("ix_magic_link_tokens_email"), table_name="magic_link_tokens")
    op.drop_table("magic_link_tokens")
    op.drop_index(op.f("ix_admin_settings_setting_key"), table_name="admin_settings")
    op.drop_table("admin_settings")
    # ### end Alembic commands ###
