"""Initial database schema

Revision ID: 167f01dae3e4
Revises:
Create Date: 2025-06-07 17:57:05.535017

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "167f01dae3e4"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "backup_metadata",
        sa.Column(
            "file_path", sa.String(length=500), nullable=False, comment="Full path to backup file"
        ),
        sa.Column(
            "file_size_bytes", sa.Integer(), nullable=False, comment="Backup file size in bytes"
        ),
        sa.Column(
            "database_name",
            sa.String(length=255),
            nullable=False,
            comment="Name of the backed up database",
        ),
        sa.Column(
            "backup_type",
            sa.String(length=50),
            nullable=False,
            comment="Type of backup (manual, automatic, scheduled)",
        ),
        sa.Column(
            "checksum",
            sa.String(length=64),
            nullable=True,
            comment="SHA-256 checksum of backup file",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp",
        ),
        sa.Column("id", sa.UUID(), nullable=False, comment="Primary key UUID"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "configurations",
        sa.Column("key", sa.String(length=255), nullable=False, comment="Configuration key"),
        sa.Column(
            "value",
            sa.String(length=4000),
            nullable=False,
            comment="Configuration value (JSON string)",
        ),
        sa.Column(
            "description",
            sa.String(length=500),
            nullable=True,
            comment="Human-readable description",
        ),
        sa.Column(
            "category",
            sa.String(length=100),
            nullable=True,
            comment="Configuration category for grouping",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp",
        ),
        sa.Column("id", sa.UUID(), nullable=False, comment="Primary key UUID"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key"),
    )
    op.create_table(
        "dashboards",
        sa.Column("name", sa.String(length=255), nullable=False, comment="Dashboard name"),
        sa.Column(
            "config",
            sa.String(length=10000),
            nullable=False,
            comment="Dashboard configuration (JSON string)",
        ),
        sa.Column(
            "is_default",
            sa.Boolean(),
            nullable=False,
            comment="Whether this is the default dashboard",
        ),
        sa.Column(
            "description", sa.String(length=500), nullable=True, comment="Dashboard description"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp",
        ),
        sa.Column("id", sa.UUID(), nullable=False, comment="Primary key UUID"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("dashboards")
    op.drop_table("configurations")
    op.drop_table("backup_metadata")
    # ### end Alembic commands ###
