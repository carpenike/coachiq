[build-system]
requires    = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name        = "rvc2api"
version     = "0.0.0"
description = "CAN‑bus web service exposing RV‑C network data via HTTP & WebSocket"
readme      = "README.md"
license     = "MIT"
authors     = ["Ryan Holt <ryan@ryanholt.net>"]

# PyPI metadata
keywords    = ["can", "rv-c", "websocket", "fastapi"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
]

# src layout
packages = [
  { include = "console_client", from = "src" },
  { include = "core_daemon", from = "src" },
  { include = "rvc_decoder", from = "src" },
]

# Explicitly include package data like templates and static files
# Paths are relative to this pyproject.toml file.
include = [
    "src/core_daemon/web_ui/static/**/*",
    "src/core_daemon/web_ui/templates/**/*",
    # Ensuring rvc_decoder config is also explicitly included, though it seemed to work by default.
    "src/rvc_decoder/config/*"
]

[tool.poetry.dependencies]
python = "^3.12.6" # Updated to avoid Python 3.12.5 issues with Black
fastapi    = "^0.115"                 # Updated from ^0.95
uvicorn = { extras = ["standard"], version = "^0.34" }
python-can = "^4.0"
pydantic   = "^2.9"                   # Updated from ^1.10 (Major V2 update)
pyyaml     = "^6.0"
# Dependencies added from flake.nix and original pyproject.toml
prometheus_client = "^0.21.0"       # Updated from ^0.20.0"
coloredlogs = "^15.0"
jinja2 = "^3.1.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0" # Updated version
mypy   = "^1.10" # Updated version
flake8 = "^7.0" # Updated version
black = "^25.0.0" # Added Black
pre-commit = "^4.0.0" # Added pre-commit
types-PyYAML = "^6.0.12.12" # Added type stubs for PyYAML
httpx = "^0.28.0"
djlint = "^1.34.0"
fastapi = "^0.115"

[tool.poetry.urls]
Homepage   = "https://github.com/carpenike/rvc2api"
Repository = "https://github.com/carpenike/rvc2api"

[tool.poetry.scripts]
rvc2api-daemon = "core_daemon.main:main" # Assumes main() in main.py runs the Uvicorn server
rvc2api-console = "console_client.console:main" # Assumes main() in console.py runs the console client

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203", # Whitespace before ':' (often conflicts with Black)
    "W503"  # Line break before binary operator (PEP 8 changed, Black prefers this)
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info"
]
# You might want to specify which directories to check explicitly if not running on specific files
# For example, to check only src and tests:
# select = F,E,W,C90 # Or just let it default
# application-import-names = rvc2api,src,tests # If you want to enforce import styles

[tool.black]
line-length = 100

[tool.pytest.ini_options]
# 1) Add “src” (or “.” if your code lives at project root) onto sys.path:
pythonpath = ["src"]
# 2) (Optional but recommended) Use importlib mode in a src‑layout project:
addopts     = ["--import-mode=importlib"]
# 3) Tell pytest where your tests live (defaults to “tests” if omitted):
testpaths   = ["tests"]
