# See https://pre-commit.com for full documentation

default_language_version:
  python: python3.12

repos:
  # Core file + YAML + merge conflict + whitespace checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: ^(mkdocs\.yml|docs/mkdocs\.yml)$
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: debug-statements
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: check-added-large-files
        exclude: >
          (?x)^(
            resources/rvc-2023-11\.pdf|
            resources/rvc-2023-11_chunks\.json
          )$

  # # Python linting and formatting with Ruff
  # - repo: https://github.com/astral-sh/ruff-pre-commit
  #   rev: v0.1.11
  #   hooks:
  #     - id: ruff
  #       args: [--fix, --exit-non-zero-on-fix]
  #     - id: ruff-format
  #       # Runs as the primary formatter in place of Black

  # # HTML linting
  # - repo: https://github.com/Riverside-Healthcare/djLint
  #   rev: v1.34.0
  #   hooks:
  #     - id: djlint
  #       args: [--reformat]
  #       stages: [pre-commit]
  #       files: ^src/core_daemon/frontend/templates/

  # Frontend linting (run from frontend directory)
  # - repo: local
  #   hooks:
  #     - id: eslint
  #       name: eslint (frontend)
  #       entry: bash -c 'cd frontend && npm run lint'
  #       language: system
  #       pass_filenames: false
  #       files: ^frontend/

  # # Poetry check (local)
  # - repo: local
  #   hooks:
  #     - id: check-poetry-lock
  #       name: Ensure poetry.lock is in sync with pyproject.toml
  #       entry: poetry check --lock --no-interaction
  #       language: system
  #       pass_filenames: false
  #       always_run: true
