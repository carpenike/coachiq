{
  "openapi": "3.1.0",
  "info": {
    "title": "CoachIQ Backend",
    "description": "Modernized backend API for RV-C CANbus monitoring and control",
    "version": "2.0.0"
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login For Access Token",
        "description": "Authenticate user with username and password (single-user mode).\n\nArgs:\n    form_data: OAuth2 form data with username and password\n    auth_manager: Authentication manager instance\n\nReturns:\n    TokenPair: JWT access token, refresh token and metadata\n\nRaises:\n    HTTPException: If authentication fails or not in single-user mode",
        "operationId": "login_for_access_token_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_api_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login-step": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login Step With Mfa Check",
        "description": "First step of login - checks credentials and MFA requirement.\n\nArgs:\n    form_data: OAuth2 form data with username and password\n    auth_manager: Authentication manager instance\n\nReturns:\n    LoginStepResponse: Either tokens (if no MFA) or MFA challenge\n\nRaises:\n    HTTPException: If authentication fails or not in single-user mode",
        "operationId": "login_step_with_mfa_check_api_auth_login_step_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_step_with_mfa_check_api_auth_login_step_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginStepResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login-mfa": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Complete Login With Mfa",
        "description": "Complete login after MFA verification.\n\nArgs:\n    mfa_verification: MFA verification request with TOTP or backup code\n    current_user: Current authenticated user (from step 1)\n    auth_manager: Authentication manager instance\n\nReturns:\n    TokenPair: Final JWT access and refresh tokens\n\nRaises:\n    HTTPException: If MFA verification fails",
        "operationId": "complete_login_with_mfa_api_auth_login_mfa_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Refresh Access Token",
        "description": "Refresh access token using a valid refresh token.\n\nArgs:\n    request: FastAPI request object\n    refresh_request: Refresh token request data\n    auth_manager: Authentication manager instance\n\nReturns:\n    TokenPair: New access token and refresh token\n\nRaises:\n    HTTPException: If refresh token is invalid or refresh is disabled",
        "operationId": "refresh_access_token_api_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/revoke": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Revoke Refresh Token",
        "description": "Revoke a refresh token.\n\nArgs:\n    request: FastAPI request object\n    refresh_request: Refresh token to revoke\n    auth_manager: Authentication manager instance\n\nRaises:\n    HTTPException: If refresh tokens are disabled",
        "operationId": "revoke_refresh_token_api_auth_revoke_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/magic-link": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Send Magic Link",
        "description": "Send magic link for passwordless authentication (multi-user mode).\n\nArgs:\n    request: Magic link request with email and optional redirect URL\n    auth_manager: Authentication manager instance\n\nReturns:\n    MagicLinkResponse: Confirmation message and metadata\n\nRaises:\n    HTTPException: If magic links are not enabled or email sending fails",
        "operationId": "send_magic_link_api_auth_magic_link_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MagicLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagicLinkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/magic": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Verify Magic Link",
        "description": "Verify magic link token and return access token.\n\nArgs:\n    token: Magic link token from URL parameter\n    auth_manager: Authentication manager instance\n\nReturns:\n    Token: JWT access token for authenticated user\n\nRaises:\n    HTTPException: If magic link token is invalid or expired",
        "operationId": "verify_magic_link_api_auth_magic_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User Profile",
        "description": "Get current user profile information.\n\nArgs:\n    current_user: Current authenticated user\n\nReturns:\n    UserInfo: Current user profile data",
        "operationId": "get_user_profile_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/status": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Auth Status",
        "description": "Get authentication system status and configuration.\n\nArgs:\n    auth_manager: Authentication manager instance\n\nReturns:\n    AuthStatus: Authentication system status",
        "operationId": "get_auth_status_api_auth_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout",
        "description": "Logout current user and revoke all refresh tokens.\n\nArgs:\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    dict[str, str]: Logout confirmation message",
        "operationId": "logout_api_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Logout Api Auth Logout Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/invitation/send": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Send User Invitation",
        "description": "Send a user invitation (admin only).\n\nArgs:\n    request: Invitation request details\n    current_admin: Current admin user\n    invitation_service: User invitation service instance\n\nReturns:\n    UserInvitationResponse: Created invitation details\n\nRaises:\n    HTTPException: If invitation creation fails",
        "operationId": "send_user_invitation_api_auth_invitation_send_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInvitationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/invitation/accept": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Accept User Invitation",
        "description": "Accept a user invitation and get authentication token.\n\nArgs:\n    token: Invitation token from URL parameter\n    invitation_service: User invitation service instance\n\nReturns:\n    Token: JWT access token for the new user\n\nRaises:\n    HTTPException: If invitation token is invalid or expired",
        "operationId": "accept_user_invitation_api_auth_invitation_accept_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/admin/users": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "List Users",
        "description": "List all users (admin only).\n\nReturns:\n    dict[str, Any]: List of users (placeholder for future implementation)\n\nNote:\n    This endpoint is a placeholder for future multi-user functionality\n    when database-backed user management is implemented.",
        "operationId": "list_users_api_auth_admin_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Users Api Auth Admin Users Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/admin/invitations": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "List Invitations",
        "description": "List user invitations (admin only).\n\nArgs:\n    include_expired: Include expired invitations\n    include_used: Include used invitations\n    invitation_service: User invitation service instance\n\nReturns:\n    dict[str, Any]: List of invitations and statistics",
        "operationId": "list_invitations_api_auth_admin_invitations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_expired",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Expired"
            }
          },
          {
            "name": "include_used",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Used"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Invitations Api Auth Admin Invitations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/admin/invitations/{invitation_id}": {
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Revoke Invitation",
        "description": "Revoke a user invitation (admin only).\n\nArgs:\n    invitation_id: ID of invitation to revoke\n    invitation_service: User invitation service instance\n\nReturns:\n    dict[str, str]: Revocation confirmation\n\nRaises:\n    HTTPException: If invitation not found",
        "operationId": "revoke_invitation_api_auth_admin_invitations__invitation_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invitation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Revoke Invitation Api Auth Admin Invitations  Invitation Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/admin/credentials": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Admin Credentials",
        "description": "Get auto-generated admin credentials (one-time display only).\n\nThis endpoint returns auto-generated admin credentials only once for security.\nAfter calling this endpoint, the credentials are cleared from memory.\n\nArgs:\n    auth_manager: Authentication manager instance\n\nReturns:\n    AdminCredentials: Auto-generated admin credentials\n\nRaises:\n    HTTPException: If no credentials available or not in single-user mode",
        "operationId": "get_admin_credentials_api_auth_admin_credentials_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminCredentials"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/admin/stats": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Auth Stats",
        "description": "Get detailed authentication statistics (admin only).\n\nArgs:\n    auth_manager: Authentication manager instance\n    invitation_service: User invitation service instance\n\nReturns:\n    dict[str, Any]: Detailed authentication statistics",
        "operationId": "get_auth_stats_api_auth_admin_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Auth Stats Api Auth Admin Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/lockout/status/{username}": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User Lockout Status",
        "description": "Get lockout status for a specific user (admin only).\n\nArgs:\n    username: Username to check lockout status for\n    auth_manager: Authentication manager instance\n\nReturns:\n    LockoutStatus: Detailed lockout status for the user",
        "operationId": "get_user_lockout_status_api_auth_lockout_status__username__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockoutStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/lockout/status": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get All Lockout Status",
        "description": "Get lockout status for all tracked users (admin only).\n\nArgs:\n    auth_manager: Authentication manager instance\n\nReturns:\n    list[LockoutStatus]: List of lockout status for all users",
        "operationId": "get_all_lockout_status_api_auth_lockout_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LockoutStatus"
                  },
                  "type": "array",
                  "title": "Response Get All Lockout Status Api Auth Lockout Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/lockout/unlock": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Unlock User Account",
        "description": "Manually unlock a user account (admin only).\n\nArgs:\n    unlock_request: Account unlock request\n    current_admin: Current admin user\n    auth_manager: Authentication manager instance\n\nReturns:\n    dict[str, str]: Unlock confirmation message\n\nRaises:\n    HTTPException: If lockout is disabled or account not locked",
        "operationId": "unlock_user_account_api_auth_lockout_unlock_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Unlock User Account Api Auth Lockout Unlock Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/mfa/setup": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Setup Mfa",
        "description": "Set up MFA for the current user.\n\nArgs:\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    MFASecretResponse: MFA setup information including QR code\n\nRaises:\n    HTTPException: If MFA is not available or already enabled",
        "operationId": "setup_mfa_api_auth_mfa_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFASecretResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/mfa/verify-setup": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Verify Mfa Setup",
        "description": "Verify MFA setup by validating a TOTP code.\n\nArgs:\n    verification_request: MFA verification request with TOTP code\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    dict[str, str]: Verification confirmation message\n\nRaises:\n    HTTPException: If verification fails or MFA not available",
        "operationId": "verify_mfa_setup_api_auth_mfa_verify_setup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Verify Mfa Setup Api Auth Mfa Verify Setup Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/mfa/verify": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Verify Mfa Code",
        "description": "Verify an MFA code for authentication.\n\nArgs:\n    verification_request: MFA verification request with TOTP or backup code\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    dict[str, str]: Verification confirmation message\n\nRaises:\n    HTTPException: If verification fails or MFA not available",
        "operationId": "verify_mfa_code_api_auth_mfa_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Verify Mfa Code Api Auth Mfa Verify Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/mfa/status": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Mfa Status",
        "description": "Get MFA status for the current user.\n\nArgs:\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    MFAStatus: Current MFA status\n\nRaises:\n    HTTPException: If MFA is not available",
        "operationId": "get_mfa_status_api_auth_mfa_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFAStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/mfa/backup-codes": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Backup Codes",
        "description": "Get backup codes for the current user (one-time display).\n\nArgs:\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    BackupCodesResponse: Backup codes with warning\n\nRaises:\n    HTTPException: If MFA not available or not enabled",
        "operationId": "get_backup_codes_api_auth_mfa_backup_codes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupCodesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/mfa/regenerate-backup-codes": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Regenerate Backup Codes",
        "description": "Regenerate backup codes for the current user.\n\nArgs:\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    BackupCodesResponse: New backup codes with warning\n\nRaises:\n    HTTPException: If MFA not available or not enabled",
        "operationId": "regenerate_backup_codes_api_auth_mfa_regenerate_backup_codes_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupCodesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/mfa/disable": {
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Disable Mfa",
        "description": "Disable MFA for the current user.\n\nArgs:\n    current_user: Current authenticated user\n    auth_manager: Authentication manager instance\n\nReturns:\n    dict[str, str]: Disable confirmation message\n\nRaises:\n    HTTPException: If MFA not available or not enabled",
        "operationId": "disable_mfa_api_auth_mfa_disable_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Disable Mfa Api Auth Mfa Disable Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/admin/mfa/status": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get All Mfa Status",
        "description": "Get MFA status for all users (admin only).\n\nArgs:\n    auth_manager: Authentication manager instance\n\nReturns:\n    list[MFAStatus]: MFA status for all users\n\nRaises:\n    HTTPException: If MFA is not available",
        "operationId": "get_all_mfa_status_api_auth_admin_mfa_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MFAStatus"
                  },
                  "type": "array",
                  "title": "Response Get All Mfa Status Api Auth Admin Mfa Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/admin/mfa/disable": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Admin Disable Mfa",
        "description": "Disable MFA for a specific user (admin only).\n\nArgs:\n    disable_request: MFA disable request\n    current_admin: Current admin user\n    auth_manager: Authentication manager instance\n\nReturns:\n    dict[str, str]: Disable confirmation message\n\nRaises:\n    HTTPException: If MFA not available or not enabled for user",
        "operationId": "admin_disable_mfa_api_auth_admin_mfa_disable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminMFADisableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Admin Disable Mfa Api Auth Admin Mfa Disable Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/secure/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Secure Login",
        "description": "Secure login with HttpOnly cookie token storage.\n\nArgs:\n    form_data: Login form data (username and password)\n    auth_manager: Authentication manager instance\n\nReturns:\n    Login success response with secure cookies set\n\nRaises:\n    HTTPException: If authentication fails",
        "operationId": "secure_login_api_auth_secure_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_secure_login_api_auth_secure_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Secure Login Api Auth Secure Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/secure/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Secure Refresh",
        "description": "Refresh access token using HttpOnly refresh token cookie.\n\nArgs:\n    request: HTTP request with refresh token cookie\n    auth_manager: Authentication manager instance\n\nReturns:\n    Refresh success response with new tokens\n\nRaises:\n    HTTPException: If refresh token is invalid",
        "operationId": "secure_refresh_api_auth_secure_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Secure Refresh Api Auth Secure Refresh Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/secure/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Secure Logout",
        "description": "Secure logout with cookie cleanup and token revocation.\n\nArgs:\n    request: HTTP request\n    auth_manager: Authentication manager instance\n\nReturns:\n    Logout confirmation message",
        "operationId": "secure_logout_api_auth_secure_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Secure Logout Api Auth Secure Logout Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/queue/status": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get CAN queue status",
        "description": "Return the current status of the CAN transmission queue.",
        "operationId": "get_queue_status_api_can_queue_status_get",
        "responses": {
          "200": {
            "description": "Queue status including length and capacity information",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Queue Status Api Can Queue Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/statistics/enhanced": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get enhanced CAN statistics with PGN-level data and backend computation",
        "description": "Enhanced CAN statistics with business logic computed on backend, including PGN analysis",
        "operationId": "get_enhanced_can_statistics_api_can_statistics_enhanced_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackendComputedCANStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/metrics/computed": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get backend-computed CAN metrics in frontend-compatible format",
        "description": "Backend-computed CAN metrics with exact field mapping for frontend consumption",
        "operationId": "get_computed_can_metrics_api_can_metrics_computed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackendComputedCANMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/interfaces": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get CAN interfaces",
        "description": "Return a list of active CAN interfaces.",
        "operationId": "get_interfaces_api_can_interfaces_get",
        "responses": {
          "200": {
            "description": "List of interface names",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Interfaces Api Can Interfaces Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/interfaces/details": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get detailed interface information",
        "description": "Return detailed information about all CAN interfaces.",
        "operationId": "get_interface_details_api_can_interfaces_details_get",
        "responses": {
          "200": {
            "description": "Dictionary mapping interface names to their details",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "object",
                  "title": "Response Get Interface Details Api Can Interfaces Details Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/send": {
      "post": {
        "tags": [
          "can"
        ],
        "summary": "Send raw CAN message",
        "description": "Send a raw CAN message to the specified interface.",
        "operationId": "send_raw_message_api_can_send_post",
        "parameters": [
          {
            "name": "arbitration_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Arbitration Id"
            }
          },
          {
            "name": "data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data"
            }
          },
          {
            "name": "interface",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Interface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Send operation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Send Raw Message Api Can Send Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/recent": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get recent CAN messages",
        "description": "Return recent CAN messages captured on the bus.",
        "operationId": "get_recent_can_messages_api_can_recent_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of recent CAN messages with metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Recent Can Messages Api Can Recent Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/statistics": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get CAN bus statistics",
        "description": "Return statistics for all CAN bus interfaces.",
        "operationId": "get_bus_statistics_api_can_statistics_get",
        "responses": {
          "200": {
            "description": "Dictionary containing bus statistics and metrics",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Bus Statistics Api Can Statistics Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/status": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get Can Status",
        "description": "Retrieves detailed status for all CAN interfaces the service is listening on.\nCombines pyroute2 stats (if available) with the actual set of active interfaces.\nOn non-Linux platforms, returns a platform-specific message.",
        "operationId": "get_can_status_api_can_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllCANStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/health": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get Can Health",
        "description": "Get basic health status of the CAN subsystem.\n\nReturns a simple health check suitable for monitoring systems.\nIncludes overall health status, safety status, and emergency stop state.",
        "operationId": "get_can_health_api_can_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Can Health Api Can Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/health/comprehensive": {
      "get": {
        "tags": [
          "can"
        ],
        "summary": "Get Can Comprehensive Health",
        "description": "Get comprehensive health status including all subsystems.\n\nReturns detailed health information including:\n- Facade safety status and emergency stop state\n- Individual service health statuses\n- Performance metrics\n- Queue depths and resource utilization\n\nThis endpoint is useful for detailed diagnostics and debugging.",
        "operationId": "get_can_comprehensive_health_api_can_health_comprehensive_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Can Comprehensive Health Api Can Health Comprehensive Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can/emergency-stop": {
      "post": {
        "tags": [
          "can"
        ],
        "summary": "Trigger Emergency Stop",
        "description": "Trigger an emergency stop across all CAN services.\n\nThis is a safety-critical operation that will:\n- Stop all CAN message transmission\n- Halt all recording operations\n- Disable message injection\n- Put the system in a safe state\n\nThe system must be manually reset after an emergency stop.",
        "operationId": "trigger_emergency_stop_api_can_emergency_stop_post",
        "parameters": [
          {
            "name": "reason",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Reason for emergency stop",
              "title": "Reason"
            },
            "description": "Reason for emergency stop"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Trigger Emergency Stop Api Can Emergency Stop Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-tools/status": {
      "get": {
        "tags": [
          "CAN Tools"
        ],
        "summary": "Get Injector Status",
        "description": "Get CAN message injector status and statistics.",
        "operationId": "get_injector_status_api_can_tools_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InjectorStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-tools/inject": {
      "post": {
        "tags": [
          "CAN Tools"
        ],
        "summary": "Inject Message",
        "description": "Inject CAN message(s) for testing and diagnostics.\n\nSafety levels:\n- STRICT: Blocks dangerous messages\n- MODERATE: Warns on dangerous messages (default)\n- PERMISSIVE: Allows all messages (use with caution)",
        "operationId": "inject_message_api_can_tools_inject_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageInjectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageInjectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-tools/inject/j1939": {
      "post": {
        "tags": [
          "CAN Tools"
        ],
        "summary": "Inject J1939 Message",
        "description": "Inject J1939 message with automatic CAN ID generation.\n\nThis endpoint simplifies J1939 message injection by automatically\nconstructing the proper 29-bit CAN identifier from PGN and addresses.",
        "operationId": "inject_j1939_message_api_can_tools_inject_j1939_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/J1939MessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageInjectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-tools/inject/stop": {
      "delete": {
        "tags": [
          "CAN Tools"
        ],
        "summary": "Stop Injection",
        "description": "Stop active periodic message injections.",
        "operationId": "stop_injection_api_can_tools_inject_stop_delete",
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pattern to match injections",
              "title": "Pattern"
            },
            "description": "Pattern to match injections"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Stop Injection Api Can Tools Inject Stop Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-tools/safety": {
      "put": {
        "tags": [
          "CAN Tools"
        ],
        "summary": "Update Safety Config",
        "description": "Update safety configuration for message injection.",
        "operationId": "update_safety_config_api_can_tools_safety_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SafetyConfigRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Update Safety Config Api Can Tools Safety Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-tools/pgn-info/{pgn}": {
      "get": {
        "tags": [
          "CAN Tools"
        ],
        "summary": "Get Pgn Info",
        "description": "Get information about a specific PGN.",
        "operationId": "get_pgn_info_api_can_tools_pgn_info__pgn__get",
        "parameters": [
          {
            "name": "pgn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pgn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Pgn Info Api Can Tools Pgn Info  Pgn  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-tools/templates": {
      "get": {
        "tags": [
          "CAN Tools"
        ],
        "summary": "Get Message Templates",
        "description": "Get example message templates for testing.",
        "operationId": "get_message_templates_api_can_tools_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Message Templates Api Can Tools Templates Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/status": {
      "get": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Get Recorder Status",
        "description": "Get current recorder status.",
        "operationId": "get_recorder_status_api_can_recorder_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecorderStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/start": {
      "post": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Start Recording",
        "description": "Start a new recording session.",
        "operationId": "start_recording_api_can_recorder_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRecordingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/stop": {
      "post": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Stop Recording",
        "description": "Stop the current recording session.",
        "operationId": "stop_recording_api_can_recorder_stop_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RecordingSessionResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Stop Recording Api Can Recorder Stop Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/pause": {
      "post": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Pause Recording",
        "description": "Pause the current recording.",
        "operationId": "pause_recording_api_can_recorder_pause_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/resume": {
      "post": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Resume Recording",
        "description": "Resume a paused recording.",
        "operationId": "resume_recording_api_can_recorder_resume_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/list": {
      "get": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "List Recordings",
        "description": "List all available recordings.",
        "operationId": "list_recordings_api_can_recorder_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RecordingListItem"
                  },
                  "type": "array",
                  "title": "Response List Recordings Api Can Recorder List Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/{filename}": {
      "delete": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Delete Recording",
        "description": "Delete a recording file.",
        "operationId": "delete_recording_api_can_recorder__filename__delete",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/replay/start": {
      "post": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Start Replay",
        "description": "Start replaying a recorded session.",
        "operationId": "start_replay_api_can_recorder_replay_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartReplayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/replay/stop": {
      "post": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Stop Replay",
        "description": "Stop the current replay.",
        "operationId": "stop_replay_api_can_recorder_replay_stop_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/can-recorder/download/{filename}": {
      "get": {
        "tags": [
          "CAN Recorder"
        ],
        "summary": "Download Recording",
        "description": "Download a recording file.",
        "operationId": "download_recording_api_can_recorder_download__filename__get",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/statistics": {
      "get": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Get Statistics",
        "description": "Get current analyzer statistics.",
        "operationId": "get_statistics_api_can_analyzer_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolStatisticsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/report": {
      "get": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Get Protocol Report",
        "description": "Get detailed protocol analysis report.",
        "operationId": "get_protocol_report_api_can_analyzer_report_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolReportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/messages": {
      "get": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Get Recent Messages",
        "description": "Get recent analyzed messages with optional filtering.",
        "operationId": "get_recent_messages_api_can_analyzer_messages_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "protocol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CANProtocol"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Protocol"
            }
          },
          {
            "name": "message_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/MessageType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Message Type"
            }
          },
          {
            "name": "can_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Can Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnalyzedMessageResponse"
                  },
                  "title": "Response Get Recent Messages Api Can Analyzer Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/patterns": {
      "get": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Get Communication Patterns",
        "description": "Get detected communication patterns.",
        "operationId": "get_communication_patterns_api_can_analyzer_patterns_get",
        "parameters": [
          {
            "name": "pattern_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pattern Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommunicationPatternResponse"
                  },
                  "title": "Response Get Communication Patterns Api Can Analyzer Patterns Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/protocols": {
      "get": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Get Detected Protocols",
        "description": "Get detected protocols by CAN ID.",
        "operationId": "get_detected_protocols_api_can_analyzer_protocols_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Get Detected Protocols Api Can Analyzer Protocols Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/analyze": {
      "post": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Analyze Message",
        "description": "Manually analyze a specific CAN message.",
        "operationId": "analyze_message_api_can_analyzer_analyze_post",
        "parameters": [
          {
            "name": "can_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CAN ID in hex format (e.g., 0x18FEEE00)",
              "title": "Can Id"
            },
            "description": "CAN ID in hex format (e.g., 0x18FEEE00)"
          },
          {
            "name": "data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Message data in hex format",
              "title": "Data"
            },
            "description": "Message data in hex format"
          },
          {
            "name": "interface",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "CAN interface",
              "default": "can0",
              "title": "Interface"
            },
            "description": "CAN interface"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyzedMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/live": {
      "get": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Get Live Analysis",
        "description": "Get live analysis data for the specified duration.",
        "operationId": "get_live_analysis_api_can_analyzer_live_get",
        "parameters": [
          {
            "name": "duration_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 60,
              "minimum": 1,
              "default": 5,
              "title": "Duration Seconds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-analyzer/clear": {
      "delete": {
        "tags": [
          "CAN Analyzer"
        ],
        "summary": "Clear Analyzer",
        "description": "Clear analyzer buffers and reset statistics.",
        "operationId": "clear_analyzer_api_can_analyzer_clear_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/can-filter/status": {
      "get": {
        "tags": [
          "can-filter"
        ],
        "summary": "Get Filter Status",
        "description": "Get message filter status.",
        "operationId": "get_filter_status_api_can_filter_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Filter Status Api Can Filter Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-filter/rules": {
      "get": {
        "tags": [
          "can-filter"
        ],
        "summary": "List Filter Rules",
        "description": "List all filter rules.",
        "operationId": "list_filter_rules_api_can_filter_rules_get",
        "parameters": [
          {
            "name": "enabled_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only return enabled rules",
              "default": false,
              "title": "Enabled Only"
            },
            "description": "Only return enabled rules"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterRuleResponse"
                  },
                  "title": "Response List Filter Rules Api Can Filter Rules Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "can-filter"
        ],
        "summary": "Create Filter Rule",
        "description": "Create a new filter rule.",
        "operationId": "create_filter_rule_api_can_filter_rules_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterRuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-filter/rules/{rule_id}": {
      "get": {
        "tags": [
          "can-filter"
        ],
        "summary": "Get Filter Rule",
        "description": "Get a specific filter rule.",
        "operationId": "get_filter_rule_api_can_filter_rules__rule_id__get",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "can-filter"
        ],
        "summary": "Update Filter Rule",
        "description": "Update an existing filter rule.",
        "operationId": "update_filter_rule_api_can_filter_rules__rule_id__put",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterRuleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "can-filter"
        ],
        "summary": "Delete Filter Rule",
        "description": "Delete a filter rule.",
        "operationId": "delete_filter_rule_api_can_filter_rules__rule_id__delete",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-filter/statistics": {
      "get": {
        "tags": [
          "can-filter"
        ],
        "summary": "Get Filter Statistics",
        "description": "Get filter statistics.",
        "operationId": "get_filter_statistics_api_can_filter_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterStatisticsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/can-filter/statistics/reset": {
      "post": {
        "tags": [
          "can-filter"
        ],
        "summary": "Reset Filter Statistics",
        "description": "Reset filter statistics.",
        "operationId": "reset_filter_statistics_api_can_filter_statistics_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/can-filter/capture": {
      "get": {
        "tags": [
          "can-filter"
        ],
        "summary": "Get Captured Messages",
        "description": "Get captured messages.",
        "operationId": "get_captured_messages_api_can_filter_capture_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 1000,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "since_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Since Timestamp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CapturedMessageResponse"
                  },
                  "title": "Response Get Captured Messages Api Can Filter Capture Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "can-filter"
        ],
        "summary": "Clear Capture Buffer",
        "description": "Clear the capture buffer.",
        "operationId": "clear_capture_buffer_api_can_filter_capture_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/can-filter/export": {
      "get": {
        "tags": [
          "can-filter"
        ],
        "summary": "Export Filter Rules",
        "description": "Export filter rules as JSON.",
        "operationId": "export_filter_rules_api_can_filter_export_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/can-filter/import": {
      "post": {
        "tags": [
          "can-filter"
        ],
        "summary": "Import Filter Rules",
        "description": "Import filter rules from JSON.",
        "operationId": "import_filter_rules_api_can_filter_import_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Rules Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/device_mapping": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get device mapping configuration",
        "description": "Returns the current device mapping configuration file content.",
        "operationId": "get_device_mapping_config_api_config_device_mapping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/spec": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get RV-C specification configuration",
        "description": "Returns the current RV-C specification file content.",
        "operationId": "get_spec_config_api_config_spec_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/server": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get server status",
        "description": "Returns basic server status information including uptime and version.",
        "operationId": "get_server_status_api_status_server_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Server Status Api Status Server Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/application": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get application status",
        "description": "Returns application-specific status information including configuration and entity counts.",
        "operationId": "get_application_status_api_status_application_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Application Status Api Status Application Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/latest_release": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get latest GitHub release",
        "description": "Returns the latest GitHub release version and metadata.",
        "operationId": "get_latest_github_release_api_status_latest_release_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GitHubUpdateStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/force_update_check": {
      "post": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Force GitHub update check",
        "description": "Forces an immediate GitHub update check and returns the new status.",
        "operationId": "force_github_update_check_api_status_force_update_check_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GitHubUpdateStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/features": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get feature status",
        "description": "Returns the current status of all services in the system.",
        "operationId": "get_feature_status_api_status_features_get",
        "responses": {
          "200": {
            "description": "Dictionary containing service states and metadata",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Feature Status Api Status Features Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/settings": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get Settings Overview",
        "description": "Get current application settings with source information.\n\nReturns configuration values showing which come from environment\nvariables vs defaults, without exposing sensitive information.",
        "operationId": "get_settings_overview_api_config_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/config/features": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get Enhanced Feature Status",
        "description": "Get current service status and availability.",
        "operationId": "get_enhanced_feature_status_api_config_features_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/config/can/interfaces": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get Can Interface Mappings",
        "description": "Get current CAN interface mappings.",
        "operationId": "get_can_interface_mappings_api_config_can_interfaces_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/config/can/interfaces/{logical_name}": {
      "put": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Update Can Interface Mapping",
        "description": "Update a CAN interface mapping (runtime only).",
        "operationId": "update_can_interface_mapping_api_config_can_interfaces__logical_name__put",
        "parameters": [
          {
            "name": "logical_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Logical Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "title": "Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/can/interfaces/validate": {
      "post": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Validate Interface Mappings",
        "description": "Validate a set of interface mappings.",
        "operationId": "validate_interface_mappings_api_config_can_interfaces_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object",
                "title": "Mappings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/database": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get Database Configuration",
        "description": "Get current database configuration.\n\nReturns database settings with sensitive information redacted.",
        "operationId": "get_database_configuration_api_config_database_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/config/coach/interface-requirements": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get Coach Interface Requirements",
        "description": "Get coach interface requirements and compatibility validation.",
        "operationId": "get_coach_interface_requirements_api_config_coach_interface_requirements_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/config/coach/metadata": {
      "get": {
        "tags": [
          "config",
          "status"
        ],
        "summary": "Get Coach Mapping Metadata",
        "description": "Get complete coach mapping metadata including interface analysis.",
        "operationId": "get_coach_mapping_metadata_api_config_coach_metadata_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dashboard/summary": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get dashboard summary",
        "description": "Get complete aggregated dashboard data in a single optimized request.",
        "operationId": "get_dashboard_summary_api_dashboard_summary_get",
        "responses": {
          "200": {
            "description": "Complete dashboard data including entities, system metrics, and activity feed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/entities": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get entity statistics",
        "description": "Get aggregated entity statistics and health information.",
        "operationId": "get_entity_summary_api_dashboard_entities_get",
        "responses": {
          "200": {
            "description": "Entity summary with counts, health scores, and device type breakdown",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitySummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/system": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get system metrics",
        "description": "Get system performance metrics and health indicators.",
        "operationId": "get_system_metrics_api_dashboard_system_get",
        "responses": {
          "200": {
            "description": "System metrics including uptime, performance, and resource usage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__models__dashboard__SystemMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/can-bus": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get CAN bus summary",
        "description": "Get CAN bus status and performance summary.",
        "operationId": "get_can_bus_summary_api_dashboard_can_bus_get",
        "responses": {
          "200": {
            "description": "CAN bus summary with interface count, message rates, and health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CANBusSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/activity": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get activity feed",
        "description": "Get recent system activity and event feed.",
        "operationId": "get_activity_feed_api_dashboard_activity_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Maximum number of activities to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of activities to return"
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return activities since this timestamp",
              "title": "Since"
            },
            "description": "Return activities since this timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Activity feed with recent events, entity changes, and system notifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityFeed"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/bulk-control": {
      "post": {
        "tags": [
          "dashboard"
        ],
        "summary": "Bulk entity control",
        "description": "Perform control operations on multiple entities in a single request.",
        "operationId": "bulk_control_entities_api_dashboard_bulk_control_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkControlRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Results of bulk control operation with individual entity status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkControlResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/analytics": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get system analytics",
        "description": "Get system analytics, alerts, and performance monitoring data.",
        "operationId": "get_system_analytics_api_dashboard_analytics_get",
        "responses": {
          "200": {
            "description": "System analytics with active alerts, trends, and recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemAnalytics"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/alerts/{alert_id}/acknowledge": {
      "post": {
        "tags": [
          "dashboard"
        ],
        "summary": "Acknowledge alert",
        "description": "Acknowledge an active system alert.",
        "operationId": "acknowledge_alert_api_dashboard_alerts__alert_id__acknowledge_post",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Acknowledgment status and confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Acknowledge Alert Api Dashboard Alerts  Alert Id  Acknowledge Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/database/status": {
      "get": {
        "tags": [
          "database",
          "admin"
        ],
        "summary": "Get Database Status",
        "description": "Get current database schema status.",
        "operationId": "get_database_status_api_database_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/database/migrate": {
      "post": {
        "tags": [
          "database",
          "admin"
        ],
        "summary": "Start Migration",
        "description": "Start database migration process.",
        "operationId": "start_migration_api_database_migrate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationJobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/database/migrate/{job_id}/status": {
      "get": {
        "tags": [
          "database",
          "admin"
        ],
        "summary": "Get Migration Progress",
        "description": "Get migration job progress.",
        "operationId": "get_migration_progress_api_database_migrate__job_id__status_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Migration Progress Api Database Migrate  Job Id  Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/database/history": {
      "get": {
        "tags": [
          "database",
          "admin"
        ],
        "summary": "Get Migration History",
        "description": "Get migration history.",
        "operationId": "get_migration_history_api_database_history_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Migration History Api Database History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/database/safety-check": {
      "get": {
        "tags": [
          "database",
          "admin"
        ],
        "summary": "Check Migration Safety",
        "description": "Get detailed safety check for migration.",
        "operationId": "check_migration_safety_api_database_safety_check_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafetyReportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dbc/upload": {
      "post": {
        "tags": [
          "dbc"
        ],
        "summary": "Upload Dbc",
        "description": "Upload and load a DBC file.\n\nArgs:\n    file: DBC file to upload\n    name: Optional name for the DBC (defaults to filename)\n\nReturns:\n    Upload response with DBC statistics",
        "operationId": "upload_dbc_api_dbc_upload_post",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_dbc_api_dbc_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DBCUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dbc/list": {
      "get": {
        "tags": [
          "dbc"
        ],
        "summary": "List Dbcs",
        "description": "List all loaded DBC files.\n\nReturns:\n    List of loaded DBCs and active DBC",
        "operationId": "list_dbcs_api_dbc_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DBCListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dbc/active/{name}": {
      "post": {
        "tags": [
          "dbc"
        ],
        "summary": "Set Active Dbc",
        "description": "Set the active DBC for decoding.\n\nArgs:\n    name: Name of DBC to make active\n\nReturns:\n    Success message",
        "operationId": "set_active_dbc_api_dbc_active__name__post",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Set Active Dbc Api Dbc Active  Name  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dbc/messages/{name}": {
      "get": {
        "tags": [
          "dbc"
        ],
        "summary": "Get Dbc Messages",
        "description": "Get all messages from a specific DBC.\n\nArgs:\n    name: Name of the DBC\n\nReturns:\n    List of messages with signals",
        "operationId": "get_dbc_messages_api_dbc_messages__name__get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DBCMessageInfo"
                  },
                  "title": "Response Get Dbc Messages Api Dbc Messages  Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dbc/export/{name}": {
      "get": {
        "tags": [
          "dbc"
        ],
        "summary": "Export Dbc",
        "description": "Export a loaded DBC to file.\n\nArgs:\n    name: Name of the DBC to export\n\nReturns:\n    DBC file download",
        "operationId": "export_dbc_api_dbc_export__name__get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dbc/convert/rvc-to-dbc": {
      "post": {
        "tags": [
          "dbc"
        ],
        "summary": "Convert Rvc To Dbc",
        "description": "Convert current RV-C configuration to DBC format.\n\nReturns:\n    DBC file download",
        "operationId": "convert_rvc_to_dbc_api_dbc_convert_rvc_to_dbc_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dbc/convert/dbc-to-rvc": {
      "post": {
        "tags": [
          "dbc"
        ],
        "summary": "Convert Dbc To Rvc",
        "description": "Convert uploaded DBC file to RV-C JSON format.\n\nArgs:\n    file: DBC file to convert\n\nReturns:\n    RV-C configuration JSON",
        "operationId": "convert_dbc_to_rvc_api_dbc_convert_dbc_to_rvc_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_convert_dbc_to_rvc_api_dbc_convert_dbc_to_rvc_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Convert Dbc To Rvc Api Dbc Convert Dbc To Rvc Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dbc/search/{signal_name}": {
      "get": {
        "tags": [
          "dbc"
        ],
        "summary": "Search Signal",
        "description": "Search for a signal across all loaded DBCs.\n\nArgs:\n    signal_name: Name of signal to search for\n\nReturns:\n    List of matches with DBC and message info",
        "operationId": "search_signal_api_dbc_search__signal_name__get",
        "parameters": [
          {
            "name": "signal_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Signal Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Search Signal Api Dbc Search  Signal Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/diagnostics/health": {
      "get": {
        "tags": [
          "diagnostics"
        ],
        "summary": "Get System Health",
        "description": "Get comprehensive system health status.\n\nArgs:\n    system_type: Optional specific system to query, or None for all systems\n\nReturns:\n    System health response with scores and recommendations",
        "operationId": "get_system_health_api_diagnostics_health_get",
        "parameters": [
          {
            "name": "system_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific system to query",
              "title": "System Type"
            },
            "description": "Specific system to query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__routers__diagnostics__SystemHealthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/docs/status": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get documentation search status",
        "description": "Returns the status of the vector search service and its configuration.",
        "operationId": "get_search_status_api_docs_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Search Status Api Docs Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/docs/search": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Search RV-C documentation",
        "description": "Search the RV-C documentation using vector-based semantic search.",
        "operationId": "search_documentation_api_docs_search_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query string",
              "title": "Query"
            },
            "description": "Search query string"
          },
          {
            "name": "k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "minimum": 1,
              "description": "Number of results to return",
              "default": 3,
              "title": "K"
            },
            "description": "Number of results to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Search Documentation Api Docs Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/docs/openapi": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get OpenAPI schema",
        "description": "Returns the complete OpenAPI schema for the API.",
        "operationId": "get_openapi_schema_api_docs_openapi_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Openapi Schema Api Docs Openapi Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "health",
          "monitoring"
        ],
        "summary": "Comprehensive health check",
        "description": "Returns detailed health status including ServiceRegistry information",
        "operationId": "health_check_api_health_get",
        "parameters": [
          {
            "name": "include_registry",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include ServiceRegistry details",
              "default": true,
              "title": "Include Registry"
            },
            "description": "Include ServiceRegistry details"
          },
          {
            "name": "include_metrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include startup metrics",
              "default": true,
              "title": "Include Metrics"
            },
            "description": "Include startup metrics"
          },
          {
            "name": "include_components",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include component health details",
              "default": true,
              "title": "Include Components"
            },
            "description": "Include component health details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "503": {
            "description": "Service unavailable"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/services": {
      "get": {
        "tags": [
          "health",
          "monitoring"
        ],
        "summary": "Individual service health status",
        "description": "Returns health status for all registered services",
        "operationId": "service_health_status_api_health_services_get",
        "parameters": [
          {
            "name": "service_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by service name",
              "title": "Service Name"
            },
            "description": "Filter by service name"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ServiceStatus-Input"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status"
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceHealthDetail"
                  },
                  "title": "Response Service Health Status Api Health Services Get"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/ready": {
      "get": {
        "tags": [
          "health",
          "monitoring"
        ],
        "summary": "Readiness check with ServiceRegistry",
        "description": "Lightweight readiness check based on ServiceRegistry status",
        "operationId": "readiness_check_api_health_ready_get",
        "parameters": [
          {
            "name": "min_healthy_services",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Minimum number of healthy services required",
              "default": 3,
              "title": "Min Healthy Services"
            },
            "description": "Minimum number of healthy services required"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Readiness Check Api Health Ready Get"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/startup": {
      "get": {
        "tags": [
          "health",
          "monitoring"
        ],
        "summary": "Startup metrics and timing",
        "description": "Returns detailed startup performance metrics from ServiceRegistry",
        "operationId": "startup_metrics_api_health_startup_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Startup Metrics Api Health Startup Get"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/logs/history": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "Get historical logs",
        "description": "Query historical logs from journald. Supports filtering by time, level, module, and pagination via cursor.\n\n    Only available on systems with systemd/journald.",
        "operationId": "get_log_history_api_logs_history_get",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Since"
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Until"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          },
          {
            "name": "module",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Module"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Max number of log entries to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Max number of log entries to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogHistoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-network/status": {
      "get": {
        "tags": [
          "multi-network"
        ],
        "summary": "Get Multi Network Status",
        "description": "Get the status of multi-network CAN management.\n\nReturns:\n    Multi-network status information including network health and statistics",
        "operationId": "get_multi_network_status_api_multi_network_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Multi Network Status Api Multi Network Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-network/bridge-status": {
      "get": {
        "tags": [
          "multi-network"
        ],
        "summary": "Get Bridge Status",
        "description": "Get the status of protocol bridges between different CAN networks.\n\nReturns:\n    Bridge status information including translation statistics and health",
        "operationId": "get_bridge_status_api_multi_network_bridge_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Bridge Status Api Multi Network Bridge Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-network/networks": {
      "get": {
        "tags": [
          "multi-network"
        ],
        "summary": "Get Networks",
        "description": "Get information about all registered CAN networks.\n\nReturns:\n    Network information including health status and configuration",
        "operationId": "get_networks_api_multi_network_networks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Networks Api Multi Network Networks Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-network/health": {
      "get": {
        "tags": [
          "multi-network"
        ],
        "summary": "Get Multi Network Health",
        "description": "Get comprehensive health status of the multi-network system.\n\nReturns:\n    Health status including service status, network health, and diagnostics",
        "operationId": "get_multi_network_health_api_multi_network_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Multi Network Health Api Multi Network Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/health-computed": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get backend-computed health status with UI categorization",
        "description": "Get comprehensive health status with backend-computed thresholds and UI classification.\n\nThis endpoint performs all business logic computation on the backend, removing the need\nfor frontend threshold calculations. Returns status classification ready for UI display.",
        "operationId": "get_computed_health_status_api_performance_health_computed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackendComputedHealthStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/resources-computed": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get backend-computed resource utilization with status classification",
        "description": "Get resource utilization with backend-computed threshold-based status classification.\n\nEliminates frontend business logic for resource status determination by applying\nconfigurable thresholds on the backend and returning ready-to-display status.",
        "operationId": "get_computed_resource_status_api_performance_resources_computed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackendComputedResourceStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/api-performance-computed": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get backend-computed API performance with status classification",
        "description": "Get API performance metrics with backend-computed status classification.\n\nApplies business logic thresholds on the backend to determine performance status,\neliminating the need for frontend threshold calculations.",
        "operationId": "get_computed_api_performance_api_performance_api_performance_computed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackendComputedAPIPerformance"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/status": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Performance Analytics Status",
        "description": "Get comprehensive performance analytics status.\n\nReturns:\n    Detailed status including configuration, statistics, and component health",
        "operationId": "get_performance_analytics_status_api_performance_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Performance Analytics Status Api Performance Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/telemetry/protocol": {
      "post": {
        "tags": [
          "performance"
        ],
        "summary": "Record Protocol Telemetry",
        "description": "Record protocol message processing performance data.\n\nArgs:\n    telemetry_request: Protocol telemetry data\n\nReturns:\n    Success status",
        "operationId": "record_protocol_telemetry_api_performance_telemetry_protocol_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TelemetryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Record Protocol Telemetry Api Performance Telemetry Protocol Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/telemetry/api": {
      "post": {
        "tags": [
          "performance"
        ],
        "summary": "Record Api Performance",
        "description": "Record API request performance data.\n\nArgs:\n    api_request: API performance data\n\nReturns:\n    Success status",
        "operationId": "record_api_performance_api_performance_telemetry_api_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIPerformanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Record Api Performance Api Performance Telemetry Api Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/telemetry/websocket": {
      "post": {
        "tags": [
          "performance"
        ],
        "summary": "Record Websocket Latency",
        "description": "Record WebSocket latency data.\n\nArgs:\n    websocket_request: WebSocket latency data\n\nReturns:\n    Success status",
        "operationId": "record_websocket_latency_api_performance_telemetry_websocket_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebSocketLatencyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Record Websocket Latency Api Performance Telemetry Websocket Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/telemetry/can-interface": {
      "post": {
        "tags": [
          "performance"
        ],
        "summary": "Record Can Interface Load",
        "description": "Record CAN interface load and performance data.\n\nArgs:\n    can_request: CAN interface performance data\n\nReturns:\n    Success status",
        "operationId": "record_can_interface_load_api_performance_telemetry_can_interface_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CANInterfaceLoadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Record Can Interface Load Api Performance Telemetry Can Interface Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/metrics": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Performance Metrics",
        "description": "Get current performance metrics with optional filtering.\n\nArgs:\n    metric_type: Specific metric type to retrieve\n    time_window_seconds: Time window for metrics\n\nReturns:\n    List of performance metrics",
        "operationId": "get_performance_metrics_api_performance_metrics_get",
        "parameters": [
          {
            "name": "metric_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific metric type to retrieve",
              "title": "Metric Type"
            },
            "description": "Specific metric type to retrieve"
          },
          {
            "name": "time_window_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 86400.0,
              "minimum": 1.0,
              "description": "Time window for metrics",
              "default": 60.0,
              "title": "Time Window Seconds"
            },
            "description": "Time window for metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Performance Metrics Api Performance Metrics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/resource-utilization": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Resource Utilization",
        "description": "Get current system resource utilization.\n\nReturns:\n    Resource utilization data for CPU, memory, network, and CAN interfaces",
        "operationId": "get_resource_utilization_api_performance_resource_utilization_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Resource Utilization Api Performance Resource Utilization Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/trends": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Performance Trends",
        "description": "Get performance trend analysis.\n\nArgs:\n    metric_type: Specific metric type or None for all trends\n\nReturns:\n    Performance trend analysis data",
        "operationId": "get_performance_trends_api_performance_trends_get",
        "parameters": [
          {
            "name": "metric_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific metric type for trends",
              "title": "Metric Type"
            },
            "description": "Specific metric type for trends"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Performance Trends Api Performance Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/baseline-deviations": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Baseline Deviations",
        "description": "Get performance baseline deviations.\n\nArgs:\n    time_window_seconds: Time window for deviation analysis\n\nReturns:\n    List of baseline deviation alerts",
        "operationId": "get_baseline_deviations_api_performance_baseline_deviations_get",
        "parameters": [
          {
            "name": "time_window_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 86400.0,
              "minimum": 60.0,
              "description": "Time window for deviations",
              "default": 3600.0,
              "title": "Time Window Seconds"
            },
            "description": "Time window for deviations"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Baseline Deviations Api Performance Baseline Deviations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/optimization-recommendations": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Optimization Recommendations",
        "description": "Get automated optimization recommendations.\n\nReturns:\n    List of optimization recommendations with implementation details",
        "operationId": "get_optimization_recommendations_api_performance_optimization_recommendations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Optimization Recommendations Api Performance Optimization Recommendations Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/report": {
      "post": {
        "tags": [
          "performance"
        ],
        "summary": "Generate Performance Report",
        "description": "Generate comprehensive performance analysis report.\n\nArgs:\n    report_request: Report generation parameters\n\nReturns:\n    Comprehensive performance report including metrics, trends, and recommendations",
        "operationId": "generate_performance_report_api_performance_report_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Generate Performance Report Api Performance Report Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/protocol-throughput": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Protocol Throughput",
        "description": "Get current protocol throughput metrics.\n\nReturns:\n    Dictionary of protocol names to messages per second",
        "operationId": "get_protocol_throughput_api_performance_protocol_throughput_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object",
                  "title": "Response Get Protocol Throughput Api Performance Protocol Throughput Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/statistics": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Analytics Statistics",
        "description": "Get comprehensive performance analytics statistics.\n\nReturns:\n    Statistics from all analytics components including telemetry, benchmarking, trends, and optimization",
        "operationId": "get_analytics_statistics_api_performance_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Analytics Statistics Api Performance Statistics Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/performance/reset-baselines": {
      "delete": {
        "tags": [
          "performance"
        ],
        "summary": "Reset Performance Baselines",
        "description": "Reset all performance baselines (admin operation).\n\nReturns:\n    Success status",
        "operationId": "reset_performance_baselines_api_performance_reset_baselines_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Reset Performance Baselines Api Performance Reset Baselines Delete"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/trends": {
      "get": {
        "tags": [
          "analytics_dashboard"
        ],
        "summary": "Get performance trends",
        "description": "Retrieve performance trends and analysis for specified metrics and time window.",
        "operationId": "get_performance_trends_api_analytics_trends_get",
        "parameters": [
          {
            "name": "time_window_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Time window in hours",
              "default": 24,
              "title": "Time Window Hours"
            },
            "description": "Time window in hours"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated list of metrics",
              "title": "Metrics"
            },
            "description": "Comma-separated list of metrics"
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(1m|5m|15m|1h|6h|1d)$",
              "description": "Data resolution",
              "default": "1h",
              "title": "Resolution"
            },
            "description": "Data resolution"
          }
        ],
        "responses": {
          "200": {
            "description": "Performance trend data with analysis and insights",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Performance Trends Api Analytics Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/insights": {
      "get": {
        "tags": [
          "analytics_dashboard"
        ],
        "summary": "Get system insights",
        "description": "Retrieve intelligent system insights and recommendations based on analytics data.",
        "operationId": "get_system_insights_api_analytics_insights_get",
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated list of categories",
              "title": "Categories"
            },
            "description": "Comma-separated list of categories"
          },
          {
            "name": "min_severity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(low|medium|high|critical)$",
              "description": "Minimum severity level",
              "default": "low",
              "title": "Min Severity"
            },
            "description": "Minimum severity level"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Maximum number of insights",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of insights"
          }
        ],
        "responses": {
          "200": {
            "description": "System insights with actionable recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get System Insights Api Analytics Insights Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/historical": {
      "get": {
        "tags": [
          "analytics_dashboard"
        ],
        "summary": "Get historical analysis",
        "description": "Perform historical data analysis including pattern detection and anomaly analysis.",
        "operationId": "get_historical_analysis_api_analytics_historical_get",
        "parameters": [
          {
            "name": "analysis_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(pattern_detection|anomaly_detection|correlation|all)$",
              "default": "pattern_detection",
              "title": "Analysis Type"
            }
          },
          {
            "name": "time_window_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 720,
              "minimum": 24,
              "description": "Time window in hours",
              "default": 168,
              "title": "Time Window Hours"
            },
            "description": "Time window in hours"
          },
          {
            "name": "include_predictions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include predictive analysis",
              "default": true,
              "title": "Include Predictions"
            },
            "description": "Include predictive analysis"
          }
        ],
        "responses": {
          "200": {
            "description": "Historical analysis results with patterns and predictions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Historical Analysis Api Analytics Historical Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/aggregation": {
      "get": {
        "tags": [
          "analytics_dashboard"
        ],
        "summary": "Get metrics aggregation",
        "description": "Get comprehensive metrics aggregation and reporting across multiple time windows.",
        "operationId": "get_metrics_aggregation_api_analytics_aggregation_get",
        "parameters": [
          {
            "name": "aggregation_windows",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated aggregation windows",
              "title": "Aggregation Windows"
            },
            "description": "Comma-separated aggregation windows"
          },
          {
            "name": "metric_groups",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated metric groups",
              "title": "Metric Groups"
            },
            "description": "Comma-separated metric groups"
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated metrics with KPIs and benchmarks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Metrics Aggregation Api Analytics Aggregation Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/metrics": {
      "post": {
        "tags": [
          "analytics_dashboard"
        ],
        "summary": "Record custom metric",
        "description": "Record a custom metric for analytics tracking and analysis.",
        "operationId": "record_custom_metric_api_analytics_metrics_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomMetricRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success status of metric recording",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Record Custom Metric Api Analytics Metrics Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/status": {
      "get": {
        "tags": [
          "analytics_dashboard"
        ],
        "summary": "Get analytics dashboard status",
        "description": "Get the current status and configuration of the analytics dashboard.",
        "operationId": "get_analytics_status_api_analytics_status_get",
        "responses": {
          "200": {
            "description": "Analytics dashboard status and configuration",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Analytics Status Api Analytics Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/health": {
      "get": {
        "tags": [
          "analytics_dashboard"
        ],
        "summary": "Analytics health check",
        "description": "Health check endpoint for analytics dashboard service.",
        "operationId": "analytics_health_check_api_analytics_health_get",
        "responses": {
          "200": {
            "description": "Health status of analytics components",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Analytics Health Check Api Analytics Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/topology": {
      "get": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Get network topology",
        "description": "Return the current network topology with discovered devices and their status.",
        "operationId": "get_network_topology_api_discovery_topology_get",
        "responses": {
          "200": {
            "description": "Network topology information including devices, protocols, and health metrics",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Network Topology Api Discovery Topology Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/availability": {
      "get": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Get device availability",
        "description": "Return device availability statistics and status information.",
        "operationId": "get_device_availability_api_discovery_availability_get",
        "responses": {
          "200": {
            "description": "Device availability metrics including online/offline counts and protocol distribution",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Device Availability Api Discovery Availability Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/discover": {
      "post": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Discover devices",
        "description": "Perform active device discovery for a specific protocol.",
        "operationId": "discover_devices_api_discovery_discover_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoverDevicesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Discovery results with found devices and their information",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Discover Devices Api Discovery Discover Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/poll": {
      "post": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Poll device",
        "description": "Send a polling request to a specific device for status information.",
        "operationId": "poll_device_api_discovery_poll_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PollDeviceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Polling request status and information",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Poll Device Api Discovery Poll Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/status": {
      "get": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Get discovery service status",
        "description": "Return the current status and configuration of the device discovery service.",
        "operationId": "get_discovery_status_api_discovery_status_get",
        "responses": {
          "200": {
            "description": "Service status including configuration and runtime information",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Discovery Status Api Discovery Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/protocols": {
      "get": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Get supported protocols",
        "description": "Return information about supported protocols for device discovery.",
        "operationId": "get_supported_protocols_api_discovery_protocols_get",
        "responses": {
          "200": {
            "description": "List of supported protocols and their configuration",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Supported Protocols Api Discovery Protocols Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/wizard/auto-discover": {
      "post": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Start auto-discovery wizard",
        "description": "Begin an intelligent auto-discovery process with step-by-step guidance.",
        "operationId": "start_auto_discovery_wizard_api_discovery_wizard_auto_discover_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoDiscoveryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Auto-discovery wizard results with discovered devices and setup recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Start Auto Discovery Wizard Api Discovery Wizard Auto Discover Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/wizard/setup-device": {
      "post": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Setup discovered device",
        "description": "Configure a discovered device with guided setup wizard.",
        "operationId": "setup_discovered_device_api_discovery_wizard_setup_device_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceSetupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Device setup results and configuration status",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Setup Discovered Device Api Discovery Wizard Setup Device Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/wizard/device-profile/{device_address}": {
      "get": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Get device profile",
        "description": "Get detailed device profile with capabilities and configuration options.",
        "operationId": "get_device_profile_api_discovery_wizard_device_profile__device_address__get",
        "parameters": [
          {
            "name": "device_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Device Address"
            }
          },
          {
            "name": "protocol",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Protocol to use for device profiling",
              "default": "rvc",
              "title": "Protocol"
            },
            "description": "Protocol to use for device profiling"
          }
        ],
        "responses": {
          "200": {
            "description": "Comprehensive device profile with setup recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Device Profile Api Discovery Wizard Device Profile  Device Address  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/wizard/setup-recommendations": {
      "get": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Get setup recommendations",
        "description": "Get intelligent setup recommendations based on discovered devices.",
        "operationId": "get_setup_recommendations_api_discovery_wizard_setup_recommendations_get",
        "parameters": [
          {
            "name": "include_configured",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include already configured devices",
              "default": false,
              "title": "Include Configured"
            },
            "description": "Include already configured devices"
          }
        ],
        "responses": {
          "200": {
            "description": "Setup recommendations and configuration suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Setup Recommendations Api Discovery Wizard Setup Recommendations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/discovery/network-map": {
      "get": {
        "tags": [
          "device_discovery"
        ],
        "summary": "Get enhanced network map",
        "description": "Get comprehensive network topology map with device relationships.",
        "operationId": "get_enhanced_network_map_api_discovery_network_map_get",
        "parameters": [
          {
            "name": "include_offline",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include offline devices",
              "default": true,
              "title": "Include Offline"
            },
            "description": "Include offline devices"
          },
          {
            "name": "group_by_protocol",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Group devices by protocol",
              "default": true,
              "title": "Group By Protocol"
            },
            "description": "Group devices by protocol"
          }
        ],
        "responses": {
          "200": {
            "description": "Enhanced network topology with device relationships and health metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Enhanced Network Map Api Discovery Network Map Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/predictive-maintenance/maintenance/history": {
      "get": {
        "tags": [
          "predictive-maintenance"
        ],
        "summary": "Get maintenance history",
        "description": "Get maintenance history for components.",
        "operationId": "get_maintenance_history_api_predictive_maintenance_maintenance_history_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by component",
              "title": "Component Id"
            },
            "description": "Filter by component"
          },
          {
            "name": "maintenance_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by maintenance type",
              "title": "Maintenance Type"
            },
            "description": "Filter by maintenance type"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Number of days to retrieve",
              "default": 90,
              "title": "Days"
            },
            "description": "Number of days to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaintenanceHistoryModel"
                  },
                  "title": "Response Get Maintenance History Api Predictive Maintenance Maintenance History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/schemas/": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get all available schemas",
        "description": "Export all Zod-compatible schemas for frontend validation.\n\nProvides comprehensive schema definitions for Domain API v2 with\nsafety-critical validation requirements.",
        "operationId": "get_all_schemas_api_schemas__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/schemas/list": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get list of available schema names",
        "description": "Get list of available schema names with metadata",
        "operationId": "get_schema_list_api_schemas_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Schema List Api Schemas List Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/schemas/{schema_name}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get specific schema by name",
        "description": "Get a specific schema by name for targeted validation.\n\nArgs:\n    schema_name: Name of the schema to retrieve (Entity, ControlCommand, etc.)",
        "operationId": "get_schema_by_name_api_schemas__schema_name__get",
        "parameters": [
          {
            "name": "schema_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Schema Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/schemas/validate/integrity": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Validate schema integrity",
        "description": "Validate that all schemas can be properly exported.\n\nUsed for system health checks and debugging schema issues.\nRequires authentication as it's an administrative endpoint.",
        "operationId": "validate_schema_integrity_api_schemas_validate_integrity_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/schemas/docs/openapi": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get OpenAPI-compatible schema definitions",
        "description": "Get OpenAPI-compatible schema definitions for documentation generation.\n\nThis endpoint provides schemas in OpenAPI format for integration with\nAPI documentation tools and code generators.",
        "operationId": "get_openapi_schemas_api_schemas_docs_openapi_get",
        "parameters": [
          {
            "name": "include_examples",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include schema examples",
              "default": true,
              "title": "Include Examples"
            },
            "description": "Include schema examples"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Openapi Schemas Api Schemas Docs Openapi Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/status": {
      "get": {
        "tags": [
          "safety"
        ],
        "summary": "Get Safety Status",
        "description": "Get comprehensive safety system status.\n\nReturns current state of all safety systems including:\n- Safe state status\n- Emergency stop status\n- Watchdog timer status\n- Safety interlock states\n- System state information\n- Audit log entry count",
        "operationId": "get_safety_status_api_safety_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Safety Status Api Safety Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/update-state": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Update System State",
        "description": "Update system state information used by safety interlocks.\n\nThis endpoint allows updating vehicle state information that\nsafety interlocks use to determine if operations are safe.",
        "operationId": "update_system_state_api_safety_update_state_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemStateUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Update System State Api Safety Update State Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/interlocks": {
      "get": {
        "tags": [
          "safety"
        ],
        "summary": "Get Interlock Status",
        "description": "Get status of all safety interlocks.\n\nReturns detailed information about each safety interlock including:\n- Engagement status\n- Protected feature\n- Required conditions\n- Engagement time and reason",
        "operationId": "get_interlock_status_api_safety_interlocks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Interlock Status Api Safety Interlocks Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/interlocks/check": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Check Interlocks",
        "description": "Manually trigger safety interlock checks.\n\nForces an immediate check of all safety interlocks and returns\nthe results. Interlocks will be engaged/disengaged as needed.",
        "operationId": "check_interlocks_api_safety_interlocks_check_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Check Interlocks Api Safety Interlocks Check Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/emergency-stop": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Trigger Emergency Stop",
        "description": "Trigger emergency stop for all position-critical features.\n\nThis will:\n- Stop all position-critical features\n- Engage all safety interlocks\n- Enter system-wide safe state\n- Log the event to audit trail\n\nWARNING: This is a safety-critical operation that requires\nmanual reset with authorization.",
        "operationId": "trigger_emergency_stop_api_safety_emergency_stop_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyStopRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Trigger Emergency Stop Api Safety Emergency Stop Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/emergency-stop/reset": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Reset Emergency Stop",
        "description": "Reset emergency stop with authorization.\n\nRequires valid authorization code. After reset, individual\nfeatures and interlocks must be manually re-enabled.",
        "operationId": "reset_emergency_stop_api_safety_emergency_stop_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyStopResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Reset Emergency Stop Api Safety Emergency Stop Reset Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/audit-log": {
      "get": {
        "tags": [
          "safety"
        ],
        "summary": "Get Audit Log",
        "description": "Get safety audit log entries.\n\nReturns recent safety-critical events including:\n- Interlock engagements/disengagements\n- Emergency stops\n- Safe state entries\n- System errors\n\nArgs:\n    max_entries: Maximum number of entries to return (default: 100)",
        "operationId": "get_audit_log_api_safety_audit_log_get",
        "parameters": [
          {
            "name": "max_entries",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Max Entries"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Audit Log Api Safety Audit Log Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/health": {
      "get": {
        "tags": [
          "safety"
        ],
        "summary": "Get Safety Health",
        "description": "Get safety service health status.\n\nReturns information about the safety monitoring system itself:\n- Monitoring task status\n- Watchdog timer health\n- Last check timestamps",
        "operationId": "get_safety_health_api_safety_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Safety Health Api Safety Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/pin/emergency-stop": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Pin Emergency Stop",
        "description": "Trigger emergency stop using PIN authorization (Admin Only).\n\nRequires valid PIN session for emergency operations.\nProvides enhanced security for safety-critical operations.",
        "operationId": "pin_emergency_stop_api_safety_pin_emergency_stop_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINEmergencyStopRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Emergency Stop Api Safety Pin Emergency Stop Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/pin/emergency-stop/reset": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Pin Emergency Reset",
        "description": "Reset emergency stop using PIN authorization (Admin Only).\n\nRequires valid PIN session for reset operations.\nProvides enhanced security for safety-critical operations.",
        "operationId": "pin_emergency_reset_api_safety_pin_emergency_stop_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINEmergencyResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Emergency Reset Api Safety Pin Emergency Stop Reset Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/pin/interlocks/override": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Pin Override Interlock",
        "description": "Override a safety interlock using PIN authorization (Admin Only).\n\nAllows temporary override of safety interlocks for maintenance or\ndiagnostic operations. Requires valid PIN session with override permissions.\nOverride will automatically expire after the specified duration.",
        "operationId": "pin_override_interlock_api_safety_pin_interlocks_override_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINInterlockOverrideRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Override Interlock Api Safety Pin Interlocks Override Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/interlocks/clear-override": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Clear Interlock Override",
        "description": "Clear an active interlock override (Admin Only).\n\nImmediately removes any active override on the specified interlock,\nreturning it to normal operation.",
        "operationId": "clear_interlock_override_api_safety_interlocks_clear_override_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterlockOverrideClearRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Clear Interlock Override Api Safety Interlocks Clear Override Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/interlocks/overrides": {
      "get": {
        "tags": [
          "safety"
        ],
        "summary": "Get Active Overrides",
        "description": "Get all active interlock overrides (Admin Only).\n\nReturns information about currently active interlock overrides including\nwho authorized them, when they expire, and the reason for override.",
        "operationId": "get_active_overrides_api_safety_interlocks_overrides_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Active Overrides Api Safety Interlocks Overrides Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/pin/maintenance-mode/enter": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Pin Enter Maintenance Mode",
        "description": "Enter maintenance mode using PIN authorization (Admin Only).\n\nIn maintenance mode:\n- Safety interlocks can be temporarily overridden\n- Certain safety checks may be relaxed for service operations\n- All actions are fully audited\n- Mode automatically expires after the specified duration\n\nRequires valid PIN session with maintenance permissions.",
        "operationId": "pin_enter_maintenance_mode_api_safety_pin_maintenance_mode_enter_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINMaintenanceModeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Enter Maintenance Mode Api Safety Pin Maintenance Mode Enter Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/pin/maintenance-mode/exit": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Pin Exit Maintenance Mode",
        "description": "Exit maintenance mode using PIN authorization (Admin Only).\n\nReturns system to normal operational mode:\n- All safety interlocks return to normal operation\n- Any active overrides are cleared\n- Full safety validation resumes\n\nRequires valid PIN session.",
        "operationId": "pin_exit_maintenance_mode_api_safety_pin_maintenance_mode_exit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINMaintenanceModeExitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Exit Maintenance Mode Api Safety Pin Maintenance Mode Exit Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/operational-mode": {
      "get": {
        "tags": [
          "safety"
        ],
        "summary": "Get Operational Mode",
        "description": "Get current operational mode and session details.\n\nReturns information about the current operational mode including:\n- Current mode (normal, maintenance, diagnostic)\n- Who activated the mode\n- When it was activated and when it expires\n- Active overrides count",
        "operationId": "get_operational_mode_api_safety_operational_mode_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Operational Mode Api Safety Operational Mode Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/pin/diagnostic-mode/enter": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Pin Enter Diagnostic Mode",
        "description": "Enter diagnostic mode using PIN authorization (Admin Only).\n\nIn diagnostic mode:\n- System diagnostics and testing can be performed\n- Test procedures may temporarily modify safety constraints\n- All actions are fully audited\n- Mode automatically expires after the specified duration\n\nWARNING: Diagnostic mode is intended for troubleshooting only.\nSafety constraints may be modified during diagnostics.\n\nRequires valid PIN session with diagnostic permissions.",
        "operationId": "pin_enter_diagnostic_mode_api_safety_pin_diagnostic_mode_enter_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINDiagnosticModeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Enter Diagnostic Mode Api Safety Pin Diagnostic Mode Enter Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/safety/pin/diagnostic-mode/exit": {
      "post": {
        "tags": [
          "safety"
        ],
        "summary": "Pin Exit Diagnostic Mode",
        "description": "Exit diagnostic mode using PIN authorization (Admin Only).\n\nReturns system to normal operational mode:\n- All safety constraints return to normal operation\n- Any diagnostic overrides are cleared\n- Full safety validation resumes\n\nRequires valid PIN session.",
        "operationId": "pin_exit_diagnostic_mode_api_safety_pin_diagnostic_mode_exit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINDiagnosticModeExitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Exit Diagnostic Mode Api Safety Pin Diagnostic Mode Exit Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/validate": {
      "post": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Validate Pin",
        "description": "Validate a PIN and create authorization session.\n\nCreates a time-limited session that can be used to authorize\nsafety-critical operations. Sessions are single-use for emergency\noperations and multi-use for maintenance operations.",
        "operationId": "validate_pin_api_pin_auth_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PINValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PINValidationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/authorize": {
      "post": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Authorize Operation",
        "description": "Authorize an operation using PIN session.\n\nConsumes a PIN session to authorize a specific safety-critical operation.\nSome sessions are single-use (emergency) while others allow multiple\noperations (maintenance).",
        "operationId": "authorize_operation_api_pin_auth_authorize_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperationAuthorizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationAuthorizationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/sessions/{session_id}": {
      "delete": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Revoke Session",
        "description": "Revoke a specific PIN session.\n\nUsers can revoke their own sessions. Admins can revoke any session.",
        "operationId": "revoke_session_api_pin_auth_sessions__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Revoke Session Api Pin Auth Sessions  Session Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/sessions": {
      "delete": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Revoke All User Sessions",
        "description": "Revoke all PIN sessions for the current user.\n\nUseful for security cleanup or when leaving the RV.",
        "operationId": "revoke_all_user_sessions_api_pin_auth_sessions_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Revoke All User Sessions Api Pin Auth Sessions Delete"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/status": {
      "get": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Get Pin Status",
        "description": "Get PIN status for the current user.\n\nShows lockout status, active sessions, and PIN availability.",
        "operationId": "get_pin_status_api_pin_auth_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PINStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/admin/system-status": {
      "get": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Get System Status",
        "description": "Get overall PIN system status (Admin only).\n\nProvides system-wide statistics and health information.",
        "operationId": "get_system_status_api_pin_auth_admin_system_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/admin/rotate-pins": {
      "post": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Rotate Pins",
        "description": "Generate new PINs for all types (Admin only).\n\nThis is a security operation that revokes all existing sessions\nand generates new PINs. Use with caution.",
        "operationId": "rotate_pins_api_pin_auth_admin_rotate_pins_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PINRotationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/admin/user-status/{user_id}": {
      "get": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Get User Pin Status",
        "description": "Get PIN status for a specific user (Admin only).\n\nProvides detailed information about user's PIN authentication status.",
        "operationId": "get_user_pin_status_api_pin_auth_admin_user_status__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get User Pin Status Api Pin Auth Admin User Status  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/admin/unlock-user/{user_id}": {
      "post": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Unlock User",
        "description": "Unlock a user from PIN lockout (Admin only).\n\nClears PIN attempt failures and removes lockout for the specified user.",
        "operationId": "unlock_user_api_pin_auth_admin_unlock_user__user_id__post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Unlock User Api Pin Auth Admin Unlock User  User Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/security-status": {
      "get": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Get Security Status Compat",
        "description": "Get security status (compatibility endpoint for frontend).\n\nMaps to the system status endpoint for consistency.",
        "operationId": "get_security_status_compat_api_pin_auth_security_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pin-auth/pins": {
      "get": {
        "tags": [
          "pin-authentication"
        ],
        "summary": "Get User Pins",
        "description": "Get configured PINs for the current user.\n\nReturns information about available PIN types without revealing actual PINs.",
        "operationId": "get_user_pins_api_pin_auth_pins_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PINListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/": {
      "get": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Get Security Config",
        "description": "Get complete security configuration (Admin only).\n\nReturns the full security configuration including all policies\nand current settings.",
        "operationId": "get_security_config_api_security_config__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Security Config Api Security Config  Get"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Update Security Config",
        "description": "Update complete security configuration (Admin only).\n\nReplaces the entire security configuration with the provided data.\nUse with caution as this affects all security policies.",
        "operationId": "update_security_config_api_security_config__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Update Security Config Api Security Config  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/summary": {
      "get": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Get Security Summary",
        "description": "Get security configuration summary (Admin only).\n\nReturns a condensed view of security settings and validation status.",
        "operationId": "get_security_summary_api_security_config_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Security Summary Api Security Config Summary Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/mode": {
      "post": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Update Security Mode",
        "description": "Update security mode (Admin only).\n\nChanges the overall security mode which affects multiple policies.\nAvailable modes: minimal, standard, strict, paranoid.",
        "operationId": "update_security_mode_api_security_config_mode_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityModeUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityModeUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/policies/{policy_type}": {
      "post": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Update Policy",
        "description": "Update a specific security policy (Admin only).\n\nUpdates individual policies without affecting the entire configuration.\nSupported policy types: pin, rate_limiting, authentication, audit, network.",
        "operationId": "update_policy_api_security_config_policies__policy_type__post",
        "parameters": [
          {
            "name": "policy_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Policy Api Security Config Policies  Policy Type  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/validate": {
      "get": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Validate Config",
        "description": "Validate current security configuration (Admin only).\n\nChecks the current configuration for issues and provides recommendations.",
        "operationId": "validate_config_api_security_config_validate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/reload": {
      "post": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Reload Config",
        "description": "Reload security configuration from disk (Admin only).\n\nForces a reload of the configuration file, useful after manual edits.",
        "operationId": "reload_config_api_security_config_reload_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reload Config Api Security Config Reload Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/policies/pin": {
      "get": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Get Pin Policy",
        "description": "Get PIN security policy configuration (Admin only).",
        "operationId": "get_pin_policy_api_security_config_policies_pin_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Pin Policy Api Security Config Policies Pin Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/policies/rate-limiting": {
      "get": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Get Rate Limiting Policy",
        "description": "Get rate limiting policy configuration (Admin only).",
        "operationId": "get_rate_limiting_policy_api_security_config_policies_rate_limiting_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Rate Limiting Policy Api Security Config Policies Rate Limiting Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/policies/authentication": {
      "get": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Get Authentication Policy",
        "description": "Get authentication policy configuration (Admin only).",
        "operationId": "get_authentication_policy_api_security_config_policies_authentication_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Authentication Policy Api Security Config Policies Authentication Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/config/caddy/rate-limits": {
      "get": {
        "tags": [
          "security-configuration"
        ],
        "summary": "Get Caddy Rate Limits",
        "description": "Get Caddy-compatible rate limit configuration (Admin only).\n\nReturns the IP-based rate limits that should be configured in Caddy.\nThis is separate from the user-aware rate limits handled in FastAPI.",
        "operationId": "get_caddy_rate_limits_api_security_config_caddy_rate_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Caddy Rate Limits Api Security Config Caddy Rate Limits Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/dashboard/data": {
      "get": {
        "tags": [
          "security-dashboard"
        ],
        "summary": "Get Dashboard Data",
        "description": "Get complete security dashboard data.\n\nReturns:\n    Complete dashboard data including stats, events, and health",
        "operationId": "get_dashboard_data_api_security_dashboard_data_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of recent events to include",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of recent events to include"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityDashboardData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/dashboard/stats": {
      "get": {
        "tags": [
          "security-dashboard"
        ],
        "summary": "Get Security Stats",
        "description": "Get security statistics summary.\n\nReturns:\n    Security statistics and metrics",
        "operationId": "get_security_stats_api_security_dashboard_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Security Stats Api Security Dashboard Stats Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/dashboard/events/recent": {
      "get": {
        "tags": [
          "security-dashboard"
        ],
        "summary": "Get Recent Events",
        "description": "Get recent security events.\n\nArgs:\n    limit: Maximum number of events to return\n    severity: Optional severity filter\n\nReturns:\n    Recent security events with metadata",
        "operationId": "get_recent_events_api_security_dashboard_events_recent_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "description": "Number of events to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Number of events to return"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by severity",
              "title": "Severity"
            },
            "description": "Filter by severity"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Recent Events Api Security Dashboard Events Recent Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/dashboard/health": {
      "get": {
        "tags": [
          "security-dashboard"
        ],
        "summary": "Get System Health",
        "description": "Get comprehensive system health status.\n\nReturns:\n    System health information for all security components",
        "operationId": "get_system_health_api_security_dashboard_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__routers__security_dashboard__SystemHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/dashboard/test/event": {
      "post": {
        "tags": [
          "security-dashboard"
        ],
        "summary": "Create Test Event",
        "description": "Create a test security event for dashboard testing.\n\nArgs:\n    event_type: Type of security event to create\n    severity: Severity level (info, low, medium, high, critical)\n    title: Event title\n\nReturns:\n    Information about the created test event",
        "operationId": "create_test_event_api_security_dashboard_test_event_post",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "can_rate_limit_violation",
              "title": "Event Type"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "medium",
              "title": "Severity"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "Test Security Event",
              "title": "Title"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Test Event Api Security Dashboard Test Event Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/dashboard/websocket/info": {
      "get": {
        "tags": [
          "security-dashboard"
        ],
        "summary": "Get Websocket Info",
        "description": "Get WebSocket connection information.\n\nReturns:\n    Information about WebSocket connections and status",
        "operationId": "get_websocket_info_api_security_dashboard_websocket_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Websocket Info Api Security Dashboard Websocket Info Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/health": {
      "get": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Get System Health",
        "description": "Get comprehensive notification system health status.\n\nReturns overall system health including component status, performance\nindicators, and active alerts/warnings.",
        "operationId": "get_system_health_api_notifications_dashboard_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardHealth"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/metrics": {
      "get": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Get System Metrics",
        "description": "Get comprehensive notification system metrics over specified time range.\n\nArgs:\n    hours: Time range for metrics (1-168 hours)\n\nReturns:\n    Detailed system metrics including volume, performance, and trends",
        "operationId": "get_system_metrics_api_notifications_dashboard_metrics_get",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Time range in hours",
              "default": 24,
              "title": "Hours"
            },
            "description": "Time range in hours"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__routers__notification_dashboard__DashboardMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/queue-stats": {
      "get": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Get Queue Statistics",
        "description": "Get detailed notification queue statistics and health information.\n\nReturns comprehensive queue status including pending counts, processing\ntimes, throughput, and capacity utilization.",
        "operationId": "get_queue_statistics_api_notifications_dashboard_queue_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/rate-limiting": {
      "get": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Get Rate Limiting Status",
        "description": "Get rate limiting system status and statistics.\n\nReturns token bucket status, request statistics, debouncing effectiveness,\nand per-channel rate limiting information.",
        "operationId": "get_rate_limiting_status_api_notifications_dashboard_rate_limiting_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitingStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/channels/health": {
      "get": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Get Channel Health",
        "description": "Get health status for all notification channels.\n\nReturns detailed health information for each configured notification\nchannel including connectivity, recent success rates, and error information.",
        "operationId": "get_channel_health_api_notifications_dashboard_channels_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Channel Health Api Notifications Dashboard Channels Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/test": {
      "post": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Trigger Test Notifications",
        "description": "Trigger test notifications for monitoring and verification.\n\nArgs:\n    channels: Optional list of specific channels to test\n\nReturns:\n    Test results for each channel",
        "operationId": "trigger_test_notifications_api_notifications_dashboard_test_post",
        "parameters": [
          {
            "name": "channels",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specific channels to test",
              "title": "Channels"
            },
            "description": "Specific channels to test"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Trigger Test Notifications Api Notifications Dashboard Test Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/alerts/config": {
      "get": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Get Alert Configuration",
        "description": "Get current alert configuration thresholds.\n\nReturns the configuration for dashboard alerts including queue depth,\nsuccess rate, processing time, and age thresholds.",
        "operationId": "get_alert_configuration_api_notifications_dashboard_alerts_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertConfiguration"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Update Alert Configuration",
        "description": "Update alert configuration thresholds.\n\nArgs:\n    config: New alert configuration\n\nReturns:\n    Updated alert configuration",
        "operationId": "update_alert_configuration_api_notifications_dashboard_alerts_config_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertConfiguration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/dashboard/export/metrics": {
      "get": {
        "tags": [
          "notification-dashboard"
        ],
        "summary": "Export Metrics",
        "description": "Export notification system metrics in various formats.\n\nArgs:\n    format: Export format (json, csv, prometheus)\n    hours: Time range for metrics\n\nReturns:\n    Metrics data in requested format",
        "operationId": "export_metrics_api_notifications_dashboard_export_metrics_get",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv|prometheus)$",
              "default": "json",
              "title": "Format"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Export Metrics Api Notifications Dashboard Export Metrics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/metrics": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Get Metrics",
        "description": "Get aggregated notification metrics.\n\nReturns time-series data for the specified metric type and period.",
        "operationId": "get_metrics_api_notification_analytics_metrics_get",
        "parameters": [
          {
            "name": "metric_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MetricType",
              "description": "Type of metric"
            },
            "description": "Type of metric"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Start date",
              "title": "Start Date"
            },
            "description": "Start date"
          },
          {
            "name": "aggregation_period",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AggregationPeriod",
              "description": "Aggregation period",
              "default": "hourly"
            },
            "description": "Aggregation period"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date",
              "title": "End Date"
            },
            "description": "End date"
          },
          {
            "name": "channel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NotificationChannel"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by channel",
              "title": "Channel"
            },
            "description": "Filter by channel"
          },
          {
            "name": "notification_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NotificationType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by type",
              "title": "Notification Type"
            },
            "description": "Filter by type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationMetric"
                  },
                  "title": "Response Get Metrics Api Notification Analytics Metrics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/channels": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Get Channel Metrics",
        "description": "Get performance metrics for notification channels.\n\nReturns detailed metrics for each channel including success rates,\ndelivery times, and error breakdowns.",
        "operationId": "get_channel_metrics_api_notification_analytics_channels_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date",
              "title": "Start Date"
            },
            "description": "Start date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date",
              "title": "End Date"
            },
            "description": "End date"
          },
          {
            "name": "channel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NotificationChannel"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific channel",
              "title": "Channel"
            },
            "description": "Specific channel"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelMetricsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/errors": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Analyze Errors",
        "description": "Analyze notification delivery errors.\n\nReturns error patterns, frequencies, and recommendations for\nimproving delivery success rates.",
        "operationId": "analyze_errors_api_notification_analytics_errors_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date",
              "title": "Start Date"
            },
            "description": "Start date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date",
              "title": "End Date"
            },
            "description": "End date"
          },
          {
            "name": "min_occurrences",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Minimum occurrences",
              "default": 5,
              "title": "Min Occurrences"
            },
            "description": "Minimum occurrences"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/queue/health": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Get Queue Health",
        "description": "Get current notification queue health status.\n\nReturns real-time metrics about queue performance and health indicators.",
        "operationId": "get_queue_health_api_notification_analytics_queue_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/reports/generate": {
      "post": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Generate Report",
        "description": "Generate a notification analytics report.\n\nCreates a report using the specified template and returns the report ID\nfor downloading.",
        "operationId": "generate_report_api_notification_analytics_reports_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Generate Report Api Notification Analytics Reports Generate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/reports/{report_id}": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Get Report",
        "description": "Get report metadata by ID.\n\nReturns information about a generated report including its status\nand download URL.",
        "operationId": "get_report_api_notification_analytics_reports__report_id__get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Report Api Notification Analytics Reports  Report Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/reports/{report_id}/download": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Download Report",
        "description": "Download a generated report.\n\nReturns the report file in the format it was generated.",
        "operationId": "download_report_api_notification_analytics_reports__report_id__download_get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/reports": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "List Reports",
        "description": "List generated reports.\n\nReturns a list of reports with optional filtering.",
        "operationId": "list_reports_api_notification_analytics_reports_get",
        "parameters": [
          {
            "name": "report_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by report type",
              "title": "Report Type"
            },
            "description": "Filter by report type"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by generation date start",
              "title": "Start Date"
            },
            "description": "Filter by generation date start"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by generation date end",
              "title": "End Date"
            },
            "description": "Filter by generation date end"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "description": "Maximum results",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Reports Api Notification Analytics Reports Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/reports/schedule": {
      "post": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Schedule Report",
        "description": "Schedule a recurring report.\n\nCreates a scheduled report that will be generated automatically\nbased on the specified schedule.",
        "operationId": "schedule_report_api_notification_analytics_reports_schedule_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportScheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Schedule Report Api Notification Analytics Reports Schedule Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/reports/schedule/{schedule_id}": {
      "delete": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Unschedule Report",
        "description": "Remove a scheduled report.\n\nCancels a scheduled report by ID.",
        "operationId": "unschedule_report_api_notification_analytics_reports_schedule__schedule_id__delete",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Schedule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Unschedule Report Api Notification Analytics Reports Schedule  Schedule Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/dashboard": {
      "get": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Get Dashboard Metrics",
        "description": "Get dashboard metrics for real-time monitoring.\n\nReturns a comprehensive set of metrics suitable for dashboard display.",
        "operationId": "get_dashboard_metrics_api_notification_analytics_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__routers__notification_analytics__DashboardMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-analytics/engagement/{notification_id}": {
      "post": {
        "tags": [
          "notification-analytics"
        ],
        "summary": "Track Engagement",
        "description": "Track user engagement with a notification.\n\nRecords when a notification is opened, clicked, or dismissed.",
        "operationId": "track_engagement_api_notification_analytics_engagement__notification_id__post",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Notification Id"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Action type: opened, clicked, dismissed",
              "title": "Action"
            },
            "description": "Action type: opened, clicked, dismissed"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Track Engagement Api Notification Analytics Engagement  Notification Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/summary": {
      "get": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "Get Pattern Summary",
        "description": "Get summary of all pattern analysis results.\n\nReturns:\n    Summary statistics for all tracked messages",
        "operationId": "get_pattern_summary_api_pattern_analysis_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatternSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/message/{arbitration_id}": {
      "get": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "Get Message Analysis",
        "description": "Get detailed pattern analysis for a specific message ID.\n\nArgs:\n    arbitration_id: CAN message arbitration ID (decimal)\n\nReturns:\n    Detailed analysis results for the message",
        "operationId": "get_message_analysis_api_pattern_analysis_message__arbitration_id__get",
        "parameters": [
          {
            "name": "arbitration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Arbitration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatternAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/message-hex/{arbitration_id_hex}": {
      "get": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "Get Message Analysis Hex",
        "description": "Get detailed pattern analysis for a specific message ID (hex format).\n\nArgs:\n    arbitration_id_hex: CAN message arbitration ID in hex format (e.g., \"1FFFFFFF\")\n\nReturns:\n    Detailed analysis results for the message",
        "operationId": "get_message_analysis_hex_api_pattern_analysis_message_hex__arbitration_id_hex__get",
        "parameters": [
          {
            "name": "arbitration_id_hex",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Arbitration Id Hex"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatternAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/messages": {
      "get": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "List Analyzed Messages",
        "description": "List all messages with pattern analysis data.\n\nArgs:\n    classification: Filter by message classification (periodic, event, mixed)\n    min_count: Minimum number of message observations\n    limit: Maximum number of results to return\n\nReturns:\n    List of messages with basic analysis info",
        "operationId": "list_analyzed_messages_api_pattern_analysis_messages_get",
        "parameters": [
          {
            "name": "classification",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by classification",
              "title": "Classification"
            },
            "description": "Filter by classification"
          },
          {
            "name": "min_count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Minimum message count",
              "default": 1,
              "title": "Min Count"
            },
            "description": "Minimum message count"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of results",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Analyzed Messages Api Pattern Analysis Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/correlations/{arbitration_id}": {
      "get": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "Get Message Correlations",
        "description": "Get messages correlated with the specified message ID.\n\nArgs:\n    arbitration_id: Target message arbitration ID\n    min_correlation: Minimum correlation score (0.0-1.0)\n\nReturns:\n    List of correlated messages with correlation scores",
        "operationId": "get_message_correlations_api_pattern_analysis_correlations__arbitration_id__get",
        "parameters": [
          {
            "name": "arbitration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Arbitration Id"
            }
          },
          {
            "name": "min_correlation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Minimum correlation threshold",
              "default": 0.3,
              "title": "Min Correlation"
            },
            "description": "Minimum correlation threshold"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Message Correlations Api Pattern Analysis Correlations  Arbitration Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/export/provisional-dbc": {
      "get": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "Export Provisional Dbc",
        "description": "Export discovered message patterns as a provisional DBC file.\n\nReturns:\n    DBC file content for download",
        "operationId": "export_provisional_dbc_api_pattern_analysis_export_provisional_dbc_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/bit-analysis/{arbitration_id}": {
      "get": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "Get Bit Analysis",
        "description": "Get detailed bit-level analysis for a specific message.\n\nArgs:\n    arbitration_id: Message arbitration ID\n    min_changes: Minimum number of changes to include a bit\n\nReturns:\n    Detailed bit change patterns",
        "operationId": "get_bit_analysis_api_pattern_analysis_bit_analysis__arbitration_id__get",
        "parameters": [
          {
            "name": "arbitration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Arbitration Id"
            }
          },
          {
            "name": "min_changes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Minimum number of bit changes",
              "default": 5,
              "title": "Min Changes"
            },
            "description": "Minimum number of bit changes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Bit Analysis Api Pattern Analysis Bit Analysis  Arbitration Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pattern-analysis/reset": {
      "post": {
        "tags": [
          "pattern-analysis"
        ],
        "summary": "Reset Pattern Analysis",
        "description": "Reset all pattern analysis data.\n\nThis clears all accumulated pattern data and starts fresh analysis.\nUse with caution as this will lose all historical pattern information.\n\nReturns:\n    Confirmation message",
        "operationId": "reset_pattern_analysis_api_pattern_analysis_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Reset Pattern Analysis Api Pattern Analysis Reset Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/status": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Security Status",
        "description": "Get overall security monitoring status.\n\nReturns:\n    Comprehensive security status including statistics and alert summary",
        "operationId": "get_security_status_api_security_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/alerts": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Security Alerts",
        "description": "Get security alerts with optional filtering.\n\nArgs:\n    since: Timestamp to filter alerts from\n    severity: Filter by severity (low, medium, high, critical)\n    anomaly_type: Filter by anomaly type\n    limit: Maximum number of alerts to return\n\nReturns:\n    List of security alerts matching criteria",
        "operationId": "get_security_alerts_api_security_alerts_get",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Timestamp to filter from",
              "title": "Since"
            },
            "description": "Timestamp to filter from"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by severity level",
              "title": "Severity"
            },
            "description": "Filter by severity level"
          },
          {
            "name": "anomaly_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by anomaly type",
              "title": "Anomaly Type"
            },
            "description": "Filter by anomaly type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of alerts to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of alerts to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityAlertResponse"
                  },
                  "title": "Response Get Security Alerts Api Security Alerts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/alerts/summary": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Alerts Summary",
        "description": "Get summary of recent security alerts.\n\nReturns:\n    Summary statistics for alerts in different time windows",
        "operationId": "get_alerts_summary_api_security_alerts_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Alerts Summary Api Security Alerts Summary Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/storm-status": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Storm Status",
        "description": "Get broadcast storm detection status.\n\nReturns:\n    Current storm detector status and statistics",
        "operationId": "get_storm_status_api_security_storm_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Storm Status Api Security Storm Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/acl/source": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Add Source To Acl",
        "description": "Add or update a source in the Access Control List.\n\nArgs:\n    entry: ACL entry configuration\n\nReturns:\n    Success message",
        "operationId": "add_source_to_acl_api_security_acl_source_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ACLEntryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Add Source To Acl Api Security Acl Source Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/acl/source/{source_address}": {
      "delete": {
        "tags": [
          "security"
        ],
        "summary": "Remove Source From Acl",
        "description": "Remove a source from the Access Control List.\n\nArgs:\n    source_address: Source address to remove (decimal)\n\nReturns:\n    Success message",
        "operationId": "remove_source_from_acl_api_security_acl_source__source_address__delete",
        "parameters": [
          {
            "name": "source_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Remove Source From Acl Api Security Acl Source  Source Address  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/acl/sources": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "List Acl Sources",
        "description": "List all sources in the Access Control List.\n\nReturns:\n    Dictionary of ACL entries by source address",
        "operationId": "list_acl_sources_api_security_acl_sources_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Acl Sources Api Security Acl Sources Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/acl/policy": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Set Acl Policy",
        "description": "Set the default ACL policy.\n\nArgs:\n    policy_request: Policy configuration (\"allow\" or \"deny\")\n\nReturns:\n    Success message",
        "operationId": "set_acl_policy_api_security_acl_policy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ACLPolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Set Acl Policy Api Security Acl Policy Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/rate-limiting": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Rate Limiting Status",
        "description": "Get rate limiting status and statistics.\n\nReturns:\n    Rate limiting configuration and current token bucket status",
        "operationId": "get_rate_limiting_status_api_security_rate_limiting_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Rate Limiting Status Api Security Rate Limiting Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/reset": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Reset Security Monitoring",
        "description": "Reset all security monitoring data.\n\nThis clears all alerts, statistics, and tracking data.\nUse with caution as this will lose all security history.\n\nReturns:\n    Confirmation message",
        "operationId": "reset_security_monitoring_api_security_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Reset Security Monitoring Api Security Reset Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/test/simulate-attack": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Simulate Attack For Testing",
        "description": "Simulate various types of attacks for testing (development/demo only).\n\nArgs:\n    attack_type: Type of attack (flood, scan, storm)\n    source_address: Source address to use for simulation\n    duration: How long to run the simulation\n\nReturns:\n    Simulation results",
        "operationId": "simulate_attack_for_testing_api_security_test_simulate_attack_get",
        "parameters": [
          {
            "name": "attack_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of attack to simulate",
              "title": "Attack Type"
            },
            "description": "Type of attack to simulate"
          },
          {
            "name": "source_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Source address for simulation",
              "default": 66,
              "title": "Source Address"
            },
            "description": "Source address for simulation"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Duration in seconds",
              "default": 10,
              "title": "Duration"
            },
            "description": "Duration in seconds"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Simulate Attack For Testing Api Security Test Simulate Attack Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/startup/health": {
      "get": {
        "tags": [
          "startup_monitoring"
        ],
        "summary": "Get startup health status",
        "description": "Get overall startup health validation status and basic metrics.",
        "operationId": "get_startup_health_api_startup_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartupHealthStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/startup/metrics": {
      "get": {
        "tags": [
          "startup_monitoring"
        ],
        "summary": "Get startup performance metrics",
        "description": "Get comprehensive startup performance metrics and analysis.",
        "operationId": "get_startup_metrics_api_startup_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartupPerformanceReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/startup/services": {
      "get": {
        "tags": [
          "startup_monitoring"
        ],
        "summary": "Get service startup timings",
        "description": "Get detailed timing information for all services.",
        "operationId": "get_service_timings_api_startup_services_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ServiceTimingInfo"
                  },
                  "type": "array",
                  "title": "Response Get Service Timings Api Startup Services Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/startup/report": {
      "get": {
        "tags": [
          "startup_monitoring"
        ],
        "summary": "Get startup monitoring report",
        "description": "Get the complete startup monitoring report if available.",
        "operationId": "get_startup_report_api_startup_report_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Startup Report Api Startup Report Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/startup/baseline-comparison": {
      "get": {
        "tags": [
          "startup_monitoring"
        ],
        "summary": "Get performance baseline comparison",
        "description": "Get comprehensive performance baseline comparison analysis.",
        "operationId": "get_baseline_comparison_api_startup_baseline_comparison_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Baseline Comparison Api Startup Baseline Comparison Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/health": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint for diagnostics domain API",
        "operationId": "health_check_api_v2_diagnostics_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Api V2 Diagnostics Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/schemas": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get Schemas",
        "description": "Export schemas for diagnostics domain",
        "operationId": "get_schemas_api_v2_diagnostics_schemas_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Schemas Api V2 Diagnostics Schemas Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/metrics": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get System Metrics",
        "description": "Get real-time system performance metrics",
        "operationId": "get_system_metrics_api_v2_diagnostics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__domains__diagnostics__SystemMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/faults": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get Fault Summary",
        "description": "Get fault summary with domain-specific aggregations",
        "operationId": "get_fault_summary_api_v2_diagnostics_faults_get",
        "parameters": [
          {
            "name": "system_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by system type",
              "title": "System Type"
            },
            "description": "Filter by system type"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by severity",
              "title": "Severity"
            },
            "description": "Filter by severity"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaultSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/system-status": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get System Status",
        "description": "Get overall system health status",
        "operationId": "get_system_status_api_v2_diagnostics_system_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/dtcs": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get Dtcs",
        "description": "Get diagnostic trouble codes",
        "operationId": "get_dtcs_api_v2_diagnostics_dtcs_get",
        "parameters": [
          {
            "name": "system_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by system type",
              "title": "System Type"
            },
            "description": "Filter by system type"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by severity",
              "title": "Severity"
            },
            "description": "Filter by severity"
          },
          {
            "name": "protocol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by protocol",
              "title": "Protocol"
            },
            "description": "Filter by protocol"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Dtcs Api V2 Diagnostics Dtcs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/dtcs/resolve": {
      "post": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Resolve Dtc",
        "description": "Resolve a diagnostic trouble code",
        "operationId": "resolve_dtc_api_v2_diagnostics_dtcs_resolve_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Resolve Dtc Api V2 Diagnostics Dtcs Resolve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/statistics": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get Statistics",
        "description": "Get diagnostic statistics",
        "operationId": "get_statistics_api_v2_diagnostics_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Statistics Api V2 Diagnostics Statistics Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/correlations": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get Correlations",
        "description": "Get fault correlations",
        "operationId": "get_correlations_api_v2_diagnostics_correlations_get",
        "parameters": [
          {
            "name": "time_window_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Time window for correlation analysis",
              "default": 60.0,
              "title": "Time Window Seconds"
            },
            "description": "Time window for correlation analysis"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Correlations Api V2 Diagnostics Correlations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/diagnostics/predictions": {
      "get": {
        "tags": [
          "diagnostics-v2"
        ],
        "summary": "Get Predictions",
        "description": "Get maintenance predictions",
        "operationId": "get_predictions_api_v2_diagnostics_predictions_get",
        "parameters": [
          {
            "name": "time_horizon_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Time horizon for predictions in days",
              "default": 90,
              "title": "Time Horizon Days"
            },
            "description": "Time horizon for predictions in days"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Predictions Api V2 Diagnostics Predictions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/health": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Health Check",
        "description": "Comprehensive health check for Pi RV deployment debugging",
        "operationId": "health_check_api_v2_entities_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Api V2 Entities Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/schemas": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Schemas",
        "description": "Export Pydantic schemas as JSON Schema for frontend validation",
        "operationId": "get_schemas_api_v2_entities_schemas_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Schemas Api V2 Entities Schemas Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/debug/system-info": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Debug Info",
        "description": "Comprehensive debug information for RV Pi troubleshooting",
        "operationId": "get_debug_info_api_v2_entities_debug_system_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Debug Info Api V2 Entities Debug System Info Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Entities",
        "description": "Get entities with filtering and pagination (v2) - optimized for Pi deployment",
        "operationId": "get_entities_api_v2_entities_get",
        "parameters": [
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by device type",
              "title": "Device Type"
            },
            "description": "Filter by device type"
          },
          {
            "name": "area",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by area",
              "title": "Area"
            },
            "description": "Filter by area"
          },
          {
            "name": "protocol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by protocol",
              "title": "Protocol"
            },
            "description": "Filter by protocol"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items per page",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityCollectionV2"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/safety-status": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Safety Status",
        "description": "Get current safety system status",
        "operationId": "get_safety_status_api_v2_entities_safety_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Safety Status Api V2 Entities Safety Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/metadata": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Entity Metadata",
        "description": "Get metadata about entity types, areas, and capabilities",
        "operationId": "get_entity_metadata_api_v2_entities_metadata_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Entity Metadata Api V2 Entities Metadata Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/protocol-summary": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Protocol Summary",
        "description": "Get summary of entity distribution across protocols",
        "operationId": "get_protocol_summary_api_v2_entities_protocol_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Protocol Summary Api V2 Entities Protocol Summary Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/debug/unmapped": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Unmapped Entries",
        "description": "Get unmapped DGN/instance pairs observed on CAN bus",
        "operationId": "get_unmapped_entries_api_v2_entities_debug_unmapped_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Unmapped Entries Api V2 Entities Debug Unmapped Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/debug/unknown-pgns": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Unknown Pgns",
        "description": "Get unknown PGNs observed on CAN bus",
        "operationId": "get_unknown_pgns_api_v2_entities_debug_unknown_pgns_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Unknown Pgns Api V2 Entities Debug Unknown Pgns Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/debug/missing-dgns": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Missing Dgns",
        "description": "Get DGNs encountered but not in specification",
        "operationId": "get_missing_dgns_api_v2_entities_debug_missing_dgns_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Missing Dgns Api V2 Entities Debug Missing Dgns Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/mappings": {
      "post": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Create Entity Mapping",
        "description": "Create new entity mapping from unmapped entry",
        "operationId": "create_entity_mapping_api_v2_entities_mappings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Mapping Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Entity Mapping Api V2 Entities Mappings Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/{entity_id}": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Entity",
        "description": "Get a specific entity by ID (v2)",
        "operationId": "get_entity_api_v2_entities__entity_id__get",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitySchemaV2"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/{entity_id}/control": {
      "post": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Control Entity",
        "description": "Control a single entity with safety validation (v2) - Pi optimized",
        "operationId": "control_entity_api_v2_entities__entity_id__control_post",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlCommandV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Control Entity Api V2 Entities  Entity Id  Control Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/bulk-control": {
      "post": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Bulk Control Entities",
        "description": "Execute bulk control operations with safety validation (v2) - Pi optimized",
        "operationId": "bulk_control_entities_api_v2_entities_bulk_control_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkControlRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Bulk Control Entities Api V2 Entities Bulk Control Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/emergency-stop": {
      "post": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Emergency Stop",
        "description": "Emergency stop - immediately halt all entity operations (Admin Only)",
        "operationId": "emergency_stop_api_v2_entities_emergency_stop_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Emergency Stop Api V2 Entities Emergency Stop Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/clear-emergency-stop": {
      "post": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Clear Emergency Stop",
        "description": "Clear emergency stop condition (Admin Only)",
        "operationId": "clear_emergency_stop_api_v2_entities_clear_emergency_stop_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Clear Emergency Stop Api V2 Entities Clear Emergency Stop Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/reconcile-state": {
      "post": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Reconcile State With Rvc Bus",
        "description": "Reconcile application state with RV-C bus state",
        "operationId": "reconcile_state_with_rvc_bus_api_v2_entities_reconcile_state_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reconcile State With Rvc Bus Api V2 Entities Reconcile State Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/entities/{entity_id}/history": {
      "get": {
        "tags": [
          "entities-v2"
        ],
        "summary": "Get Entity History",
        "description": "Get entity state change history",
        "operationId": "get_entity_history_api_v2_entities__entity_id__history_get",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of history entries",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of history entries"
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unix timestamp filter",
              "title": "Since"
            },
            "description": "Unix timestamp filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Entity History Api V2 Entities  Entity Id  History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/networks/health": {
      "get": {
        "tags": [
          "networks-v2"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint for networks domain API",
        "operationId": "health_check_api_v2_networks_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Api V2 Networks Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/networks/schemas": {
      "get": {
        "tags": [
          "networks-v2"
        ],
        "summary": "Get Schemas",
        "description": "Export schemas for networks domain",
        "operationId": "get_schemas_api_v2_networks_schemas_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Schemas Api V2 Networks Schemas Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/networks/status": {
      "get": {
        "tags": [
          "networks-v2"
        ],
        "summary": "Get Network Status",
        "description": "Get overall network status and statistics",
        "operationId": "get_network_status_api_v2_networks_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/networks/interfaces": {
      "get": {
        "tags": [
          "networks-v2"
        ],
        "summary": "Get Network Interfaces",
        "description": "Get detailed information about network interfaces",
        "operationId": "get_network_interfaces_api_v2_networks_interfaces_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NetworkStatus"
                  },
                  "type": "array",
                  "title": "Response Get Network Interfaces Api V2 Networks Interfaces Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/health": {
      "get": {
        "tags": [
          "system-v2"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint for system domain API",
        "operationId": "health_check_api_v2_system_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Api V2 System Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/schemas": {
      "get": {
        "tags": [
          "system-v2"
        ],
        "summary": "Get Schemas",
        "description": "Export schemas for system domain",
        "operationId": "get_schemas_api_v2_system_schemas_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Schemas Api V2 System Schemas Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/info": {
      "get": {
        "tags": [
          "system-v2"
        ],
        "summary": "Get System Info",
        "description": "Get system information",
        "operationId": "get_system_info_api_v2_system_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/status": {
      "get": {
        "tags": [
          "system-v2"
        ],
        "summary": "Get System Status",
        "description": "Get overall system status with enhanced metadata\n\nSupports multiple formats:\n- default: Standard SystemStatus response\n- ietf: IETF health+json compliant format",
        "operationId": "get_system_status_api_v2_system_status_get",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get System Status Api V2 System Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/services": {
      "get": {
        "tags": [
          "system-v2"
        ],
        "summary": "Get Services",
        "description": "Get detailed service information",
        "operationId": "get_services_api_v2_system_services_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/backend__api__domains__system__ServiceStatus"
                  },
                  "type": "array",
                  "title": "Response Get Services Api V2 System Services Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/components/health": {
      "get": {
        "tags": [
          "system-v2"
        ],
        "summary": "Get Component Health",
        "description": "Get detailed health status for all system components\n\nReturns health information for individual system components,\norganized by category (core, network, storage, external).",
        "operationId": "get_component_health_api_v2_system_components_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/events": {
      "get": {
        "tags": [
          "system-v2"
        ],
        "summary": "Get Event Logs",
        "description": "Get system event logs with filtering\n\nReturns recent system events that can be filtered by:\n- Log level (debug, info, warning, error, critical)\n- Component name\n- Time range",
        "operationId": "get_event_logs_api_v2_system_events_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          },
          {
            "name": "component",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Component"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventLogResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ACLEntryRequest": {
        "properties": {
          "source_address": {
            "type": "integer",
            "title": "Source Address"
          },
          "allowed_pgns": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Pgns"
          },
          "denied_pgns": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Pgns"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "source_address"
        ],
        "title": "ACLEntryRequest",
        "description": "Request to add/update ACL entry."
      },
      "ACLPolicyRequest": {
        "properties": {
          "policy": {
            "type": "string",
            "title": "Policy"
          }
        },
        "type": "object",
        "required": [
          "policy"
        ],
        "title": "ACLPolicyRequest",
        "description": "Request to set ACL policy."
      },
      "APIPerformanceRequest": {
        "properties": {
          "endpoint": {
            "type": "string",
            "title": "Endpoint",
            "description": "API endpoint"
          },
          "response_time_ms": {
            "type": "number",
            "title": "Response Time Ms",
            "description": "Response time in milliseconds"
          },
          "status_code": {
            "type": "integer",
            "title": "Status Code",
            "description": "HTTP status code",
            "default": 200
          }
        },
        "type": "object",
        "required": [
          "endpoint",
          "response_time_ms"
        ],
        "title": "APIPerformanceRequest",
        "description": "Request model for recording API performance."
      },
      "ActiveAlert": {
        "properties": {
          "alert_id": {
            "type": "string",
            "title": "Alert Id",
            "description": "Alert definition ID"
          },
          "triggered_at": {
            "type": "string",
            "format": "date-time",
            "title": "Triggered At",
            "description": "When the alert was triggered"
          },
          "current_value": {
            "type": "number",
            "title": "Current Value",
            "description": "Current metric value"
          },
          "threshold": {
            "type": "number",
            "title": "Threshold",
            "description": "Alert threshold"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Alert message"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "description": "Alert severity"
          },
          "acknowledged": {
            "type": "boolean",
            "title": "Acknowledged",
            "description": "Whether alert is acknowledged",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "alert_id",
          "triggered_at",
          "current_value",
          "threshold",
          "message",
          "severity"
        ],
        "title": "ActiveAlert",
        "description": "Active system alert."
      },
      "ActivityEntry": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique activity ID"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Activity timestamp"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Type of event (entity_change, system_alert, etc.)"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id",
            "description": "Related entity ID"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Human-readable activity title"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Activity description"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "description": "Severity level (info, warning, error)"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Additional event data"
          }
        },
        "type": "object",
        "required": [
          "id",
          "timestamp",
          "event_type",
          "title",
          "description",
          "severity"
        ],
        "title": "ActivityEntry",
        "description": "Single activity feed entry."
      },
      "ActivityFeed": {
        "properties": {
          "entries": {
            "items": {
              "$ref": "#/components/schemas/ActivityEntry"
            },
            "type": "array",
            "title": "Entries",
            "description": "Recent activity entries"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of activities available"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether more activities are available"
          }
        },
        "type": "object",
        "required": [
          "entries",
          "total_count",
          "has_more"
        ],
        "title": "ActivityFeed",
        "description": "Activity feed with recent events."
      },
      "AdminCredentials": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "warning": {
            "type": "string",
            "title": "Warning"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "created_at",
          "warning"
        ],
        "title": "AdminCredentials",
        "description": "Auto-generated admin credentials response model."
      },
      "AdminMFADisableRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "AdminMFADisableRequest",
        "description": "Admin MFA disable request model."
      },
      "AggregationPeriod": {
        "type": "string",
        "enum": [
          "hourly",
          "daily",
          "weekly",
          "monthly"
        ],
        "title": "AggregationPeriod",
        "description": "Time periods for metric aggregation."
      },
      "AlertConfiguration": {
        "properties": {
          "queue_depth_warning_threshold": {
            "type": "integer",
            "title": "Queue Depth Warning Threshold",
            "description": "Queue depth warning threshold",
            "default": 100
          },
          "queue_depth_critical_threshold": {
            "type": "integer",
            "title": "Queue Depth Critical Threshold",
            "description": "Queue depth critical threshold",
            "default": 500
          },
          "success_rate_warning_threshold": {
            "type": "number",
            "title": "Success Rate Warning Threshold",
            "description": "Success rate warning threshold",
            "default": 95.0
          },
          "success_rate_critical_threshold": {
            "type": "number",
            "title": "Success Rate Critical Threshold",
            "description": "Success rate critical threshold",
            "default": 90.0
          },
          "processing_time_warning_ms": {
            "type": "number",
            "title": "Processing Time Warning Ms",
            "description": "Processing time warning threshold",
            "default": 5000.0
          },
          "processing_time_critical_ms": {
            "type": "number",
            "title": "Processing Time Critical Ms",
            "description": "Processing time critical threshold",
            "default": 10000.0
          },
          "oldest_pending_warning_minutes": {
            "type": "number",
            "title": "Oldest Pending Warning Minutes",
            "description": "Oldest pending warning threshold",
            "default": 30.0
          },
          "oldest_pending_critical_minutes": {
            "type": "number",
            "title": "Oldest Pending Critical Minutes",
            "description": "Oldest pending critical threshold",
            "default": 60.0
          }
        },
        "type": "object",
        "title": "AlertConfiguration",
        "description": "Dashboard alert configuration."
      },
      "AllCANStats": {
        "properties": {
          "interfaces": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CANInterfaceStats"
            },
            "type": "object",
            "title": "Interfaces"
          }
        },
        "type": "object",
        "required": [
          "interfaces"
        ],
        "title": "AllCANStats",
        "description": "Statistics for all CAN interfaces."
      },
      "AnalyzedMessageResponse": {
        "properties": {
          "timestamp": {
            "type": "number",
            "title": "Timestamp"
          },
          "can_id": {
            "type": "string",
            "title": "Can Id"
          },
          "data": {
            "type": "string",
            "title": "Data"
          },
          "interface": {
            "type": "string",
            "title": "Interface"
          },
          "protocol": {
            "type": "string",
            "title": "Protocol"
          },
          "message_type": {
            "type": "string",
            "title": "Message Type"
          },
          "source_address": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Address"
          },
          "destination_address": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destination Address"
          },
          "pgn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pgn"
          },
          "function_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Code"
          },
          "decoded_fields": {
            "items": {
              "$ref": "#/components/schemas/DecodedFieldResponse"
            },
            "type": "array",
            "title": "Decoded Fields",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "can_id",
          "data",
          "interface",
          "protocol",
          "message_type"
        ],
        "title": "AnalyzedMessageResponse",
        "description": "Analyzed CAN message."
      },
      "AuditPolicy": {
        "properties": {
          "log_all_authentication": {
            "type": "boolean",
            "title": "Log All Authentication",
            "description": "Log all authentication attempts",
            "default": true
          },
          "log_safety_operations": {
            "type": "boolean",
            "title": "Log Safety Operations",
            "description": "Log all safety-critical operations",
            "default": true
          },
          "log_admin_operations": {
            "type": "boolean",
            "title": "Log Admin Operations",
            "description": "Log all admin operations",
            "default": true
          },
          "log_failed_operations": {
            "type": "boolean",
            "title": "Log Failed Operations",
            "description": "Log failed operations",
            "default": true
          },
          "audit_retention_days": {
            "type": "integer",
            "maximum": 2555.0,
            "minimum": 90.0,
            "title": "Audit Retention Days",
            "description": "Audit log retention period (1 year default)",
            "default": 365
          },
          "compliance_retention_days": {
            "type": "integer",
            "maximum": 3650.0,
            "minimum": 365.0,
            "title": "Compliance Retention Days",
            "description": "Compliance log retention (7 years default)",
            "default": 2555
          },
          "suspicious_activity_threshold": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 3.0,
            "title": "Suspicious Activity Threshold",
            "description": "Events before suspicious activity alert",
            "default": 5
          },
          "brute_force_threshold": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 3.0,
            "title": "Brute Force Threshold",
            "description": "Failed attempts before brute force alert",
            "default": 5
          },
          "real_time_monitoring_enabled": {
            "type": "boolean",
            "title": "Real Time Monitoring Enabled",
            "description": "Enable real-time security monitoring",
            "default": true
          },
          "threat_detection_enabled": {
            "type": "boolean",
            "title": "Threat Detection Enabled",
            "description": "Enable automated threat detection",
            "default": true
          }
        },
        "type": "object",
        "title": "AuditPolicy",
        "description": "Security audit policy configuration."
      },
      "AuthStatus": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "mode": {
            "type": "string",
            "title": "Mode"
          },
          "jwt_available": {
            "type": "boolean",
            "title": "Jwt Available"
          },
          "magic_links_enabled": {
            "type": "boolean",
            "title": "Magic Links Enabled"
          },
          "oauth_enabled": {
            "type": "boolean",
            "title": "Oauth Enabled"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "mode",
          "jwt_available",
          "magic_links_enabled",
          "oauth_enabled"
        ],
        "title": "AuthStatus",
        "description": "Authentication status response model."
      },
      "AuthenticationPolicy": {
        "properties": {
          "session_timeout_minutes": {
            "type": "integer",
            "maximum": 1440.0,
            "minimum": 60.0,
            "title": "Session Timeout Minutes",
            "description": "Standard session timeout (8 hours default)",
            "default": 480
          },
          "admin_session_timeout_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 30.0,
            "title": "Admin Session Timeout Minutes",
            "description": "Admin session timeout (2 hours default)",
            "default": 120
          },
          "remember_me_days": {
            "type": "integer",
            "maximum": 90.0,
            "minimum": 1.0,
            "title": "Remember Me Days",
            "description": "Remember me token duration",
            "default": 30
          },
          "require_mfa_for_admin": {
            "type": "boolean",
            "title": "Require Mfa For Admin",
            "description": "Require MFA for admin operations",
            "default": false
          },
          "require_pin_for_safety": {
            "type": "boolean",
            "title": "Require Pin For Safety",
            "description": "Require PIN for safety operations",
            "default": true
          },
          "require_auth_for_read": {
            "type": "boolean",
            "title": "Require Auth For Read",
            "description": "Require authentication for read operations",
            "default": true
          },
          "token_rotation_enabled": {
            "type": "boolean",
            "title": "Token Rotation Enabled",
            "description": "Enable automatic token rotation",
            "default": true
          },
          "api_key_expiration_days": {
            "type": "integer",
            "maximum": 365.0,
            "minimum": 30.0,
            "title": "Api Key Expiration Days",
            "description": "API key expiration period",
            "default": 90
          },
          "max_login_attempts": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 3.0,
            "title": "Max Login Attempts",
            "description": "Max login attempts before lockout",
            "default": 5
          },
          "login_lockout_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 5.0,
            "title": "Login Lockout Minutes",
            "description": "Login lockout duration",
            "default": 15
          },
          "login_attempt_window_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 5.0,
            "title": "Login Attempt Window Minutes",
            "description": "Time window for counting failed login attempts",
            "default": 15
          },
          "jwt_algorithm": {
            "type": "string",
            "title": "Jwt Algorithm",
            "description": "JWT algorithm to use (e.g., HS256, RS256)",
            "default": "HS256"
          },
          "access_token_expire_minutes": {
            "type": "integer",
            "maximum": 1440.0,
            "minimum": 1.0,
            "title": "Access Token Expire Minutes",
            "description": "Access token expiration time in minutes",
            "default": 60
          },
          "magic_link_expire_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 1.0,
            "title": "Magic Link Expire Minutes",
            "description": "Magic link token expiration time in minutes",
            "default": 15
          },
          "refresh_token_expire_days": {
            "type": "integer",
            "maximum": 365.0,
            "minimum": 1.0,
            "title": "Refresh Token Expire Days",
            "description": "Refresh token expiration time in days",
            "default": 7
          },
          "enable_magic_links": {
            "type": "boolean",
            "title": "Enable Magic Links",
            "description": "Enable magic link authentication",
            "default": true
          },
          "enable_oauth": {
            "type": "boolean",
            "title": "Enable Oauth",
            "description": "Enable OAuth authentication",
            "default": false
          },
          "enable_mfa": {
            "type": "boolean",
            "title": "Enable Mfa",
            "description": "Enable multi-factor authentication",
            "default": false
          }
        },
        "type": "object",
        "title": "AuthenticationPolicy",
        "description": "Authentication policy configuration."
      },
      "AutoDiscoveryRequest": {
        "properties": {
          "protocols": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Protocols",
            "default": [
              "rvc"
            ]
          },
          "scan_duration_seconds": {
            "type": "integer",
            "title": "Scan Duration Seconds",
            "default": 30
          },
          "deep_scan": {
            "type": "boolean",
            "title": "Deep Scan",
            "default": false
          },
          "save_results": {
            "type": "boolean",
            "title": "Save Results",
            "default": true
          }
        },
        "type": "object",
        "title": "AutoDiscoveryRequest",
        "description": "Request model for auto-discovery wizard."
      },
      "BackendComputedAPIPerformance": {
        "properties": {
          "average_response_time": {
            "type": "number",
            "title": "Average Response Time",
            "description": "Average response time (ms)"
          },
          "response_time_status": {
            "type": "string",
            "title": "Response Time Status",
            "description": "Response time status: good, warning, critical"
          },
          "requests_per_second": {
            "type": "number",
            "title": "Requests Per Second",
            "description": "Requests per second"
          },
          "throughput_status": {
            "type": "string",
            "title": "Throughput Status",
            "description": "Throughput status: good, warning, critical"
          },
          "error_rate": {
            "type": "number",
            "title": "Error Rate",
            "description": "Error rate percentage"
          },
          "error_status": {
            "type": "string",
            "title": "Error Status",
            "description": "Error status: good, warning, critical"
          },
          "overall_performance_status": {
            "type": "string",
            "title": "Overall Performance Status",
            "description": "Overall API performance status"
          }
        },
        "type": "object",
        "required": [
          "average_response_time",
          "response_time_status",
          "requests_per_second",
          "throughput_status",
          "error_rate",
          "error_status",
          "overall_performance_status"
        ],
        "title": "BackendComputedAPIPerformance",
        "description": "Backend-computed API performance with status classification."
      },
      "BackendComputedCANMetrics": {
        "properties": {
          "messageRate": {
            "type": "number",
            "title": "Messagerate",
            "description": "Current message rate (messages/second)"
          },
          "totalMessages": {
            "type": "integer",
            "title": "Totalmessages",
            "description": "Total messages processed"
          },
          "errorCount": {
            "type": "integer",
            "title": "Errorcount",
            "description": "Total error count"
          },
          "uptime": {
            "type": "number",
            "title": "Uptime",
            "description": "System uptime in seconds"
          }
        },
        "type": "object",
        "required": [
          "messageRate",
          "totalMessages",
          "errorCount",
          "uptime"
        ],
        "title": "BackendComputedCANMetrics",
        "description": "Backend-computed CAN metrics in the exact format expected by frontend."
      },
      "BackendComputedCANStatistics": {
        "properties": {
          "total_messages": {
            "type": "integer",
            "title": "Total Messages",
            "description": "Total messages processed"
          },
          "total_errors": {
            "type": "integer",
            "title": "Total Errors",
            "description": "Total error messages"
          },
          "message_rate": {
            "type": "number",
            "title": "Message Rate",
            "description": "Current message rate (messages/second)"
          },
          "uptime": {
            "type": "number",
            "title": "Uptime",
            "description": "System uptime in seconds"
          },
          "error_rate_percent": {
            "type": "number",
            "title": "Error Rate Percent",
            "description": "Error rate percentage"
          },
          "computed_health_status": {
            "type": "string",
            "title": "Computed Health Status",
            "description": "Backend-computed health status"
          },
          "unique_pgns": {
            "type": "integer",
            "title": "Unique Pgns",
            "description": "Number of unique PGNs seen"
          },
          "unique_instances": {
            "type": "integer",
            "title": "Unique Instances",
            "description": "Number of unique instances seen"
          },
          "pgn_statistics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Pgn Statistics",
            "description": "PGN-level message statistics"
          },
          "instance_statistics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Instance Statistics",
            "description": "Instance-level message statistics"
          },
          "top_pgns": {
            "items": {
              "prefixItems": [
                {
                  "type": "string"
                },
                {
                  "additionalProperties": true,
                  "type": "object"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Top Pgns",
            "description": "Top PGNs by message count"
          },
          "last_updated": {
            "type": "number",
            "title": "Last Updated",
            "description": "Timestamp of last update"
          },
          "interface_stats": {
            "additionalProperties": true,
            "type": "object",
            "title": "Interface Stats",
            "description": "Per-interface statistics"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if computation failed"
          }
        },
        "type": "object",
        "required": [
          "total_messages",
          "total_errors",
          "message_rate",
          "uptime",
          "error_rate_percent",
          "computed_health_status",
          "unique_pgns",
          "unique_instances",
          "last_updated"
        ],
        "title": "BackendComputedCANStatistics",
        "description": "Enhanced CAN statistics with backend business logic and PGN-level data."
      },
      "BackendComputedHealthStatus": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Computed health status: healthy, warning, critical"
          },
          "score": {
            "type": "number",
            "title": "Score",
            "description": "Overall health score (0.0-1.0)"
          },
          "color_class": {
            "type": "string",
            "title": "Color Class",
            "description": "CSS color class for UI"
          },
          "variant": {
            "type": "string",
            "title": "Variant",
            "description": "UI variant: default, secondary, destructive"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details",
            "description": "Health computation details"
          }
        },
        "type": "object",
        "required": [
          "status",
          "score",
          "color_class",
          "variant"
        ],
        "title": "BackendComputedHealthStatus",
        "description": "Backend-computed health status with categorized thresholds."
      },
      "BackendComputedResourceStatus": {
        "properties": {
          "cpu_usage": {
            "type": "number",
            "title": "Cpu Usage",
            "description": "CPU usage percentage"
          },
          "cpu_status": {
            "type": "string",
            "title": "Cpu Status",
            "description": "CPU status: good, warning, critical"
          },
          "memory_usage": {
            "type": "number",
            "title": "Memory Usage",
            "description": "Memory usage percentage"
          },
          "memory_status": {
            "type": "string",
            "title": "Memory Status",
            "description": "Memory status: good, warning, critical"
          },
          "disk_usage": {
            "type": "number",
            "title": "Disk Usage",
            "description": "Disk usage percentage"
          },
          "disk_status": {
            "type": "string",
            "title": "Disk Status",
            "description": "Disk status: good, warning, critical"
          },
          "network_usage": {
            "type": "number",
            "title": "Network Usage",
            "description": "Network usage MB/s"
          },
          "network_status": {
            "type": "string",
            "title": "Network Status",
            "description": "Network status: good, warning, critical"
          },
          "overall_status": {
            "type": "string",
            "title": "Overall Status",
            "description": "Overall resource status"
          }
        },
        "type": "object",
        "required": [
          "cpu_usage",
          "cpu_status",
          "memory_usage",
          "memory_status",
          "disk_usage",
          "disk_status",
          "network_usage",
          "network_status",
          "overall_status"
        ],
        "title": "BackendComputedResourceStatus",
        "description": "Backend-computed resource utilization with threshold-based status."
      },
      "BackupCodesResponse": {
        "properties": {
          "backup_codes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Backup Codes"
          },
          "warning": {
            "type": "string",
            "title": "Warning"
          }
        },
        "type": "object",
        "required": [
          "backup_codes",
          "warning"
        ],
        "title": "BackupCodesResponse",
        "description": "Backup codes response model."
      },
      "Body_convert_dbc_to_rvc_api_dbc_convert_dbc_to_rvc_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_convert_dbc_to_rvc_api_dbc_convert_dbc_to_rvc_post"
      },
      "Body_login_for_access_token_api_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_for_access_token_api_auth_login_post"
      },
      "Body_login_step_with_mfa_check_api_auth_login_step_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_step_with_mfa_check_api_auth_login_step_post"
      },
      "Body_secure_login_api_auth_secure_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_secure_login_api_auth_secure_login_post"
      },
      "Body_upload_dbc_api_dbc_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_dbc_api_dbc_upload_post"
      },
      "BulkControlRequest": {
        "properties": {
          "entity_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Entity Ids",
            "description": "List of entity IDs to control"
          },
          "command": {
            "type": "string",
            "title": "Command",
            "description": "Control command (on, off, toggle, set)"
          },
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters",
            "description": "Command parameters"
          },
          "ignore_errors": {
            "type": "boolean",
            "title": "Ignore Errors",
            "description": "Continue on individual entity errors",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "entity_ids",
          "command"
        ],
        "title": "BulkControlRequest",
        "description": "Request for bulk entity control operations."
      },
      "BulkControlRequestV2": {
        "properties": {
          "entity_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Entity Ids",
            "description": "List of entity IDs to control"
          },
          "command": {
            "$ref": "#/components/schemas/ControlCommandV2",
            "description": "Command to execute on all entities"
          },
          "ignore_errors": {
            "type": "boolean",
            "title": "Ignore Errors",
            "description": "Continue on individual failures",
            "default": true
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "description": "Timeout per operation",
            "default": 5.0
          }
        },
        "type": "object",
        "required": [
          "entity_ids",
          "command"
        ],
        "title": "BulkControlRequestV2",
        "description": "Bulk operation request schema"
      },
      "BulkControlResponse": {
        "properties": {
          "total_requested": {
            "type": "integer",
            "title": "Total Requested",
            "description": "Total entities requested"
          },
          "successful": {
            "type": "integer",
            "title": "Successful",
            "description": "Number of successful operations"
          },
          "failed": {
            "type": "integer",
            "title": "Failed",
            "description": "Number of failed operations"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/BulkControlResult"
            },
            "type": "array",
            "title": "Results",
            "description": "Individual operation results"
          },
          "summary": {
            "type": "string",
            "title": "Summary",
            "description": "Operation summary message"
          }
        },
        "type": "object",
        "required": [
          "total_requested",
          "successful",
          "failed",
          "results",
          "summary"
        ],
        "title": "BulkControlResponse",
        "description": "Response for bulk entity control operations."
      },
      "BulkControlResult": {
        "properties": {
          "entity_id": {
            "type": "string",
            "title": "Entity Id",
            "description": "Entity ID"
          },
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the operation succeeded"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Result message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if failed"
          }
        },
        "type": "object",
        "required": [
          "entity_id",
          "success",
          "message"
        ],
        "title": "BulkControlResult",
        "description": "Result of a bulk control operation."
      },
      "CANBusSummary": {
        "properties": {
          "interfaces_count": {
            "type": "integer",
            "title": "Interfaces Count",
            "description": "Number of CAN interfaces"
          },
          "total_messages": {
            "type": "integer",
            "title": "Total Messages",
            "description": "Total messages received"
          },
          "messages_per_minute": {
            "type": "number",
            "title": "Messages Per Minute",
            "description": "Messages per minute"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count",
            "description": "Total error count"
          },
          "queue_length": {
            "type": "integer",
            "title": "Queue Length",
            "description": "Current queue length"
          },
          "bus_load_percent": {
            "type": "number",
            "title": "Bus Load Percent",
            "description": "Bus load percentage"
          }
        },
        "type": "object",
        "required": [
          "interfaces_count",
          "total_messages",
          "messages_per_minute",
          "error_count",
          "queue_length",
          "bus_load_percent"
        ],
        "title": "CANBusSummary",
        "description": "CAN bus status summary."
      },
      "CANInterfaceLoadRequest": {
        "properties": {
          "interface": {
            "type": "string",
            "title": "Interface",
            "description": "CAN interface name"
          },
          "load_percent": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Load Percent",
            "description": "Bus load percentage"
          },
          "message_rate": {
            "type": "number",
            "minimum": 0.0,
            "title": "Message Rate",
            "description": "Messages per second"
          }
        },
        "type": "object",
        "required": [
          "interface",
          "load_percent",
          "message_rate"
        ],
        "title": "CANInterfaceLoadRequest",
        "description": "Request model for recording CAN interface load."
      },
      "CANInterfaceStats": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "restart_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restart Ms"
          },
          "bitrate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bitrate"
          },
          "sample_point": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Point"
          },
          "tq": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tq"
          },
          "prop_seg": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prop Seg"
          },
          "phase_seg1": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phase Seg1"
          },
          "phase_seg2": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phase Seg2"
          },
          "sjw": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sjw"
          },
          "brp": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brp"
          },
          "clock": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clock"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "tx_packets": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tx Packets"
          },
          "rx_packets": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rx Packets"
          },
          "tx_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tx Bytes"
          },
          "rx_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rx Bytes"
          },
          "tx_errors": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tx Errors"
          },
          "rx_errors": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rx Errors"
          },
          "bus_errors": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bus Errors"
          },
          "restarts": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restarts"
          },
          "link/can": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link/Can"
          },
          "promiscuity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promiscuity"
          },
          "allmulti": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allmulti"
          },
          "minmtu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minmtu"
          },
          "maxmtu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxmtu"
          },
          "parentbus": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parentbus"
          },
          "parentdev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parentdev"
          },
          "error_warning": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Warning"
          },
          "error_passive": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Passive"
          },
          "bus_off": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bus Off"
          },
          "raw_details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Details"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CANInterfaceStats",
        "description": "Statistics for a CAN interface."
      },
      "CANProtocol": {
        "type": "string",
        "enum": [
          "unknown",
          "rvc",
          "j1939",
          "canopen",
          "devicenet",
          "nmea2000",
          "iso14229",
          "iso11783",
          "custom"
        ],
        "title": "CANProtocol",
        "description": "Supported CAN protocols."
      },
      "CapturedMessageResponse": {
        "properties": {
          "timestamp": {
            "type": "number",
            "title": "Timestamp"
          },
          "can_id": {
            "type": "string",
            "title": "Can Id"
          },
          "data": {
            "type": "string",
            "title": "Data"
          },
          "interface": {
            "type": "string",
            "title": "Interface"
          },
          "protocol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Protocol",
            "default": "unknown"
          },
          "message_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Type",
            "default": ""
          },
          "decoded": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decoded"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "can_id",
          "data",
          "interface"
        ],
        "title": "CapturedMessageResponse",
        "description": "Captured message response."
      },
      "ChannelMetricsResponse": {
        "properties": {
          "channels": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Channels",
            "description": "Channel metrics"
          },
          "period": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Period",
            "description": "Period information"
          },
          "total_sent": {
            "type": "integer",
            "title": "Total Sent",
            "description": "Total notifications sent"
          },
          "overall_success_rate": {
            "type": "number",
            "title": "Overall Success Rate",
            "description": "Overall success rate"
          }
        },
        "type": "object",
        "required": [
          "channels",
          "period",
          "total_sent",
          "overall_success_rate"
        ],
        "title": "ChannelMetricsResponse",
        "description": "Response model for channel metrics."
      },
      "CommunicationPatternResponse": {
        "properties": {
          "pattern_type": {
            "type": "string",
            "title": "Pattern Type"
          },
          "participants": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Participants"
          },
          "interval_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval Ms"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "default": 0.0
          }
        },
        "type": "object",
        "required": [
          "pattern_type",
          "participants"
        ],
        "title": "CommunicationPatternResponse",
        "description": "Communication pattern."
      },
      "ComponentHealth": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Component identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Component display name"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Component status: healthy/degraded/unhealthy/unknown"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message or error details"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Component category: core/network/storage/external"
          },
          "last_checked": {
            "type": "number",
            "title": "Last Checked",
            "description": "Last health check timestamp"
          },
          "safety_classification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Classification",
            "description": "Safety classification if applicable"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "status",
          "category",
          "last_checked"
        ],
        "title": "ComponentHealth",
        "description": "Individual component health information"
      },
      "ComponentHealthResponse": {
        "properties": {
          "components": {
            "items": {
              "$ref": "#/components/schemas/ComponentHealth"
            },
            "type": "array",
            "title": "Components",
            "description": "List of component health statuses"
          },
          "total_components": {
            "type": "integer",
            "title": "Total Components",
            "description": "Total number of components"
          },
          "healthy_components": {
            "type": "integer",
            "title": "Healthy Components",
            "description": "Number of healthy components"
          },
          "degraded_components": {
            "type": "integer",
            "title": "Degraded Components",
            "description": "Number of degraded components"
          },
          "unhealthy_components": {
            "type": "integer",
            "title": "Unhealthy Components",
            "description": "Number of unhealthy components"
          },
          "timestamp": {
            "type": "number",
            "title": "Timestamp",
            "description": "Response timestamp"
          }
        },
        "type": "object",
        "required": [
          "components",
          "total_components",
          "healthy_components",
          "degraded_components",
          "unhealthy_components",
          "timestamp"
        ],
        "title": "ComponentHealthResponse",
        "description": "Response for component health endpoint"
      },
      "ControlCommandV2": {
        "properties": {
          "command": {
            "type": "string",
            "title": "Command",
            "description": "Command type: set, toggle, brightness_up, brightness_down"
          },
          "state": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "Target state for set commands"
          },
          "brightness": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Brightness",
            "description": "Brightness level 0-100"
          },
          "parameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "Additional command parameters"
          }
        },
        "type": "object",
        "required": [
          "command"
        ],
        "title": "ControlCommandV2",
        "description": "Enhanced control command schema for v2 API"
      },
      "CustomMetricRequest": {
        "properties": {
          "metric_name": {
            "type": "string",
            "title": "Metric Name",
            "description": "Name of the metric"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "Metric value"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata"
          }
        },
        "type": "object",
        "required": [
          "metric_name",
          "value"
        ],
        "title": "CustomMetricRequest",
        "description": "Request model for recording custom metrics."
      },
      "DBCListResponse": {
        "properties": {
          "loaded_dbcs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Loaded Dbcs"
          },
          "active_dbc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Dbc"
          }
        },
        "type": "object",
        "required": [
          "loaded_dbcs",
          "active_dbc"
        ],
        "title": "DBCListResponse",
        "description": "Response for listing loaded DBCs."
      },
      "DBCMessageInfo": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "id_hex": {
            "type": "string",
            "title": "Id Hex"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "length": {
            "type": "integer",
            "title": "Length"
          },
          "signals": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Signals"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "id_hex",
          "name",
          "length",
          "signals"
        ],
        "title": "DBCMessageInfo",
        "description": "Information about a CAN message in DBC."
      },
      "DBCUploadResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "messages_count": {
            "type": "integer",
            "title": "Messages Count"
          },
          "nodes_count": {
            "type": "integer",
            "title": "Nodes Count"
          },
          "signals_count": {
            "type": "integer",
            "title": "Signals Count"
          },
          "dbc_name": {
            "type": "string",
            "title": "Dbc Name"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "messages_count",
          "nodes_count",
          "signals_count",
          "dbc_name"
        ],
        "title": "DBCUploadResponse",
        "description": "Response for DBC file upload."
      },
      "DashboardHealth": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Overall system status (healthy, warning, critical)"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "queue_healthy": {
            "type": "boolean",
            "title": "Queue Healthy",
            "description": "Queue system operational"
          },
          "rate_limiter_healthy": {
            "type": "boolean",
            "title": "Rate Limiter Healthy",
            "description": "Rate limiting functional"
          },
          "dispatcher_healthy": {
            "type": "boolean",
            "title": "Dispatcher Healthy",
            "description": "Notification dispatcher running"
          },
          "channel_health": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Channel Health",
            "description": "Per-channel health status"
          },
          "avg_processing_time_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Processing Time Ms",
            "description": "Average notification processing time"
          },
          "success_rate_percent": {
            "type": "number",
            "title": "Success Rate Percent",
            "description": "Success rate over last hour"
          },
          "queue_depth": {
            "type": "integer",
            "title": "Queue Depth",
            "description": "Current queue depth"
          },
          "alerts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Alerts",
            "description": "Active system alerts"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings",
            "description": "System warnings"
          }
        },
        "type": "object",
        "required": [
          "status",
          "queue_healthy",
          "rate_limiter_healthy",
          "dispatcher_healthy",
          "avg_processing_time_ms",
          "success_rate_percent",
          "queue_depth"
        ],
        "title": "DashboardHealth",
        "description": "Overall notification system health status."
      },
      "DashboardSummary": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Data collection timestamp"
          },
          "entities": {
            "$ref": "#/components/schemas/EntitySummary",
            "description": "Entity summary statistics"
          },
          "system": {
            "$ref": "#/components/schemas/backend__models__dashboard__SystemMetrics",
            "description": "System performance metrics"
          },
          "can_bus": {
            "$ref": "#/components/schemas/CANBusSummary",
            "description": "CAN bus status summary"
          },
          "activity": {
            "$ref": "#/components/schemas/ActivityFeed",
            "description": "Recent activity feed"
          },
          "alerts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Alerts",
            "description": "Active system alerts"
          },
          "quick_stats": {
            "additionalProperties": true,
            "type": "object",
            "title": "Quick Stats",
            "description": "Quick stats for dashboard cards"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "entities",
          "system",
          "can_bus",
          "activity",
          "alerts",
          "quick_stats"
        ],
        "title": "DashboardSummary",
        "description": "Aggregated dashboard data."
      },
      "DatabaseStatusResponse": {
        "properties": {
          "current_version": {
            "type": "string",
            "title": "Current Version"
          },
          "target_version": {
            "type": "string",
            "title": "Target Version"
          },
          "needs_update": {
            "type": "boolean",
            "title": "Needs Update"
          },
          "pending_migrations": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Pending Migrations"
          },
          "is_safe_to_migrate": {
            "type": "boolean",
            "title": "Is Safe To Migrate"
          },
          "safety_issues": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Safety Issues"
          },
          "latest_backup": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Backup"
          },
          "migration_in_progress": {
            "type": "boolean",
            "title": "Migration In Progress"
          },
          "current_job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Job Id"
          }
        },
        "type": "object",
        "required": [
          "current_version",
          "target_version",
          "needs_update",
          "pending_migrations",
          "is_safe_to_migrate",
          "safety_issues",
          "latest_backup",
          "migration_in_progress",
          "current_job_id"
        ],
        "title": "DatabaseStatusResponse",
        "description": "Database schema status."
      },
      "DecodedFieldResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "title": "Value"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "raw_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Value"
          },
          "scale": {
            "type": "number",
            "title": "Scale",
            "default": 1.0
          },
          "offset": {
            "type": "number",
            "title": "Offset",
            "default": 0.0
          },
          "min_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Value"
          },
          "max_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Value"
          },
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "DecodedFieldResponse",
        "description": "Decoded message field."
      },
      "DeviceSetupRequest": {
        "properties": {
          "device_address": {
            "type": "integer",
            "title": "Device Address"
          },
          "device_name": {
            "type": "string",
            "title": "Device Name"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "area": {
            "type": "string",
            "title": "Area",
            "default": "unknown"
          },
          "capabilities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Capabilities",
            "default": []
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "device_address",
          "device_name",
          "device_type"
        ],
        "title": "DeviceSetupRequest",
        "description": "Request model for device setup wizard."
      },
      "DiscoverDevicesRequest": {
        "properties": {
          "protocol": {
            "type": "string",
            "title": "Protocol",
            "default": "rvc"
          }
        },
        "type": "object",
        "title": "DiscoverDevicesRequest",
        "description": "Request model for device discovery."
      },
      "EmergencyStopRequest": {
        "properties": {
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for emergency stop"
          }
        },
        "type": "object",
        "required": [
          "reason"
        ],
        "title": "EmergencyStopRequest",
        "description": "Emergency stop request model."
      },
      "EmergencyStopResetRequest": {
        "properties": {
          "authorization_code": {
            "type": "string",
            "title": "Authorization Code",
            "description": "Legacy authorization code for reset",
            "default": ""
          },
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for enhanced authorization",
            "default": ""
          }
        },
        "type": "object",
        "title": "EmergencyStopResetRequest",
        "description": "Emergency stop reset request model."
      },
      "EntityCollectionV2": {
        "properties": {
          "entities": {
            "items": {
              "$ref": "#/components/schemas/EntitySchemaV2"
            },
            "type": "array",
            "title": "Entities",
            "description": "List of entities"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total entities available"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Number of entities per page",
            "default": 50
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether more pages are available",
            "default": false
          },
          "filters_applied": {
            "additionalProperties": true,
            "type": "object",
            "title": "Filters Applied",
            "description": "Applied filters"
          }
        },
        "type": "object",
        "required": [
          "entities",
          "total_count"
        ],
        "title": "EntityCollectionV2",
        "description": "Paginated entity collection"
      },
      "EntitySchemaV2": {
        "properties": {
          "entity_id": {
            "type": "string",
            "title": "Entity Id",
            "description": "Unique entity identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable entity name"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type",
            "description": "Device type classification"
          },
          "protocol": {
            "type": "string",
            "title": "Protocol",
            "description": "Communication protocol"
          },
          "state": {
            "additionalProperties": true,
            "type": "object",
            "title": "State",
            "description": "Current entity state"
          },
          "area": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area",
            "description": "Physical area/location"
          },
          "last_updated": {
            "type": "string",
            "title": "Last Updated",
            "description": "ISO timestamp of last update"
          },
          "available": {
            "type": "boolean",
            "title": "Available",
            "description": "Whether entity is available/responding",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "entity_id",
          "name",
          "device_type",
          "protocol",
          "last_updated"
        ],
        "title": "EntitySchemaV2",
        "description": "Enhanced entity schema for v2 API"
      },
      "EntitySummary": {
        "properties": {
          "total_entities": {
            "type": "integer",
            "title": "Total Entities",
            "description": "Total number of entities"
          },
          "online_entities": {
            "type": "integer",
            "title": "Online Entities",
            "description": "Number of online entities"
          },
          "active_entities": {
            "type": "integer",
            "title": "Active Entities",
            "description": "Number of active entities"
          },
          "device_type_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Device Type Counts",
            "description": "Count by device type"
          },
          "area_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Area Counts",
            "description": "Count by area"
          },
          "health_score": {
            "type": "number",
            "title": "Health Score",
            "description": "Overall system health score (0-100)"
          }
        },
        "type": "object",
        "required": [
          "total_entities",
          "online_entities",
          "active_entities",
          "device_type_counts",
          "area_counts",
          "health_score"
        ],
        "title": "EntitySummary",
        "description": "Summary statistics for entities."
      },
      "ErrorAnalysisResponse": {
        "properties": {
          "errors": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Errors",
            "description": "Error analysis results"
          },
          "total_errors": {
            "type": "integer",
            "title": "Total Errors",
            "description": "Total errors in period"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations",
            "description": "General recommendations"
          }
        },
        "type": "object",
        "required": [
          "errors",
          "total_errors",
          "recommendations"
        ],
        "title": "ErrorAnalysisResponse",
        "description": "Response model for error analysis."
      },
      "EventLogEntry": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique event identifier"
          },
          "timestamp": {
            "type": "number",
            "title": "Timestamp",
            "description": "Event timestamp"
          },
          "level": {
            "type": "string",
            "title": "Level",
            "description": "Log level: debug/info/warning/error/critical"
          },
          "component": {
            "type": "string",
            "title": "Component",
            "description": "Component that generated the event"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Event message"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details",
            "description": "Additional event details"
          }
        },
        "type": "object",
        "required": [
          "id",
          "timestamp",
          "level",
          "component",
          "message"
        ],
        "title": "EventLogEntry",
        "description": "System event log entry"
      },
      "EventLogResponse": {
        "properties": {
          "events": {
            "items": {
              "$ref": "#/components/schemas/EventLogEntry"
            },
            "type": "array",
            "title": "Events",
            "description": "List of event log entries"
          },
          "total_events": {
            "type": "integer",
            "title": "Total Events",
            "description": "Total number of events"
          },
          "timestamp": {
            "type": "number",
            "title": "Timestamp",
            "description": "Response timestamp"
          }
        },
        "type": "object",
        "required": [
          "events",
          "total_events",
          "timestamp"
        ],
        "title": "EventLogResponse",
        "description": "Response for event logs endpoint"
      },
      "FaultSummary": {
        "properties": {
          "active_faults": {
            "type": "integer",
            "title": "Active Faults",
            "description": "Number of active faults"
          },
          "total_faults": {
            "type": "integer",
            "title": "Total Faults",
            "description": "Total fault count"
          },
          "critical_faults": {
            "type": "integer",
            "title": "Critical Faults",
            "description": "Critical severity faults"
          },
          "by_system": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By System",
            "description": "Faults by system type"
          },
          "by_protocol": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Protocol",
            "description": "Faults by protocol"
          },
          "last_updated": {
            "type": "number",
            "title": "Last Updated",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "active_faults",
          "total_faults",
          "critical_faults",
          "by_system",
          "by_protocol",
          "last_updated"
        ],
        "title": "FaultSummary",
        "description": "Fault and DTC summary for diagnostics"
      },
      "FilterConditionModel": {
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FilterField"
          },
          "operator": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "value": {
            "title": "Value"
          },
          "case_sensitive": {
            "type": "boolean",
            "title": "Case Sensitive",
            "default": true
          },
          "negate": {
            "type": "boolean",
            "title": "Negate",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "field",
          "operator",
          "value"
        ],
        "title": "FilterConditionModel",
        "description": "Filter condition model."
      },
      "FilterField": {
        "type": "string",
        "enum": [
          "can_id",
          "pgn",
          "source_address",
          "destination_address",
          "data",
          "data_length",
          "interface",
          "protocol",
          "message_type",
          "decoded_field"
        ],
        "title": "FilterField",
        "description": "Fields that can be filtered."
      },
      "FilterOperator": {
        "type": "string",
        "enum": [
          "equals",
          "not_equals",
          "greater_than",
          "less_than",
          "greater_equal",
          "less_equal",
          "in",
          "not_in",
          "contains",
          "not_contains",
          "matches",
          "wildcard"
        ],
        "title": "FilterOperator",
        "description": "Filter comparison operators."
      },
      "FilterRuleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          },
          "priority": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Priority",
            "default": 50
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/FilterConditionModel"
            },
            "type": "array",
            "title": "Conditions"
          },
          "condition_logic": {
            "type": "string",
            "pattern": "^(AND|OR)$",
            "title": "Condition Logic",
            "default": "AND"
          },
          "actions": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Actions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "conditions",
          "actions"
        ],
        "title": "FilterRuleCreate",
        "description": "Create filter rule request."
      },
      "FilterRuleResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/FilterConditionModel"
            },
            "type": "array",
            "title": "Conditions"
          },
          "condition_logic": {
            "type": "string",
            "title": "Condition Logic"
          },
          "actions": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Actions"
          },
          "statistics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Statistics"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "enabled",
          "priority",
          "conditions",
          "condition_logic",
          "actions",
          "statistics"
        ],
        "title": "FilterRuleResponse",
        "description": "Filter rule response."
      },
      "FilterRuleUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "conditions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FilterConditionModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conditions"
          },
          "condition_logic": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(AND|OR)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Condition Logic"
          },
          "actions": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actions"
          }
        },
        "type": "object",
        "title": "FilterRuleUpdate",
        "description": "Update filter rule request."
      },
      "FilterStatisticsResponse": {
        "properties": {
          "messages_processed": {
            "type": "integer",
            "title": "Messages Processed"
          },
          "messages_passed": {
            "type": "integer",
            "title": "Messages Passed"
          },
          "messages_blocked": {
            "type": "integer",
            "title": "Messages Blocked"
          },
          "messages_captured": {
            "type": "integer",
            "title": "Messages Captured"
          },
          "alerts_sent": {
            "type": "integer",
            "title": "Alerts Sent"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms"
          },
          "active_rules": {
            "type": "integer",
            "title": "Active Rules"
          },
          "total_rules": {
            "type": "integer",
            "title": "Total Rules"
          },
          "capture_buffer_size": {
            "type": "integer",
            "title": "Capture Buffer Size"
          },
          "rules": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Rules"
          }
        },
        "type": "object",
        "required": [
          "messages_processed",
          "messages_passed",
          "messages_blocked",
          "messages_captured",
          "alerts_sent",
          "processing_time_ms",
          "active_rules",
          "total_rules",
          "capture_buffer_size",
          "rules"
        ],
        "title": "FilterStatisticsResponse",
        "description": "Filter statistics response."
      },
      "GitHubReleaseAsset": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "browser_download_url": {
            "type": "string",
            "title": "Browser Download Url"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "download_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "browser_download_url"
        ],
        "title": "GitHubReleaseAsset",
        "description": "Represents a downloadable asset attached to a GitHub release."
      },
      "GitHubReleaseInfo": {
        "properties": {
          "tag_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Name"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          },
          "html_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Html Url"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "assets": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GitHubReleaseAsset"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assets"
          },
          "tarball_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tarball Url"
          },
          "zipball_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zipball Url"
          },
          "prerelease": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prerelease"
          },
          "draft": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Draft"
          },
          "author": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "discussion_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discussion Url"
          }
        },
        "type": "object",
        "title": "GitHubReleaseInfo",
        "description": "Represents metadata about a GitHub release for update checking."
      },
      "GitHubUpdateStatus": {
        "properties": {
          "latest_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Version"
          },
          "last_checked": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checked"
          },
          "last_success": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Success"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "latest_release_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitHubReleaseInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "repo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repo"
          },
          "api_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Url"
          }
        },
        "type": "object",
        "title": "GitHubUpdateStatus",
        "description": "Represents the status and metadata of the latest GitHub release as cached by the server."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthStatus": {
        "type": "string",
        "enum": [
          "pass",
          "warn",
          "fail"
        ],
        "title": "HealthStatus",
        "description": "Overall health status following IETF health+json standard."
      },
      "InjectionMode": {
        "type": "string",
        "enum": [
          "single",
          "burst",
          "periodic",
          "sequence"
        ],
        "title": "InjectionMode",
        "description": "Message injection modes."
      },
      "InjectorStatusResponse": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "safety_level": {
            "type": "string",
            "title": "Safety Level"
          },
          "statistics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Statistics"
          },
          "active_injections": {
            "type": "integer",
            "title": "Active Injections"
          },
          "active_interfaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Active Interfaces"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "safety_level",
          "statistics",
          "active_injections",
          "active_interfaces"
        ],
        "title": "InjectorStatusResponse",
        "description": "CAN message injector status."
      },
      "InterlockOverrideClearRequest": {
        "properties": {
          "interlock_name": {
            "type": "string",
            "title": "Interlock Name",
            "description": "Name of the interlock to clear override"
          }
        },
        "type": "object",
        "required": [
          "interlock_name"
        ],
        "title": "InterlockOverrideClearRequest",
        "description": "Clear interlock override request model."
      },
      "J1939MessageRequest": {
        "properties": {
          "pgn": {
            "type": "integer",
            "title": "Pgn",
            "description": "Parameter Group Number"
          },
          "data": {
            "type": "string",
            "title": "Data",
            "description": "Message data as hex string"
          },
          "priority": {
            "type": "integer",
            "maximum": 7.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Message priority",
            "default": 6
          },
          "source_address": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 0.0,
            "title": "Source Address",
            "description": "Source address",
            "default": 254
          },
          "destination_address": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 0.0,
            "title": "Destination Address",
            "description": "Destination address",
            "default": 255
          },
          "interface": {
            "type": "string",
            "title": "Interface",
            "description": "CAN interface to use",
            "default": "can0"
          },
          "mode": {
            "$ref": "#/components/schemas/InjectionMode",
            "description": "Injection mode",
            "default": "single"
          }
        },
        "type": "object",
        "required": [
          "pgn",
          "data"
        ],
        "title": "J1939MessageRequest",
        "description": "Request to create J1939 message."
      },
      "LiveAnalysisResponse": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/AnalyzedMessageResponse"
            },
            "type": "array",
            "title": "Messages"
          },
          "patterns": {
            "items": {
              "$ref": "#/components/schemas/CommunicationPatternResponse"
            },
            "type": "array",
            "title": "Patterns"
          },
          "statistics": {
            "$ref": "#/components/schemas/ProtocolStatisticsResponse"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "patterns",
          "statistics"
        ],
        "title": "LiveAnalysisResponse",
        "description": "Live analysis data."
      },
      "LockoutStatus": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "is_locked": {
            "type": "boolean",
            "title": "Is Locked"
          },
          "lockout_until": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lockout Until"
          },
          "failed_attempts": {
            "type": "integer",
            "title": "Failed Attempts"
          },
          "escalation_level": {
            "type": "integer",
            "title": "Escalation Level"
          },
          "last_attempt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Attempt"
          },
          "consecutive_successful_logins": {
            "type": "integer",
            "title": "Consecutive Successful Logins"
          },
          "lockout_enabled": {
            "type": "boolean",
            "title": "Lockout Enabled"
          },
          "max_failed_attempts": {
            "type": "integer",
            "title": "Max Failed Attempts"
          },
          "lockout_duration_minutes": {
            "type": "integer",
            "title": "Lockout Duration Minutes"
          }
        },
        "type": "object",
        "required": [
          "username",
          "is_locked",
          "failed_attempts",
          "escalation_level",
          "consecutive_successful_logins",
          "lockout_enabled",
          "max_failed_attempts",
          "lockout_duration_minutes"
        ],
        "title": "LockoutStatus",
        "description": "Account lockout status response model."
      },
      "LogEntry": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "UTC ISO8601 timestamp of the log entry"
          },
          "level": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level",
            "description": "Syslog priority (numeric)"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Log message"
          },
          "module": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module",
            "description": "Logger/module name"
          },
          "cursor": {
            "type": "string",
            "title": "Cursor",
            "description": "Journald cursor for pagination"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "message",
          "cursor"
        ],
        "title": "LogEntry"
      },
      "LogHistoryResponse": {
        "properties": {
          "entries": {
            "items": {
              "$ref": "#/components/schemas/LogEntry"
            },
            "type": "array",
            "title": "Entries"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor",
            "description": "Cursor for next page of results"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "True if more results are available"
          }
        },
        "type": "object",
        "required": [
          "entries",
          "has_more"
        ],
        "title": "LogHistoryResponse"
      },
      "LoginStepResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "mfa_required": {
            "type": "boolean",
            "title": "Mfa Required",
            "default": false
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In"
          },
          "refresh_expires_in": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Expires In"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "LoginStepResponse",
        "description": "Login step response - either tokens or MFA challenge."
      },
      "MFASecretResponse": {
        "properties": {
          "secret": {
            "type": "string",
            "title": "Secret"
          },
          "qr_code": {
            "type": "string",
            "title": "Qr Code"
          },
          "provisioning_uri": {
            "type": "string",
            "title": "Provisioning Uri"
          },
          "backup_codes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Backup Codes"
          },
          "issuer": {
            "type": "string",
            "title": "Issuer"
          }
        },
        "type": "object",
        "required": [
          "secret",
          "qr_code",
          "provisioning_uri",
          "backup_codes",
          "issuer"
        ],
        "title": "MFASecretResponse",
        "description": "MFA secret setup response model."
      },
      "MFAStatus": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "mfa_enabled": {
            "type": "boolean",
            "title": "Mfa Enabled"
          },
          "setup_initiated": {
            "type": "boolean",
            "title": "Setup Initiated"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "last_used": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used"
          },
          "backup_codes_remaining": {
            "type": "integer",
            "title": "Backup Codes Remaining"
          },
          "backup_codes_total": {
            "type": "integer",
            "title": "Backup Codes Total"
          },
          "available": {
            "type": "boolean",
            "title": "Available"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "mfa_enabled",
          "setup_initiated",
          "backup_codes_remaining",
          "backup_codes_total",
          "available"
        ],
        "title": "MFAStatus",
        "description": "MFA status response model."
      },
      "MFAVerificationRequest": {
        "properties": {
          "totp_code": {
            "type": "string",
            "title": "Totp Code"
          }
        },
        "type": "object",
        "required": [
          "totp_code"
        ],
        "title": "MFAVerificationRequest",
        "description": "MFA verification request model."
      },
      "MagicLinkRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "MagicLinkRequest",
        "description": "Magic link request model."
      },
      "MagicLinkResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "expires_in_minutes": {
            "type": "integer",
            "title": "Expires In Minutes"
          }
        },
        "type": "object",
        "required": [
          "message",
          "email",
          "expires_in_minutes"
        ],
        "title": "MagicLinkResponse",
        "description": "Magic link response model."
      },
      "MaintenanceHistoryModel": {
        "properties": {
          "entry_id": {
            "type": "string",
            "title": "Entry Id",
            "description": "History entry identifier"
          },
          "component_id": {
            "type": "string",
            "title": "Component Id",
            "description": "Component identifier"
          },
          "component_name": {
            "type": "string",
            "title": "Component Name",
            "description": "Component name"
          },
          "maintenance_type": {
            "type": "string",
            "title": "Maintenance Type",
            "description": "Type of maintenance"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Maintenance description"
          },
          "performed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Performed At",
            "description": "When maintenance was performed"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "description": "Maintenance cost"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By",
            "description": "Who performed maintenance"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Maintenance location"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          }
        },
        "type": "object",
        "required": [
          "entry_id",
          "component_id",
          "component_name",
          "maintenance_type",
          "description",
          "performed_at"
        ],
        "title": "MaintenanceHistoryModel",
        "description": "Model for maintenance history entries."
      },
      "MessageInjectionRequest": {
        "properties": {
          "can_id": {
            "type": "integer",
            "title": "Can Id",
            "description": "CAN identifier (11 or 29 bit)"
          },
          "data": {
            "type": "string",
            "title": "Data",
            "description": "Message data as hex string (e.g., '0102030405060708')"
          },
          "interface": {
            "type": "string",
            "title": "Interface",
            "description": "CAN interface to use",
            "default": "can0"
          },
          "mode": {
            "$ref": "#/components/schemas/InjectionMode",
            "description": "Injection mode",
            "default": "single"
          },
          "count": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of messages for burst mode",
            "default": 1
          },
          "interval": {
            "type": "number",
            "minimum": 0.01,
            "title": "Interval",
            "description": "Interval for periodic mode (seconds)",
            "default": 1.0
          },
          "duration": {
            "type": "number",
            "minimum": 0.0,
            "title": "Duration",
            "description": "Duration for periodic mode (0=infinite)",
            "default": 0.0
          },
          "priority": {
            "type": "integer",
            "maximum": 7.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "J1939 priority",
            "default": 6
          },
          "source_address": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 0.0,
            "title": "Source Address",
            "description": "Source address",
            "default": 254
          },
          "destination_address": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 0.0,
            "title": "Destination Address",
            "description": "Destination address",
            "default": 255
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description of injection",
            "default": ""
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for injection",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "can_id",
          "data"
        ],
        "title": "MessageInjectionRequest",
        "description": "Request to inject CAN messages.",
        "example": {
          "can_id": 419360256,
          "data": "0102030405060708",
          "description": "Test engine temperature sensor",
          "interface": "can0",
          "mode": "single",
          "reason": "Diagnostic testing"
        }
      },
      "MessageInjectionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "messages_sent": {
            "type": "integer",
            "title": "Messages Sent"
          },
          "messages_failed": {
            "type": "integer",
            "title": "Messages Failed"
          },
          "duration": {
            "type": "number",
            "title": "Duration"
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "messages_sent",
          "messages_failed",
          "duration",
          "success_rate",
          "warnings"
        ],
        "title": "MessageInjectionResponse",
        "description": "Response from message injection."
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "data",
          "remote",
          "error",
          "overload",
          "diagnostic",
          "command",
          "status",
          "broadcast",
          "peer_to_peer"
        ],
        "title": "MessageType",
        "description": "Message type classification."
      },
      "MetricType": {
        "type": "string",
        "enum": [
          "delivery_count",
          "success_rate",
          "failure_rate",
          "retry_count",
          "avg_delivery_time",
          "channel_performance",
          "error_rate",
          "engagement_rate"
        ],
        "title": "MetricType",
        "description": "Types of notification metrics."
      },
      "MigrationJobResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "safety_issues": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Issues"
          },
          "hint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hint"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "MigrationJobResponse",
        "description": "Response for migration job status."
      },
      "MigrationRequest": {
        "properties": {
          "target_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Version",
            "description": "Target version"
          },
          "skip_backup": {
            "type": "boolean",
            "title": "Skip Backup",
            "description": "Skip backup creation",
            "default": false
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "description": "Force migration despite warnings",
            "default": false
          },
          "confirm": {
            "type": "boolean",
            "title": "Confirm",
            "description": "Explicit confirmation required"
          }
        },
        "type": "object",
        "required": [
          "confirm"
        ],
        "title": "MigrationRequest",
        "description": "Request to start migration."
      },
      "NetworkSecurityPolicy": {
        "properties": {
          "require_https": {
            "type": "boolean",
            "title": "Require Https",
            "description": "Require HTTPS for all connections",
            "default": true
          },
          "min_tls_version": {
            "type": "string",
            "title": "Min Tls Version",
            "description": "Minimum TLS version (1.2 or 1.3)",
            "default": "1.2"
          },
          "enable_ip_whitelist": {
            "type": "boolean",
            "title": "Enable Ip Whitelist",
            "description": "Enable IP whitelist mode",
            "default": false
          },
          "whitelist_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Whitelist Networks",
            "description": "Whitelisted IP networks"
          },
          "enable_geoip_blocking": {
            "type": "boolean",
            "title": "Enable Geoip Blocking",
            "description": "Enable GeoIP-based blocking",
            "default": false
          },
          "blocked_countries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Blocked Countries",
            "description": "Blocked country codes"
          },
          "enable_ddos_protection": {
            "type": "boolean",
            "title": "Enable Ddos Protection",
            "description": "Enable DDoS protection",
            "default": true
          },
          "connection_limit_per_ip": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Connection Limit Per Ip",
            "description": "Max connections per IP",
            "default": 10
          },
          "request_size_limit_mb": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Request Size Limit Mb",
            "description": "Max request size in MB",
            "default": 10
          },
          "enable_security_headers": {
            "type": "boolean",
            "title": "Enable Security Headers",
            "description": "Enable security headers",
            "default": true
          },
          "enable_csp": {
            "type": "boolean",
            "title": "Enable Csp",
            "description": "Enable Content Security Policy",
            "default": true
          },
          "enable_hsts": {
            "type": "boolean",
            "title": "Enable Hsts",
            "description": "Enable HTTP Strict Transport Security",
            "default": true
          }
        },
        "type": "object",
        "title": "NetworkSecurityPolicy",
        "description": "Network security policy configuration."
      },
      "NetworkStatus": {
        "properties": {
          "interface_name": {
            "type": "string",
            "title": "Interface Name",
            "description": "Network interface name"
          },
          "protocol": {
            "type": "string",
            "title": "Protocol",
            "description": "Protocol type (CAN, J1939, etc.)"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Interface status: active/inactive/error"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count",
            "description": "Total messages processed"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count",
            "description": "Error count"
          },
          "last_activity": {
            "type": "number",
            "title": "Last Activity",
            "description": "Last activity timestamp"
          }
        },
        "type": "object",
        "required": [
          "interface_name",
          "protocol",
          "status",
          "message_count",
          "error_count",
          "last_activity"
        ],
        "title": "NetworkStatus",
        "description": "Network interface status"
      },
      "NetworkSummary": {
        "properties": {
          "total_interfaces": {
            "type": "integer",
            "title": "Total Interfaces",
            "description": "Total network interfaces"
          },
          "active_interfaces": {
            "type": "integer",
            "title": "Active Interfaces",
            "description": "Active interfaces"
          },
          "total_messages": {
            "type": "integer",
            "title": "Total Messages",
            "description": "Total messages across all interfaces"
          },
          "total_errors": {
            "type": "integer",
            "title": "Total Errors",
            "description": "Total errors across all interfaces"
          },
          "networks": {
            "items": {
              "$ref": "#/components/schemas/NetworkStatus"
            },
            "type": "array",
            "title": "Networks",
            "description": "Individual network status"
          },
          "timestamp": {
            "type": "number",
            "title": "Timestamp",
            "description": "Summary timestamp"
          }
        },
        "type": "object",
        "required": [
          "total_interfaces",
          "active_interfaces",
          "total_messages",
          "total_errors",
          "networks",
          "timestamp"
        ],
        "title": "NetworkSummary",
        "description": "Overall network summary"
      },
      "NotificationChannel": {
        "type": "string",
        "enum": [
          "smtp",
          "slack",
          "discord",
          "pushover",
          "webhook",
          "system"
        ],
        "title": "NotificationChannel",
        "description": "Enumeration of notification channels."
      },
      "NotificationMetric": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "metric_type": {
            "$ref": "#/components/schemas/MetricType"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "channel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NotificationChannel"
              },
              {
                "type": "null"
              }
            ]
          },
          "notification_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "metric_type",
          "value"
        ],
        "title": "NotificationMetric"
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "info",
          "success",
          "warning",
          "error",
          "critical"
        ],
        "title": "NotificationType",
        "description": "Enumeration of notification types."
      },
      "OperationAuthorizationRequest": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "PIN session ID"
          },
          "operation": {
            "type": "string",
            "title": "Operation",
            "description": "Operation to authorize"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "operation"
        ],
        "title": "OperationAuthorizationRequest",
        "description": "Operation authorization request."
      },
      "OperationAuthorizationResponse": {
        "properties": {
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "description": "Whether operation is authorized"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Authorization status message"
          },
          "session_consumed": {
            "type": "boolean",
            "title": "Session Consumed",
            "description": "Whether session was consumed by this operation",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "authorized",
          "message"
        ],
        "title": "OperationAuthorizationResponse",
        "description": "Operation authorization response."
      },
      "PINDiagnosticModeExitRequest": {
        "properties": {
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for authorization"
          }
        },
        "type": "object",
        "required": [
          "pin_session_id"
        ],
        "title": "PINDiagnosticModeExitRequest",
        "description": "PIN-based diagnostic mode exit request model."
      },
      "PINDiagnosticModeRequest": {
        "properties": {
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for authorization"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for entering diagnostic mode"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 240.0,
            "minimum": 5.0,
            "title": "Duration Minutes",
            "description": "Diagnostic mode duration in minutes (5-240)",
            "default": 60
          }
        },
        "type": "object",
        "required": [
          "pin_session_id",
          "reason"
        ],
        "title": "PINDiagnosticModeRequest",
        "description": "PIN-based diagnostic mode request model."
      },
      "PINEmergencyResetRequest": {
        "properties": {
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for authorization"
          }
        },
        "type": "object",
        "required": [
          "pin_session_id"
        ],
        "title": "PINEmergencyResetRequest",
        "description": "PIN-based emergency reset request model."
      },
      "PINEmergencyStopRequest": {
        "properties": {
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for authorization"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for emergency stop"
          }
        },
        "type": "object",
        "required": [
          "pin_session_id",
          "reason"
        ],
        "title": "PINEmergencyStopRequest",
        "description": "PIN-based emergency stop request model."
      },
      "PINInfo": {
        "properties": {
          "pin_type": {
            "type": "string",
            "title": "Pin Type",
            "description": "Type of PIN"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "PIN description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether PIN is active"
          },
          "use_count": {
            "type": "integer",
            "title": "Use Count",
            "description": "Number of times PIN has been used"
          },
          "lockout_after_failures": {
            "type": "integer",
            "title": "Lockout After Failures",
            "description": "Number of failures before lockout"
          },
          "lockout_duration_minutes": {
            "type": "integer",
            "title": "Lockout Duration Minutes",
            "description": "Lockout duration in minutes"
          }
        },
        "type": "object",
        "required": [
          "pin_type",
          "description",
          "is_active",
          "use_count",
          "lockout_after_failures",
          "lockout_duration_minutes"
        ],
        "title": "PINInfo",
        "description": "PIN information model."
      },
      "PINInterlockOverrideRequest": {
        "properties": {
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for authorization"
          },
          "interlock_name": {
            "type": "string",
            "title": "Interlock Name",
            "description": "Name of the interlock to override"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for overriding the interlock"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 1.0,
            "title": "Duration Minutes",
            "description": "Override duration in minutes (1-480)",
            "default": 60
          }
        },
        "type": "object",
        "required": [
          "pin_session_id",
          "interlock_name",
          "reason"
        ],
        "title": "PINInterlockOverrideRequest",
        "description": "PIN-based interlock override request model."
      },
      "PINListResponse": {
        "properties": {
          "pins": {
            "items": {
              "$ref": "#/components/schemas/PINInfo"
            },
            "type": "array",
            "title": "Pins"
          }
        },
        "type": "object",
        "required": [
          "pins"
        ],
        "title": "PINListResponse",
        "description": "Response model for PIN list."
      },
      "PINMaintenanceModeExitRequest": {
        "properties": {
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for authorization"
          }
        },
        "type": "object",
        "required": [
          "pin_session_id"
        ],
        "title": "PINMaintenanceModeExitRequest",
        "description": "PIN-based maintenance mode exit request model."
      },
      "PINMaintenanceModeRequest": {
        "properties": {
          "pin_session_id": {
            "type": "string",
            "title": "Pin Session Id",
            "description": "PIN session ID for authorization"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for entering maintenance mode"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 15.0,
            "title": "Duration Minutes",
            "description": "Maintenance mode duration in minutes (15-480)",
            "default": 120
          }
        },
        "type": "object",
        "required": [
          "pin_session_id",
          "reason"
        ],
        "title": "PINMaintenanceModeRequest",
        "description": "PIN-based maintenance mode request model."
      },
      "PINRotationResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether PIN rotation succeeded"
          },
          "new_pins": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "New Pins",
            "description": "New PINs by type"
          },
          "sessions_revoked": {
            "type": "integer",
            "title": "Sessions Revoked",
            "description": "Number of sessions revoked"
          },
          "warning": {
            "type": "string",
            "title": "Warning",
            "description": "Security warning about PIN display"
          }
        },
        "type": "object",
        "required": [
          "success",
          "new_pins",
          "sessions_revoked",
          "warning"
        ],
        "title": "PINRotationResponse",
        "description": "PIN rotation response."
      },
      "PINSecurityPolicy": {
        "properties": {
          "min_pin_length": {
            "type": "integer",
            "maximum": 8.0,
            "minimum": 4.0,
            "title": "Min Pin Length",
            "description": "Minimum PIN length",
            "default": 4
          },
          "max_pin_length": {
            "type": "integer",
            "maximum": 8.0,
            "minimum": 4.0,
            "title": "Max Pin Length",
            "description": "Maximum PIN length",
            "default": 8
          },
          "require_numeric_only": {
            "type": "boolean",
            "title": "Require Numeric Only",
            "description": "Require numeric PINs only",
            "default": true
          },
          "emergency_session_timeout_minutes": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 1.0,
            "title": "Emergency Session Timeout Minutes",
            "description": "Emergency PIN session timeout",
            "default": 5
          },
          "override_session_timeout_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 5.0,
            "title": "Override Session Timeout Minutes",
            "description": "Override PIN session timeout",
            "default": 15
          },
          "maintenance_session_timeout_minutes": {
            "type": "integer",
            "maximum": 120.0,
            "minimum": 15.0,
            "title": "Maintenance Session Timeout Minutes",
            "description": "Maintenance PIN session timeout",
            "default": 30
          },
          "max_concurrent_sessions_per_user": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Max Concurrent Sessions Per User",
            "description": "Max concurrent sessions per user",
            "default": 2
          },
          "max_failed_attempts": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 2.0,
            "title": "Max Failed Attempts",
            "description": "Max failed attempts before lockout",
            "default": 3
          },
          "lockout_duration_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 5.0,
            "title": "Lockout Duration Minutes",
            "description": "Lockout duration after max failures",
            "default": 15
          },
          "progressive_lockout_enabled": {
            "type": "boolean",
            "title": "Progressive Lockout Enabled",
            "description": "Enable progressive lockout increases",
            "default": true
          },
          "enable_pin_rotation": {
            "type": "boolean",
            "title": "Enable Pin Rotation",
            "description": "Enable automatic PIN rotation",
            "default": true
          },
          "pin_rotation_days": {
            "type": "integer",
            "maximum": 90.0,
            "minimum": 7.0,
            "title": "Pin Rotation Days",
            "description": "Days between PIN rotation",
            "default": 30
          },
          "require_pin_confirmation": {
            "type": "boolean",
            "title": "Require Pin Confirmation",
            "description": "Require PIN confirmation for critical ops",
            "default": true
          },
          "force_rotation_on_breach": {
            "type": "boolean",
            "title": "Force Rotation On Breach",
            "description": "Force rotation on security breach",
            "default": true
          }
        },
        "type": "object",
        "title": "PINSecurityPolicy",
        "description": "PIN security policy configuration."
      },
      "PINStatusResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "is_locked_out": {
            "type": "boolean",
            "title": "Is Locked Out",
            "description": "Whether user is currently locked out"
          },
          "lockout_until": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lockout Until",
            "description": "Lockout expiration timestamp"
          },
          "active_sessions": {
            "type": "integer",
            "title": "Active Sessions",
            "description": "Number of active PIN sessions"
          },
          "can_use_pins": {
            "type": "boolean",
            "title": "Can Use Pins",
            "description": "Whether user can currently use PINs"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "is_locked_out",
          "active_sessions",
          "can_use_pins",
          "message"
        ],
        "title": "PINStatusResponse",
        "description": "User PIN status response."
      },
      "PINValidationRequest": {
        "properties": {
          "pin": {
            "type": "string",
            "title": "Pin",
            "description": "PIN to validate"
          },
          "pin_type": {
            "type": "string",
            "title": "Pin Type",
            "description": "Type of PIN: emergency, override, maintenance"
          }
        },
        "type": "object",
        "required": [
          "pin",
          "pin_type"
        ],
        "title": "PINValidationRequest",
        "description": "PIN validation request."
      },
      "PINValidationResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether PIN validation succeeded"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Authorization session ID if successful"
          },
          "expires_in_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In Seconds",
            "description": "Session expiration time"
          },
          "operations_allowed": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operations Allowed",
            "description": "Operations allowed with this session"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "PINValidationResponse",
        "description": "PIN validation response."
      },
      "PatternAnalysisResponse": {
        "properties": {
          "arbitration_id": {
            "type": "integer",
            "title": "Arbitration Id"
          },
          "arbitration_id_hex": {
            "type": "string",
            "title": "Arbitration Id Hex"
          },
          "first_seen": {
            "type": "number",
            "title": "First Seen"
          },
          "last_seen": {
            "type": "number",
            "title": "Last Seen"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "classification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Classification"
          },
          "periodicity_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Periodicity Score"
          },
          "timing_analysis": {
            "additionalProperties": true,
            "type": "object",
            "title": "Timing Analysis"
          },
          "data_analysis": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data Analysis"
          },
          "bit_analysis": {
            "additionalProperties": true,
            "type": "object",
            "title": "Bit Analysis"
          },
          "correlations": {
            "items": {
              "prefixItems": [
                {
                  "type": "integer"
                },
                {
                  "type": "number"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Correlations"
          }
        },
        "type": "object",
        "required": [
          "arbitration_id",
          "arbitration_id_hex",
          "first_seen",
          "last_seen",
          "message_count",
          "classification",
          "periodicity_score",
          "timing_analysis",
          "data_analysis",
          "bit_analysis",
          "correlations"
        ],
        "title": "PatternAnalysisResponse",
        "description": "Response for pattern analysis of a specific message."
      },
      "PatternSummaryResponse": {
        "properties": {
          "total_tracked_messages": {
            "type": "integer",
            "title": "Total Tracked Messages"
          },
          "classifications": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Classifications"
          },
          "last_analysis_time": {
            "type": "number",
            "title": "Last Analysis Time"
          },
          "engine_status": {
            "type": "string",
            "title": "Engine Status"
          }
        },
        "type": "object",
        "required": [
          "total_tracked_messages",
          "classifications",
          "last_analysis_time",
          "engine_status"
        ],
        "title": "PatternSummaryResponse",
        "description": "Response for overall pattern analysis summary."
      },
      "PerformanceReportRequest": {
        "properties": {
          "time_window_seconds": {
            "type": "number",
            "maximum": 86400.0,
            "minimum": 60.0,
            "title": "Time Window Seconds",
            "description": "Time window for report (seconds)",
            "default": 3600.0
          }
        },
        "type": "object",
        "title": "PerformanceReportRequest",
        "description": "Request model for generating performance reports."
      },
      "PolicyUpdateRequest": {
        "properties": {
          "policy_type": {
            "type": "string",
            "title": "Policy Type",
            "description": "Type of policy to update"
          },
          "policy_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Policy Data",
            "description": "Policy configuration data"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for policy change",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "policy_type",
          "policy_data"
        ],
        "title": "PolicyUpdateRequest",
        "description": "Policy update request."
      },
      "PollDeviceRequest": {
        "properties": {
          "source_address": {
            "type": "integer",
            "title": "Source Address"
          },
          "pgn": {
            "type": "integer",
            "title": "Pgn"
          },
          "protocol": {
            "type": "string",
            "title": "Protocol",
            "default": "rvc"
          },
          "instance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance"
          }
        },
        "type": "object",
        "required": [
          "source_address",
          "pgn"
        ],
        "title": "PollDeviceRequest",
        "description": "Request model for device polling."
      },
      "ProtocolReportResponse": {
        "properties": {
          "detected_protocols": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Detected Protocols"
          },
          "communication_patterns": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Communication Patterns"
          },
          "protocol_compliance": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Protocol Compliance"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "detected_protocols",
          "communication_patterns",
          "protocol_compliance",
          "recommendations"
        ],
        "title": "ProtocolReportResponse",
        "description": "Protocol analysis report."
      },
      "ProtocolStatisticsResponse": {
        "properties": {
          "runtime_seconds": {
            "type": "number",
            "title": "Runtime Seconds"
          },
          "total_messages": {
            "type": "integer",
            "title": "Total Messages"
          },
          "total_bytes": {
            "type": "integer",
            "title": "Total Bytes"
          },
          "overall_message_rate": {
            "type": "number",
            "title": "Overall Message Rate"
          },
          "bus_utilization_percent": {
            "type": "number",
            "title": "Bus Utilization Percent"
          },
          "protocols": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Protocols"
          },
          "detected_patterns": {
            "type": "integer",
            "title": "Detected Patterns"
          },
          "buffer_usage": {
            "type": "integer",
            "title": "Buffer Usage"
          },
          "buffer_capacity": {
            "type": "integer",
            "title": "Buffer Capacity"
          }
        },
        "type": "object",
        "required": [
          "runtime_seconds",
          "total_messages",
          "total_bytes",
          "overall_message_rate",
          "bus_utilization_percent",
          "protocols",
          "detected_patterns",
          "buffer_usage",
          "buffer_capacity"
        ],
        "title": "ProtocolStatisticsResponse",
        "description": "Protocol statistics."
      },
      "QueueHealthResponse": {
        "properties": {
          "health_score": {
            "type": "number",
            "title": "Health Score",
            "description": "Overall health score (0-1)"
          },
          "queue_depth": {
            "type": "integer",
            "title": "Queue Depth",
            "description": "Current queue depth"
          },
          "processing_rate": {
            "type": "number",
            "title": "Processing Rate",
            "description": "Messages per second"
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "description": "Recent success rate"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Health status"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations",
            "description": "Health recommendations"
          }
        },
        "type": "object",
        "required": [
          "health_score",
          "queue_depth",
          "processing_rate",
          "success_rate",
          "status",
          "recommendations"
        ],
        "title": "QueueHealthResponse",
        "description": "Response model for queue health."
      },
      "QueueStatistics": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "pending_count": {
            "type": "integer",
            "title": "Pending Count",
            "description": "Notifications pending delivery"
          },
          "processing_count": {
            "type": "integer",
            "title": "Processing Count",
            "description": "Notifications currently being processed"
          },
          "completed_count": {
            "type": "integer",
            "title": "Completed Count",
            "description": "Successfully completed notifications"
          },
          "failed_count": {
            "type": "integer",
            "title": "Failed Count",
            "description": "Failed notification attempts"
          },
          "dlq_count": {
            "type": "integer",
            "title": "Dlq Count",
            "description": "Dead letter queue entries"
          },
          "avg_processing_time_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Processing Time Ms",
            "description": "Average processing time"
          },
          "success_rate_percent": {
            "type": "number",
            "title": "Success Rate Percent",
            "description": "Overall success rate"
          },
          "throughput_per_minute": {
            "type": "number",
            "title": "Throughput Per Minute",
            "description": "Processing throughput"
          },
          "oldest_pending_minutes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oldest Pending Minutes",
            "description": "Age of oldest pending notification"
          },
          "queue_size_mb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Size Mb",
            "description": "Queue database size in MB"
          },
          "dispatcher_running": {
            "type": "boolean",
            "title": "Dispatcher Running",
            "description": "Notification dispatcher status"
          },
          "estimated_drain_time_minutes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Drain Time Minutes",
            "description": "Time to drain current queue"
          },
          "capacity_utilization_percent": {
            "type": "number",
            "title": "Capacity Utilization Percent",
            "description": "Queue capacity utilization"
          }
        },
        "type": "object",
        "required": [
          "pending_count",
          "processing_count",
          "completed_count",
          "failed_count",
          "dlq_count",
          "avg_processing_time_ms",
          "success_rate_percent",
          "throughput_per_minute",
          "oldest_pending_minutes",
          "queue_size_mb",
          "dispatcher_running",
          "estimated_drain_time_minutes",
          "capacity_utilization_percent"
        ],
        "title": "QueueStatistics",
        "description": "Enhanced queue statistics for dashboard."
      },
      "RateLimitingPolicy": {
        "properties": {
          "general_requests_per_minute": {
            "type": "integer",
            "maximum": 300.0,
            "minimum": 10.0,
            "title": "General Requests Per Minute",
            "description": "General requests per minute per authenticated user",
            "default": 60
          },
          "burst_limit": {
            "type": "integer",
            "maximum": 50.0,
            "minimum": 5.0,
            "title": "Burst Limit",
            "description": "Burst request limit",
            "default": 10
          },
          "safety_operations_per_minute": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Safety Operations Per Minute",
            "description": "Safety operations per minute per user",
            "default": 5
          },
          "emergency_operations_per_hour": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Emergency Operations Per Hour",
            "description": "Emergency operations per hour per user",
            "default": 3
          },
          "pin_attempts_per_minute": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Pin Attempts Per Minute",
            "description": "PIN attempts per minute per IP",
            "default": 3
          },
          "max_failed_operations_per_hour": {
            "type": "integer",
            "maximum": 50.0,
            "minimum": 5.0,
            "title": "Max Failed Operations Per Hour",
            "description": "Max failed operations before investigation",
            "default": 10
          },
          "trusted_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Trusted Networks",
            "description": "Trusted IP networks (CIDR notation)"
          },
          "blocked_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Blocked Networks",
            "description": "Blocked IP networks (CIDR)"
          },
          "admin_rate_multiplier": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Admin Rate Multiplier",
            "description": "Rate limit multiplier for admin users",
            "default": 2.0
          },
          "service_account_multiplier": {
            "type": "number",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Service Account Multiplier",
            "description": "Rate limit multiplier for service accounts",
            "default": 5.0
          }
        },
        "type": "object",
        "title": "RateLimitingPolicy",
        "description": "Rate limiting policy configuration.\n\nNote: IP-based rate limiting is handled by Caddy edge layer.\nThis configuration controls user-aware limits in the application layer."
      },
      "RateLimitingStatus": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "current_tokens": {
            "type": "integer",
            "title": "Current Tokens",
            "description": "Available tokens"
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "description": "Maximum token capacity"
          },
          "refill_rate_per_minute": {
            "type": "number",
            "title": "Refill Rate Per Minute",
            "description": "Token refill rate"
          },
          "token_utilization_percent": {
            "type": "number",
            "title": "Token Utilization Percent",
            "description": "Token bucket utilization"
          },
          "requests_last_minute": {
            "type": "integer",
            "title": "Requests Last Minute",
            "description": "Requests in last minute"
          },
          "requests_blocked_last_hour": {
            "type": "integer",
            "title": "Requests Blocked Last Hour",
            "description": "Blocked requests in last hour"
          },
          "active_debounces": {
            "type": "integer",
            "title": "Active Debounces",
            "description": "Active debounce suppressions"
          },
          "debounce_hit_rate_percent": {
            "type": "number",
            "title": "Debounce Hit Rate Percent",
            "description": "Debounce effectiveness"
          },
          "channel_limits": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Channel Limits",
            "description": "Per-channel rate limits"
          }
        },
        "type": "object",
        "required": [
          "current_tokens",
          "max_tokens",
          "refill_rate_per_minute",
          "token_utilization_percent",
          "requests_last_minute",
          "requests_blocked_last_hour",
          "active_debounces",
          "debounce_hit_rate_percent"
        ],
        "title": "RateLimitingStatus",
        "description": "Rate limiting system status."
      },
      "RecorderStatusResponse": {
        "properties": {
          "state": {
            "type": "string",
            "title": "State"
          },
          "current_session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RecordingSessionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "buffer_size": {
            "type": "integer",
            "title": "Buffer Size"
          },
          "buffer_capacity": {
            "type": "integer",
            "title": "Buffer Capacity"
          },
          "messages_recorded": {
            "type": "integer",
            "title": "Messages Recorded"
          },
          "messages_dropped": {
            "type": "integer",
            "title": "Messages Dropped"
          },
          "bytes_recorded": {
            "type": "integer",
            "title": "Bytes Recorded"
          },
          "filters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Filters"
          }
        },
        "type": "object",
        "required": [
          "state",
          "current_session",
          "buffer_size",
          "buffer_capacity",
          "messages_recorded",
          "messages_dropped",
          "bytes_recorded",
          "filters"
        ],
        "title": "RecorderStatusResponse",
        "description": "Response with recorder status."
      },
      "RecordingFilters": {
        "properties": {
          "can_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Ids",
            "description": "List of CAN IDs to record"
          },
          "interfaces": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interfaces",
            "description": "List of interfaces to record from"
          },
          "pgns": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pgns",
            "description": "List of J1939 PGNs to record"
          }
        },
        "type": "object",
        "title": "RecordingFilters",
        "description": "Filters for recording CAN messages."
      },
      "RecordingFormat": {
        "type": "string",
        "enum": [
          "json",
          "csv",
          "binary",
          "candump"
        ],
        "title": "RecordingFormat",
        "description": "Supported recording formats."
      },
      "RecordingListItem": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "size_mb": {
            "type": "number",
            "title": "Size Mb"
          },
          "modified": {
            "type": "string",
            "title": "Modified"
          },
          "format": {
            "type": "string",
            "title": "Format"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "path",
          "size_bytes",
          "size_mb",
          "modified",
          "format"
        ],
        "title": "RecordingListItem",
        "description": "Information about a recorded file."
      },
      "RecordingSessionResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "interfaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Interfaces"
          },
          "filters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Filters"
          },
          "format": {
            "type": "string",
            "title": "Format"
          },
          "file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Path"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "name",
          "description",
          "start_time",
          "end_time",
          "message_count",
          "interfaces",
          "filters",
          "format",
          "file_path"
        ],
        "title": "RecordingSessionResponse",
        "description": "Response with recording session details."
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest",
        "description": "Refresh token request model."
      },
      "ReplayOptionsRequest": {
        "properties": {
          "speed_factor": {
            "type": "number",
            "title": "Speed Factor",
            "description": "Playback speed multiplier",
            "default": 1.0
          },
          "loop": {
            "type": "boolean",
            "title": "Loop",
            "description": "Loop the replay",
            "default": false
          },
          "start_offset": {
            "type": "number",
            "title": "Start Offset",
            "description": "Start offset in seconds",
            "default": 0.0
          },
          "end_offset": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Offset",
            "description": "End offset in seconds"
          },
          "interface_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interface Mapping",
            "description": "Map recorded to replay interfaces"
          },
          "filter_can_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter Can Ids",
            "description": "Only replay specific CAN IDs"
          }
        },
        "type": "object",
        "title": "ReplayOptionsRequest",
        "description": "Options for replay operation."
      },
      "ReportRequest": {
        "properties": {
          "template": {
            "type": "string",
            "title": "Template",
            "description": "Report template name"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Report period start"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "Report period end"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "description": "Output format (json, csv, pdf, html)",
            "default": "json"
          },
          "parameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "Additional parameters"
          }
        },
        "type": "object",
        "required": [
          "template",
          "start_date",
          "end_date"
        ],
        "title": "ReportRequest",
        "description": "Request model for report generation."
      },
      "ReportScheduleRequest": {
        "properties": {
          "schedule_id": {
            "type": "string",
            "title": "Schedule Id",
            "description": "Unique schedule ID"
          },
          "template": {
            "type": "string",
            "title": "Template",
            "description": "Report template name"
          },
          "schedule": {
            "additionalProperties": true,
            "type": "object",
            "title": "Schedule",
            "description": "Schedule configuration"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "description": "Output format",
            "default": "json"
          },
          "parameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "Additional parameters"
          },
          "recipients": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipients",
            "description": "Email recipients"
          }
        },
        "type": "object",
        "required": [
          "schedule_id",
          "template",
          "schedule"
        ],
        "title": "ReportScheduleRequest",
        "description": "Request model for report scheduling."
      },
      "SafetyConfigRequest": {
        "properties": {
          "safety_level": {
            "$ref": "#/components/schemas/SafetyLevel",
            "description": "New safety level"
          }
        },
        "type": "object",
        "required": [
          "safety_level"
        ],
        "title": "SafetyConfigRequest",
        "description": "Request to update safety configuration."
      },
      "SafetyLevel": {
        "type": "string",
        "enum": [
          "strict",
          "moderate",
          "permissive"
        ],
        "title": "SafetyLevel",
        "description": "Safety validation levels."
      },
      "SafetyReportResponse": {
        "properties": {
          "is_safe": {
            "type": "boolean",
            "title": "Is Safe"
          },
          "blocking_reasons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Blocking Reasons"
          },
          "system_state": {
            "additionalProperties": true,
            "type": "object",
            "title": "System State"
          },
          "interlocks": {
            "additionalProperties": true,
            "type": "object",
            "title": "Interlocks"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "is_safe",
          "blocking_reasons",
          "system_state",
          "interlocks",
          "recommendations"
        ],
        "title": "SafetyReportResponse",
        "description": "Safety validation report."
      },
      "SecurityAlertResponse": {
        "properties": {
          "alert_id": {
            "type": "string",
            "title": "Alert Id"
          },
          "timestamp": {
            "type": "number",
            "title": "Timestamp"
          },
          "anomaly_type": {
            "type": "string",
            "title": "Anomaly Type"
          },
          "severity": {
            "type": "string",
            "title": "Severity"
          },
          "source_address": {
            "type": "integer",
            "title": "Source Address"
          },
          "source_address_hex": {
            "type": "string",
            "title": "Source Address Hex"
          },
          "pgn": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pgn"
          },
          "pgn_hex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pgn Hex"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "evidence": {
            "additionalProperties": true,
            "type": "object",
            "title": "Evidence"
          },
          "mitigation_action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mitigation Action"
          }
        },
        "type": "object",
        "required": [
          "alert_id",
          "timestamp",
          "anomaly_type",
          "severity",
          "source_address",
          "source_address_hex",
          "pgn",
          "pgn_hex",
          "description",
          "evidence",
          "mitigation_action"
        ],
        "title": "SecurityAlertResponse",
        "description": "Response for security alerts."
      },
      "SecurityConfiguration": {
        "properties": {
          "pin_policy": {
            "$ref": "#/components/schemas/PINSecurityPolicy"
          },
          "rate_limiting": {
            "$ref": "#/components/schemas/RateLimitingPolicy"
          },
          "authentication": {
            "$ref": "#/components/schemas/AuthenticationPolicy"
          },
          "audit": {
            "$ref": "#/components/schemas/AuditPolicy"
          },
          "network": {
            "$ref": "#/components/schemas/NetworkSecurityPolicy"
          },
          "config_version": {
            "type": "string",
            "title": "Config Version",
            "description": "Configuration version",
            "default": "1.0"
          },
          "last_updated": {
            "type": "string",
            "title": "Last Updated"
          },
          "updated_by": {
            "type": "string",
            "title": "Updated By",
            "description": "Who last updated the configuration",
            "default": "system"
          },
          "security_mode": {
            "type": "string",
            "title": "Security Mode",
            "description": "Overall security mode",
            "default": "standard"
          },
          "rv_deployment_mode": {
            "type": "boolean",
            "title": "Rv Deployment Mode",
            "description": "Optimize for RV deployment scenarios",
            "default": true
          }
        },
        "type": "object",
        "title": "SecurityConfiguration",
        "description": "Complete security configuration for RV-C systems."
      },
      "SecurityDashboardData": {
        "properties": {
          "stats": {
            "additionalProperties": true,
            "type": "object",
            "title": "Stats"
          },
          "recent_events": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Recent Events"
          },
          "system_health": {
            "additionalProperties": true,
            "type": "object",
            "title": "System Health"
          },
          "websocket_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "Websocket Info"
          }
        },
        "type": "object",
        "required": [
          "stats",
          "recent_events",
          "system_health",
          "websocket_info"
        ],
        "title": "SecurityDashboardData",
        "description": "Complete security dashboard data."
      },
      "SecurityModeUpdateRequest": {
        "properties": {
          "mode": {
            "type": "string",
            "title": "Mode",
            "description": "Security mode to apply"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for mode change",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "mode"
        ],
        "title": "SecurityModeUpdateRequest",
        "description": "Security mode update request."
      },
      "SecurityModeUpdateResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether mode update succeeded"
          },
          "previous_mode": {
            "type": "string",
            "title": "Previous Mode",
            "description": "Previous security mode"
          },
          "new_mode": {
            "type": "string",
            "title": "New Mode",
            "description": "New security mode"
          },
          "updated_by": {
            "type": "string",
            "title": "Updated By",
            "description": "Who updated the mode"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Update status message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "previous_mode",
          "new_mode",
          "updated_by",
          "message"
        ],
        "title": "SecurityModeUpdateResponse",
        "description": "Security mode update response."
      },
      "SecurityStatusResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "uptime_seconds": {
            "type": "number",
            "title": "Uptime Seconds"
          },
          "stats": {
            "additionalProperties": true,
            "type": "object",
            "title": "Stats"
          },
          "alert_summary": {
            "additionalProperties": true,
            "type": "object",
            "title": "Alert Summary"
          },
          "storm_detector": {
            "additionalProperties": true,
            "type": "object",
            "title": "Storm Detector"
          },
          "acl_status": {
            "additionalProperties": true,
            "type": "object",
            "title": "Acl Status"
          },
          "rate_limiting": {
            "additionalProperties": true,
            "type": "object",
            "title": "Rate Limiting"
          }
        },
        "type": "object",
        "required": [
          "status",
          "uptime_seconds",
          "stats",
          "alert_summary",
          "storm_detector",
          "acl_status",
          "rate_limiting"
        ],
        "title": "SecurityStatusResponse",
        "description": "Response for security monitoring status."
      },
      "ServiceHealthDetail": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "$ref": "#/components/schemas/backend__core__service_registry__ServiceStatus"
          },
          "health_status": {
            "$ref": "#/components/schemas/HealthStatus"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "last_check": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Check"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "health_status"
        ],
        "title": "ServiceHealthDetail",
        "description": "Detailed health information for a single service."
      },
      "ServiceStatus-Input": {
        "type": "string",
        "enum": [
          "PENDING",
          "STARTING",
          "HEALTHY",
          "DEGRADED",
          "FAILED"
        ],
        "title": "ServiceStatus",
        "description": "Service lifecycle status."
      },
      "ServiceTimingInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Service name"
          },
          "startup_time_ms": {
            "type": "number",
            "title": "Startup Time Ms",
            "description": "Service startup time in milliseconds"
          },
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether service started successfully"
          },
          "dependencies": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dependencies",
            "description": "Service dependencies"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Service tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "startup_time_ms",
          "success"
        ],
        "title": "ServiceTimingInfo",
        "description": "Service startup timing information."
      },
      "StartRecordingRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name for the recording session"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description of the recording",
            "default": ""
          },
          "format": {
            "$ref": "#/components/schemas/RecordingFormat",
            "description": "Output format",
            "default": "json"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RecordingFilters"
              },
              {
                "type": "null"
              }
            ],
            "description": "Recording filters"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "StartRecordingRequest",
        "description": "Request to start a new recording."
      },
      "StartReplayRequest": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Recording filename to replay"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReplayOptionsRequest"
              },
              {
                "type": "null"
              }
            ],
            "description": "Replay options"
          }
        },
        "type": "object",
        "required": [
          "filename"
        ],
        "title": "StartReplayRequest",
        "description": "Request to start replay."
      },
      "StartupHealthStatus": {
        "properties": {
          "healthy": {
            "type": "boolean",
            "title": "Healthy",
            "description": "Overall startup health status"
          },
          "total_startup_time_ms": {
            "type": "number",
            "title": "Total Startup Time Ms",
            "description": "Total startup time in milliseconds"
          },
          "services_started": {
            "type": "integer",
            "title": "Services Started",
            "description": "Number of services successfully started"
          },
          "services_failed": {
            "type": "integer",
            "title": "Services Failed",
            "description": "Number of services that failed to start"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings",
            "description": "Startup warnings"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "description": "Startup errors"
          },
          "performance_grade": {
            "type": "string",
            "title": "Performance Grade",
            "description": "Performance grade (A, B, C, D, F)"
          },
          "meets_baseline": {
            "type": "boolean",
            "title": "Meets Baseline",
            "description": "Whether startup meets performance baseline"
          }
        },
        "type": "object",
        "required": [
          "healthy",
          "total_startup_time_ms",
          "services_started",
          "services_failed",
          "performance_grade",
          "meets_baseline"
        ],
        "title": "StartupHealthStatus",
        "description": "Startup health validation status."
      },
      "StartupPerformanceReport": {
        "properties": {
          "total_startup_time_ms": {
            "type": "number",
            "title": "Total Startup Time Ms",
            "description": "Total startup time"
          },
          "service_registry_time_ms": {
            "type": "number",
            "title": "Service Registry Time Ms",
            "description": "ServiceRegistry initialization time"
          },
          "service_count": {
            "type": "integer",
            "title": "Service Count",
            "description": "Number of services"
          },
          "average_service_time_ms": {
            "type": "number",
            "title": "Average Service Time Ms",
            "description": "Average service startup time"
          },
          "slowest_services": {
            "items": {
              "$ref": "#/components/schemas/ServiceTimingInfo"
            },
            "type": "array",
            "title": "Slowest Services",
            "description": "5 slowest services"
          },
          "baseline_comparison": {
            "additionalProperties": true,
            "type": "object",
            "title": "Baseline Comparison",
            "description": "Baseline performance comparison"
          },
          "health_checks": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Health Checks",
            "description": "Component health check results"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings",
            "description": "Performance warnings"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "description": "Performance errors"
          },
          "performance_analysis": {
            "additionalProperties": true,
            "type": "object",
            "title": "Performance Analysis",
            "description": "Performance analysis"
          }
        },
        "type": "object",
        "required": [
          "total_startup_time_ms",
          "service_registry_time_ms",
          "service_count",
          "average_service_time_ms",
          "slowest_services",
          "baseline_comparison",
          "health_checks",
          "warnings",
          "errors",
          "performance_analysis"
        ],
        "title": "StartupPerformanceReport",
        "description": "Comprehensive startup performance report."
      },
      "SystemAnalytics": {
        "properties": {
          "alerts": {
            "items": {
              "$ref": "#/components/schemas/ActiveAlert"
            },
            "type": "array",
            "title": "Alerts",
            "description": "Active system alerts"
          },
          "performance_trends": {
            "additionalProperties": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Performance Trends",
            "description": "Performance trend data"
          },
          "health_checks": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Health Checks",
            "description": "Health check results"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations",
            "description": "System optimization recommendations"
          }
        },
        "type": "object",
        "required": [
          "alerts",
          "performance_trends",
          "health_checks",
          "recommendations"
        ],
        "title": "SystemAnalytics",
        "description": "System analytics and monitoring data."
      },
      "SystemInfo": {
        "properties": {
          "hostname": {
            "type": "string",
            "title": "Hostname",
            "description": "System hostname"
          },
          "platform": {
            "type": "string",
            "title": "Platform",
            "description": "Operating system platform"
          },
          "architecture": {
            "type": "string",
            "title": "Architecture",
            "description": "System architecture"
          },
          "python_version": {
            "type": "string",
            "title": "Python Version",
            "description": "Python version"
          },
          "uptime_seconds": {
            "type": "number",
            "title": "Uptime Seconds",
            "description": "System uptime in seconds"
          },
          "timestamp": {
            "type": "number",
            "title": "Timestamp",
            "description": "Info timestamp"
          }
        },
        "type": "object",
        "required": [
          "hostname",
          "platform",
          "architecture",
          "python_version",
          "uptime_seconds",
          "timestamp"
        ],
        "title": "SystemInfo",
        "description": "System information"
      },
      "SystemStateUpdate": {
        "properties": {
          "vehicle_speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vehicle Speed",
            "description": "Vehicle speed in mph"
          },
          "parking_brake": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parking Brake",
            "description": "Parking brake engaged status"
          },
          "leveling_jacks_down": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Leveling Jacks Down",
            "description": "Leveling jacks deployed status"
          },
          "engine_running": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Engine Running",
            "description": "Engine running status"
          },
          "transmission_gear": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transmission Gear",
            "description": "Current transmission gear"
          },
          "all_slides_retracted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "All Slides Retracted",
            "description": "All slides retracted status"
          }
        },
        "type": "object",
        "title": "SystemStateUpdate",
        "description": "System state update model."
      },
      "SystemStatus": {
        "properties": {
          "overall_health": {
            "type": "string",
            "title": "Overall Health",
            "description": "Overall system health: excellent/good/fair/poor/critical"
          },
          "health_score": {
            "type": "number",
            "title": "Health Score",
            "description": "Health score 0-100"
          },
          "active_systems": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Active Systems",
            "description": "List of active systems"
          },
          "degraded_systems": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Degraded Systems",
            "description": "Systems with issues"
          },
          "last_assessment": {
            "type": "number",
            "title": "Last Assessment",
            "description": "Last health assessment timestamp"
          }
        },
        "type": "object",
        "required": [
          "overall_health",
          "health_score",
          "active_systems",
          "degraded_systems",
          "last_assessment"
        ],
        "title": "SystemStatus",
        "description": "Overall system health status"
      },
      "SystemStatusResponse": {
        "properties": {
          "pin_types_configured": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Pin Types Configured",
            "description": "Available PIN types"
          },
          "active_sessions": {
            "type": "integer",
            "title": "Active Sessions",
            "description": "Number of active sessions"
          },
          "locked_users": {
            "type": "integer",
            "title": "Locked Users",
            "description": "Number of locked out users"
          },
          "total_attempts_today": {
            "type": "integer",
            "title": "Total Attempts Today",
            "description": "Total PIN attempts today"
          },
          "healthy": {
            "type": "boolean",
            "title": "Healthy",
            "description": "System health status"
          }
        },
        "type": "object",
        "required": [
          "pin_types_configured",
          "active_sessions",
          "locked_users",
          "total_attempts_today",
          "healthy"
        ],
        "title": "SystemStatusResponse",
        "description": "PIN system status response."
      },
      "TelemetryRequest": {
        "properties": {
          "protocol": {
            "type": "string",
            "title": "Protocol",
            "description": "Protocol name (rvc, j1939, firefly, spartan_k2)"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms",
            "description": "Processing time in milliseconds"
          },
          "message_size": {
            "type": "integer",
            "title": "Message Size",
            "description": "Message size in bytes",
            "default": 0
          },
          "interface": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interface",
            "description": "CAN interface name"
          }
        },
        "type": "object",
        "required": [
          "protocol",
          "processing_time_ms"
        ],
        "title": "TelemetryRequest",
        "description": "Request model for recording telemetry data."
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in"
        ],
        "title": "Token",
        "description": "JWT token response model."
      },
      "TokenPair": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "refresh_expires_in": {
            "type": "integer",
            "title": "Refresh Expires In"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in",
          "refresh_expires_in"
        ],
        "title": "TokenPair",
        "description": "Access and refresh token pair response model."
      },
      "UnlockAccountRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "username"
        ],
        "title": "UnlockAccountRequest",
        "description": "Account unlock request model."
      },
      "UserInfo": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "user"
          },
          "mode": {
            "type": "string",
            "title": "Mode"
          },
          "authenticated": {
            "type": "boolean",
            "title": "Authenticated",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "mode"
        ],
        "title": "UserInfo",
        "description": "User information response model."
      },
      "UserInvitationRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "user"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "UserInvitationRequest",
        "description": "Request model for creating user invitations."
      },
      "UserInvitationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "invitation_sent": {
            "type": "boolean",
            "title": "Invitation Sent"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "invitation_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invitation Link"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "invitation_sent",
          "expires_at"
        ],
        "title": "UserInvitationResponse",
        "description": "Response model for user invitation operations."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ValidationResponse": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "description": "Whether configuration is valid"
          },
          "issues": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Issues",
            "description": "Configuration issues found"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations",
            "description": "Configuration recommendations"
          },
          "last_validated": {
            "type": "string",
            "title": "Last Validated",
            "description": "Last validation timestamp"
          },
          "config_version": {
            "type": "string",
            "title": "Config Version",
            "description": "Configuration version"
          },
          "security_mode": {
            "type": "string",
            "title": "Security Mode",
            "description": "Current security mode"
          }
        },
        "type": "object",
        "required": [
          "valid",
          "issues",
          "recommendations",
          "last_validated",
          "config_version",
          "security_mode"
        ],
        "title": "ValidationResponse",
        "description": "Configuration validation response."
      },
      "WebSocketLatencyRequest": {
        "properties": {
          "latency_ms": {
            "type": "number",
            "title": "Latency Ms",
            "description": "WebSocket latency in milliseconds"
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id",
            "description": "Connection identifier"
          }
        },
        "type": "object",
        "required": [
          "latency_ms"
        ],
        "title": "WebSocketLatencyRequest",
        "description": "Request model for recording WebSocket latency."
      },
      "backend__api__domains__diagnostics__SystemMetrics": {
        "properties": {
          "cpu_usage": {
            "type": "number",
            "title": "Cpu Usage",
            "description": "CPU usage percentage 0-100"
          },
          "memory_usage": {
            "type": "number",
            "title": "Memory Usage",
            "description": "Memory usage percentage 0-100"
          },
          "can_bus_load": {
            "type": "number",
            "title": "Can Bus Load",
            "description": "CAN bus load percentage 0-100"
          },
          "message_rate": {
            "type": "number",
            "title": "Message Rate",
            "description": "Messages per second"
          },
          "error_rate": {
            "type": "number",
            "title": "Error Rate",
            "description": "Error rate percentage 0-100"
          },
          "uptime_seconds": {
            "type": "number",
            "title": "Uptime Seconds",
            "description": "System uptime in seconds"
          },
          "timestamp": {
            "type": "number",
            "title": "Timestamp",
            "description": "Metrics timestamp"
          }
        },
        "type": "object",
        "required": [
          "cpu_usage",
          "memory_usage",
          "can_bus_load",
          "message_rate",
          "error_rate",
          "uptime_seconds",
          "timestamp"
        ],
        "title": "SystemMetrics",
        "description": "System performance metrics for diagnostics"
      },
      "backend__api__domains__system__ServiceStatus": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Service name"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service status: healthy/degraded/unhealthy"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether service is enabled"
          },
          "last_check": {
            "type": "number",
            "title": "Last Check",
            "description": "Last health check timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "enabled",
          "last_check"
        ],
        "title": "ServiceStatus",
        "description": "Service status information"
      },
      "backend__api__routers__diagnostics__SystemHealthResponse": {
        "properties": {
          "overall_health": {
            "type": "number",
            "title": "Overall Health"
          },
          "system_scores": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "System Scores"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          },
          "last_assessment": {
            "type": "number",
            "title": "Last Assessment"
          },
          "active_dtcs": {
            "type": "integer",
            "title": "Active Dtcs"
          }
        },
        "type": "object",
        "required": [
          "overall_health",
          "system_scores",
          "status",
          "recommendations",
          "last_assessment",
          "active_dtcs"
        ],
        "title": "SystemHealthResponse",
        "description": "System health response model matching frontend expectations."
      },
      "backend__api__routers__notification_analytics__DashboardMetrics": {
        "properties": {
          "summary": {
            "additionalProperties": true,
            "type": "object",
            "title": "Summary",
            "description": "Summary metrics"
          },
          "channels": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Channels",
            "description": "Channel breakdown"
          },
          "recent_activity": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Recent Activity",
            "description": "Recent activity"
          },
          "queue_health": {
            "additionalProperties": true,
            "type": "object",
            "title": "Queue Health",
            "description": "Queue health status"
          },
          "trending": {
            "additionalProperties": true,
            "type": "object",
            "title": "Trending",
            "description": "Trending metrics"
          }
        },
        "type": "object",
        "required": [
          "summary",
          "channels",
          "recent_activity",
          "queue_health",
          "trending"
        ],
        "title": "DashboardMetrics",
        "description": "Response model for dashboard metrics."
      },
      "backend__api__routers__notification_dashboard__DashboardMetrics": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "time_range_hours": {
            "type": "integer",
            "title": "Time Range Hours",
            "description": "Time range for metrics"
          },
          "total_notifications": {
            "type": "integer",
            "title": "Total Notifications",
            "description": "Total notifications processed"
          },
          "successful_notifications": {
            "type": "integer",
            "title": "Successful Notifications",
            "description": "Successfully delivered notifications"
          },
          "failed_notifications": {
            "type": "integer",
            "title": "Failed Notifications",
            "description": "Failed notification deliveries"
          },
          "rate_limited_notifications": {
            "type": "integer",
            "title": "Rate Limited Notifications",
            "description": "Rate limited notifications"
          },
          "debounced_notifications": {
            "type": "integer",
            "title": "Debounced Notifications",
            "description": "Debounced duplicate notifications"
          },
          "avg_processing_time_ms": {
            "type": "number",
            "title": "Avg Processing Time Ms",
            "description": "Average processing time"
          },
          "median_processing_time_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median Processing Time Ms",
            "description": "Median processing time"
          },
          "p95_processing_time_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "P95 Processing Time Ms",
            "description": "95th percentile processing time"
          },
          "notifications_per_hour": {
            "type": "number",
            "title": "Notifications Per Hour",
            "description": "Notification rate per hour"
          },
          "peak_hour_volume": {
            "type": "integer",
            "title": "Peak Hour Volume",
            "description": "Peak hourly notification volume"
          },
          "channel_stats": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Channel Stats",
            "description": "Per-channel statistics"
          },
          "level_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Level Distribution",
            "description": "Notifications by level"
          },
          "hourly_volume": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Hourly Volume",
            "description": "Hourly volume trend"
          }
        },
        "type": "object",
        "required": [
          "time_range_hours",
          "total_notifications",
          "successful_notifications",
          "failed_notifications",
          "rate_limited_notifications",
          "debounced_notifications",
          "avg_processing_time_ms",
          "median_processing_time_ms",
          "p95_processing_time_ms",
          "notifications_per_hour",
          "peak_hour_volume"
        ],
        "title": "DashboardMetrics",
        "description": "Comprehensive notification system metrics."
      },
      "backend__api__routers__security_dashboard__SystemHealthResponse": {
        "properties": {
          "overall_status": {
            "type": "string",
            "title": "Overall Status"
          },
          "components": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Components"
          },
          "last_updated": {
            "type": "number",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "overall_status",
          "components",
          "last_updated"
        ],
        "title": "SystemHealthResponse",
        "description": "System health status response."
      },
      "backend__core__service_registry__ServiceStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "STARTING",
          "HEALTHY",
          "DEGRADED",
          "FAILED"
        ],
        "title": "ServiceStatus",
        "description": "Service lifecycle status."
      },
      "backend__models__dashboard__SystemMetrics": {
        "properties": {
          "uptime_seconds": {
            "type": "integer",
            "title": "Uptime Seconds",
            "description": "System uptime in seconds"
          },
          "message_rate": {
            "type": "number",
            "title": "Message Rate",
            "description": "CAN messages per second"
          },
          "error_rate": {
            "type": "number",
            "title": "Error Rate",
            "description": "Error rate percentage"
          },
          "memory_usage_mb": {
            "type": "number",
            "title": "Memory Usage Mb",
            "description": "Memory usage in MB"
          },
          "cpu_usage_percent": {
            "type": "number",
            "title": "Cpu Usage Percent",
            "description": "CPU usage percentage"
          },
          "websocket_connections": {
            "type": "integer",
            "title": "Websocket Connections",
            "description": "Active WebSocket connections"
          }
        },
        "type": "object",
        "required": [
          "uptime_seconds",
          "message_rate",
          "error_rate",
          "memory_usage_mb",
          "cpu_usage_percent",
          "websocket_connections"
        ],
        "title": "SystemMetrics",
        "description": "System performance metrics."
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/auth/login"
          }
        }
      }
    }
  }
}
