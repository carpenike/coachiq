name: Deploy Documentation to GitHub Pages

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --extras dev

      - name: Generate OpenAPI schema
        run: |
          poetry run python scripts/export_openapi.py

      - name: Build documentation
        run: |
          poetry run mkdocs build
          touch site/.nojekyll

      - name: Remove symlinks from site directory
        run: |
          find site -type l -exec rm -v {} +

      - name: Check site directory size
        run: du -sh site

      - name: List all symlinks in site directory (debug)
        run: |
          find site -type l

      - name: List all files with more than one hard link (debug)
        run: |
          find site -type f -links +1 -exec ls -li {} +

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-docs]
    if: always() && needs.build-docs.result == 'success'
    steps:
      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: _site

      - name: Move site files to root of _site (if needed)
        run: |
          if [ -d "_site/site" ]; then
            mv _site/site/* _site/
            rmdir _site/site
          fi

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
