# GitHub Actions workflow for Nix-based continuous integration
name: "Nix-based CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  nix-flake-check:
    name: "Run Nix Flake Checks & Build"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Install Nix (with flakes enabled)"
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: "Cache Poetry virtualenv"
        uses: actions/cache@v4
        with:
          # Cache the .venv folder based on poetry.lock
          path: .venv
          key: poetry-venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-venv-${{ runner.os }}-

      - name: "Perform Nix flake checks"
        run: |
          # Validate all flake outputs, checks, and apps
          nix flake check

      - name: "Build rvc2api Nix package"
        run: |
          # Build (and optionally link) the rvc2api package
          nix build .#rvc2api --no-link
